

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Oct 26 09:47:25 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 1.41
    31                           ; Generated 25/01/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  001000                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for EscreveInteiroLCD@F4004
    70  001000  30                 	db	48
    71  001001  30                 	db	48
    72  001002  30                 	db	48
    73  001003  30                 	db	48
    74  001004  30                 	db	48
    75  001005  30                 	db	48
    76  001006  00                 	db	0
    77                           
    78                           	psect	smallconst
    79  000800                     __psmallconst:
    80                           	opt stack 0
    81  000800  00                 	db	0
    82  000801  0001               	dw	1
    83  000803  0000               	dw	0
    84  000805  000A               	dw	10
    85  000807  0000               	dw	0
    86  000809  0064               	dw	100
    87  00080B  0000               	dw	0
    88  00080D  03E8               	dw	1000
    89  00080F  0000               	dw	0
    90  000811  2710               	dw	10000
    91  000813  0000               	dw	0
    92  000815  86A0               	dw	34464
    93  000817  0001               	dw	1
    94  000819  4240               	dw	16960
    95  00081B  000F               	dw	15
    96  00081D  9680               	dw	38528
    97  00081F  0098               	dw	152
    98  000821  E100               	dw	57600
    99  000823  05F5               	dw	1525
   100  000825  CA00               	dw	51712
   101  000827  3B9A               	dw	15258
   102  000829                     __end_of_dpowers:
   103                           	opt stack 0
   104  000829                     main@F3940:
   105                           	opt stack 0
   106  000829  20                 	db	32
   107  00082A  20                 	db	32
   108  00082B  20                 	db	32
   109  00082C  20                 	db	32
   110  00082D  20                 	db	32
   111  00082E  20                 	db	32
   112  00082F  20                 	db	32
   113  000830  20                 	db	32
   114  000831  20                 	db	32
   115  000832  20                 	db	32
   116  000833  20                 	db	32
   117  000834  20                 	db	32
   118  000835  20                 	db	32
   119  000836  20                 	db	32
   120  000837  20                 	db	32
   121  000838  20                 	db	32
   122  000839  00                 	db	0
   123  00083A                     __end_ofmain@F3940:
   124                           	opt stack 0
   125  00083A                     main@F3938:
   126                           	opt stack 0
   127  00083A  20                 	db	32
   128  00083B  20                 	db	32
   129  00083C  20                 	db	32
   130  00083D  20                 	db	32
   131  00083E  20                 	db	32
   132  00083F  20                 	db	32
   133  000840  20                 	db	32
   134  000841  20                 	db	32
   135  000842  20                 	db	32
   136  000843  20                 	db	32
   137  000844  6B                 	db	107
   138  000845  6D                 	db	109
   139  000846  20                 	db	32
   140  000847  68                 	db	104
   141  000848  20                 	db	32
   142  000849  20                 	db	32
   143  00084A  00                 	db	0
   144  00084B                     __end_ofmain@F3938:
   145                           	opt stack 0
   146  00084B                     main@F3936:
   147                           	opt stack 0
   148  00084B  52                 	db	82
   149  00084C  41                 	db	65
   150  00084D  44                 	db	68
   151  00084E  41                 	db	65
   152  00084F  52                 	db	82
   153  000850  20                 	db	32
   154  000851  56                 	db	86
   155  000852  45                 	db	69
   156  000853  4C                 	db	76
   157  000854  4F                 	db	79
   158  000855  43                 	db	67
   159  000856  49                 	db	73
   160  000857  44                 	db	68
   161  000858  41                 	db	65
   162  000859  44                 	db	68
   163  00085A  45                 	db	69
   164  00085B  00                 	db	0
   165  00085C                     __end_ofmain@F3936:
   166                           	opt stack 0
   167  00085C                     main@F3934:
   168                           	opt stack 0
   169  00085C  46                 	db	70
   170  00085D  41                 	db	65
   171  00085E  54                 	db	84
   172  00085F  45                 	db	69
   173  000860  43                 	db	67
   174  000861  20                 	db	32
   175  000862  53                 	db	83
   176  000863  54                 	db	84
   177  000864  4F                 	db	79
   178  000865  2E                 	db	46
   179  000866  20                 	db	32
   180  000867  41                 	db	65
   181  000868  4E                 	db	78
   182  000869  44                 	db	68
   183  00086A  52                 	db	82
   184  00086B  45                 	db	69
   185  00086C  00                 	db	0
   186  00086D                     __end_ofmain@F3934:
   187                           	opt stack 0
   188  0000                     _PORTEbits	set	3972
   189  0000                     _TRISE	set	3990
   190  0000                     _ADCON1	set	4033
   191  0000                     _TMR0H	set	4055
   192  0000                     _TMR0L	set	4054
   193  0000                     _T0CON	set	4053
   194  0000                     _PORTDbits	set	3971
   195  0000                     _TRISDbits	set	3989
   196  0000                     _TMR0IF	set	32658
   197  00086D  25                 	db	37
   198  00086E  6C                 	db	108	;'l'
   199  00086F  75                 	db	117	;'u'
   200  000870  2E                 	db	46
   201  000871  25                 	db	37
   202  000872  36                 	db	54	;'6'
   203  000873  2E                 	db	46
   204  000874  36                 	db	54	;'6'
   205  000875  6C                 	db	108	;'l'
   206  000876  75                 	db	117	;'u'
   207  000877  00                 	db	0
   208  000878                     STR_1:
   209  000878  2E                 	db	46
   210  000879  00                 	db	0
   211  00087A  00                 	db	0	; dummy byte at the end
   212  0000                     
   213                           ; #config settings
   214                           
   215                           	psect	cinit
   216  000F84                     __pcinit:
   217                           	opt stack 0
   218  000F84                     start_initialization:
   219                           	opt stack 0
   220  000F84                     __initialization:
   221                           	opt stack 0
   222                           
   223                           ; Initialize objects allocated to COMRAM (7 bytes)
   224                           ; load TBLPTR registers with __pidataCOMRAM
   225  000F84  0E00               	movlw	low __pidataCOMRAM
   226  000F86  6EF6               	movwf	tblptrl,c
   227  000F88  0E10               	movlw	high __pidataCOMRAM
   228  000F8A  6EF7               	movwf	tblptrh,c
   229  000F8C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   230  000F8E  6EF8               	movwf	tblptru,c
   231  000F90  EE00  F035         	lfsr	0,__pdataCOMRAM
   232  000F94  EE10 F007          	lfsr	1,7
   233  000F98                     copy_data0:
   234  000F98  0009               	tblrd		*+
   235  000F9A  CFF5 FFEE          	movff	tablat,postinc0
   236  000F9E  50E5               	movf	postdec1,w,c
   237  000FA0  50E1               	movf	fsr1l,w,c
   238  000FA2  E1FA               	bnz	copy_data0
   239                           
   240                           ; Clear objects allocated to COMRAM (17 bytes)
   241  000FA4  EE00  F024         	lfsr	0,__pbssCOMRAM
   242  000FA8  0E11               	movlw	17
   243  000FAA                     clear_0:
   244  000FAA  6AEE               	clrf	postinc0,c
   245  000FAC  06E8               	decf	wreg,f,c
   246  000FAE  E1FD               	bnz	clear_0
   247  000FB0                     end_of_initialization:
   248                           	opt stack 0
   249  000FB0                     __end_of__initialization:
   250                           	opt stack 0
   251  000FB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   252  000FB2  6EF8               	movwf	tblptru,c
   253  000FB4  0100               	movlb	0
   254  000FB6  EF3E  F004         	goto	_main	;jump to C main() function
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           postdec1	equ	0xFE5
   262                           fsr1l	equ	0xFE1
   263                           
   264                           	psect	bssCOMRAM
   265  000024                     __pbssCOMRAM:
   266                           	opt stack 0
   267  000024                     ftoa@buf:
   268                           	opt stack 0
   269  000024                     	ds	17
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           postdec1	equ	0xFE5
   277                           fsr1l	equ	0xFE1
   278                           
   279                           	psect	dataCOMRAM
   280  000035                     __pdataCOMRAM:
   281                           	opt stack 0
   282  000035                     EscreveInteiroLCD@F4004:
   283                           	opt stack 0
   284  000035                     	ds	7
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           postdec1	equ	0xFE5
   292                           fsr1l	equ	0xFE1
   293                           
   294                           	psect	cstackBANK0
   295  000060                     __pcstackBANK0:
   296                           	opt stack 0
   297  000060                     main@Texto_0:
   298                           	opt stack 0
   299                           
   300                           ; 17 bytes @ 0x0
   301  000060                     	ds	17
   302  000071                     main@Texto_3:
   303                           	opt stack 0
   304                           
   305                           ; 17 bytes @ 0x11
   306  000071                     	ds	17
   307  000082                     main@Texto_4:
   308                           	opt stack 0
   309                           
   310                           ; 17 bytes @ 0x22
   311  000082                     	ds	17
   312  000093                     main@Texto_1:
   313                           	opt stack 0
   314                           
   315                           ; 17 bytes @ 0x33
   316  000093                     	ds	17
   317  0000A4                     main@velocDec:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x44
   321  0000A4                     	ds	2
   322  0000A6                     main@velocidade:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x46
   326  0000A6                     	ds	2
   327  0000A8                     main@velocInt:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x48
   331  0000A8                     	ds	2
   332  0000AA                     main@contador:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x4A
   336  0000AA                     	ds	2
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           postdec1	equ	0xFE5
   344                           fsr1l	equ	0xFE1
   345                           
   346                           	psect	cstackCOMRAM
   347  000001                     __pcstackCOMRAM:
   348                           	opt stack 0
   349  000001                     ?___lwdiv:
   350                           	opt stack 0
   351  000001                     ?___lwmod:
   352                           	opt stack 0
   353  000001                     ?___aldiv:
   354                           	opt stack 0
   355  000001                     Delay@Cnt1:
   356                           	opt stack 0
   357  000001                     delay_ms@tempodeatraso:
   358                           	opt stack 0
   359  000001                     ___lwdiv@dividend:
   360                           	opt stack 0
   361  000001                     ___lwmod@dividend:
   362                           	opt stack 0
   363  000001                     ___aldiv@dividend:
   364                           	opt stack 0
   365                           
   366                           ; 4 bytes @ 0x0
   367  000001                     	ds	1
   368  000002                     Delay@Cnt2:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x1
   372  000002                     	ds	1
   373  000003                     ??_delay_ms:
   374  000003                     EscreveComandoLCD@cmd:
   375                           	opt stack 0
   376  000003                     EnderecoCursor@endereco:
   377                           	opt stack 0
   378  000003                     EscreveCaractereLCD@data:
   379                           	opt stack 0
   380  000003                     ___lwdiv@divisor:
   381                           	opt stack 0
   382  000003                     ___lwmod@divisor:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x2
   386  000003                     	ds	1
   387  000004                     ??_ConfiguraLCD:
   388  000004                     PosicaoCursorLCD@coluna:
   389                           	opt stack 0
   390  000004                     EscreveFraseRamLCD@buffer:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x3
   394  000004                     	ds	1
   395  000005                     PosicaoCursorLCD@linha:
   396                           	opt stack 0
   397  000005                     ___lwmod@counter:
   398                           	opt stack 0
   399  000005                     ___lwdiv@quotient:
   400                           	opt stack 0
   401  000005                     ___aldiv@divisor:
   402                           	opt stack 0
   403                           
   404                           ; 4 bytes @ 0x4
   405  000005                     	ds	1
   406  000006                     PosicaoCursorLCD@EnderecoLCD:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x5
   410  000006                     	ds	1
   411  000007                     ___lwdiv@counter:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x6
   415  000007                     	ds	1
   416  000008                     utoa@buf:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x7
   420  000008                     	ds	1
   421  000009                     ___aldiv@counter:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x8
   425  000009                     	ds	1
   426  00000A                     ___aldiv@sign:
   427                           	opt stack 0
   428  00000A                     utoa@val:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x9
   432  00000A                     	ds	1
   433  00000B                     ___aldiv@quotient:
   434                           	opt stack 0
   435                           
   436                           ; 4 bytes @ 0xA
   437  00000B                     	ds	1
   438  00000C                     utoa@base:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0xB
   442  00000C                     	ds	2
   443  00000E                     utoa@v:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0xD
   447  00000E                     	ds	2
   448  000010                     utoa@c:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0xF
   452  000010                     	ds	1
   453  000011                     itoa@buf:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x10
   457  000011                     	ds	2
   458  000013                     itoa@val:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x12
   462  000013                     	ds	2
   463  000015                     itoa@base:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x14
   467  000015                     	ds	2
   468  000017                     itoa@cp:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x16
   472  000017                     	ds	2
   473  000019                     EscreveInteiroLCD@valor:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x18
   477  000019                     	ds	2
   478  00001B                     EscreveInteiroLCD@texto:
   479                           	opt stack 0
   480                           
   481                           ; 7 bytes @ 0x1A
   482  00001B                     	ds	7
   483  000022                     ??_main:
   484                           
   485                           ; 1 bytes @ 0x21
   486  000022                     	ds	2
   487                           tblptru	equ	0xFF8
   488                           tblptrh	equ	0xFF7
   489                           tblptrl	equ	0xFF6
   490                           tablat	equ	0xFF5
   491                           postinc0	equ	0xFEE
   492                           wreg	equ	0xFE8
   493                           postdec1	equ	0xFE5
   494                           fsr1l	equ	0xFE1
   495                           
   496 ;;
   497 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   498 ;;
   499 ;; *************** function _main *****************
   500 ;; Defined at:
   501 ;;		line 40 in file "radar.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  Texto_1        17   51[BANK0 ] const unsigned char [17]
   506 ;;  Texto_4        17   34[BANK0 ] const unsigned char [17]
   507 ;;  Texto_3        17   17[BANK0 ] const unsigned char [17]
   508 ;;  Texto_0        17    0[BANK0 ] const unsigned char [17]
   509 ;;  contador        2   74[BANK0 ] unsigned int 
   510 ;;  velocInt        2   72[BANK0 ] unsigned int 
   511 ;;  velocidade      2   70[BANK0 ] unsigned int 
   512 ;;  velocDec        2   68[BANK0 ] unsigned int 
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   522 ;;      Params:         0       0       0       0       0       0       0       0       0
   523 ;;      Locals:         0      76       0       0       0       0       0       0       0
   524 ;;      Temps:          2       0       0       0       0       0       0       0       0
   525 ;;      Totals:         2      76       0       0       0       0       0       0       0
   526 ;;Total ram usage:       78 bytes
   527 ;; Hardware stack levels required when called:    4
   528 ;; This function calls:
   529 ;;		_ConfiguraLCD
   530 ;;		_EscreveComandoLCD
   531 ;;		_EscreveFraseRamLCD
   532 ;;		_EscreveInteiroLCD
   533 ;;		_PosicaoCursorLCD
   534 ;;		___aldiv
   535 ;;		___lwdiv
   536 ;;		_delay_ms
   537 ;; This function is called by:
   538 ;;		Startup code after reset
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text0
   543  00087C                     __ptext0:
   544                           	opt stack 0
   545  00087C                     _main:
   546                           	opt stack 27
   547                           
   548                           ;radar.c: 42: const unsigned char Texto_0[]="FATEC STO. ANDRE";
   549                           
   550                           ;incstack = 0
   551  00087C  0E5C               	movlw	low main@F3934
   552  00087E  6EF6               	movwf	tblptrl,c
   553  000880                     	if	1	;There is more than 1 active tblptr byte
   554  000880  0E08               	movlw	high main@F3934
   555  000882  6EF7               	movwf	tblptrh,c
   556  000884                     	endif
   557  000884                     	if	0	;There are less than 3 active tblptr bytes
   558  000884                     	endif
   559  000884  EE20  F060         	lfsr	2,main@Texto_0
   560  000888  0E10               	movlw	16
   561  00088A                     u1190:
   562  00088A  0009               	tblrd		*+
   563  00088C  CFF5 FFDE          	movff	tablat,postinc2
   564  000890  06E8               	decf	wreg,f,c
   565  000892  E2FB               	bc	u1190
   566                           
   567                           ;radar.c: 43: const unsigned char Texto_1[]="RADAR VELOCIDADE";
   568  000894  0E4B               	movlw	low main@F3936
   569  000896  6EF6               	movwf	tblptrl,c
   570  000898                     	if	1	;There is more than 1 active tblptr byte
   571  000898  0E08               	movlw	high main@F3936
   572  00089A  6EF7               	movwf	tblptrh,c
   573  00089C                     	endif
   574  00089C                     	if	0	;There are less than 3 active tblptr bytes
   575  00089C                     	endif
   576  00089C  EE20  F093         	lfsr	2,main@Texto_1
   577  0008A0  0E10               	movlw	16
   578  0008A2                     u1200:
   579  0008A2  0009               	tblrd		*+
   580  0008A4  CFF5 FFDE          	movff	tablat,postinc2
   581  0008A8  06E8               	decf	wreg,f,c
   582  0008AA  E2FB               	bc	u1200
   583                           
   584                           ;radar.c: 44: const unsigned char Texto_3[]="          km h  ";
   585  0008AC  0E3A               	movlw	low main@F3938
   586  0008AE  6EF6               	movwf	tblptrl,c
   587  0008B0                     	if	1	;There is more than 1 active tblptr byte
   588  0008B0  0E08               	movlw	high main@F3938
   589  0008B2  6EF7               	movwf	tblptrh,c
   590  0008B4                     	endif
   591  0008B4                     	if	0	;There are less than 3 active tblptr bytes
   592  0008B4                     	endif
   593  0008B4  EE20  F071         	lfsr	2,main@Texto_3
   594  0008B8  0E10               	movlw	16
   595  0008BA                     u1210:
   596  0008BA  0009               	tblrd		*+
   597  0008BC  CFF5 FFDE          	movff	tablat,postinc2
   598  0008C0  06E8               	decf	wreg,f,c
   599  0008C2  E2FB               	bc	u1210
   600                           
   601                           ;radar.c: 45: const unsigned char Texto_4[]="                ";
   602  0008C4  0E29               	movlw	low main@F3940
   603  0008C6  6EF6               	movwf	tblptrl,c
   604  0008C8                     	if	1	;There is more than 1 active tblptr byte
   605  0008C8  0E08               	movlw	high main@F3940
   606  0008CA  6EF7               	movwf	tblptrh,c
   607  0008CC                     	endif
   608  0008CC                     	if	0	;There are less than 3 active tblptr bytes
   609  0008CC                     	endif
   610  0008CC  EE20  F082         	lfsr	2,main@Texto_4
   611  0008D0  0E10               	movlw	16
   612  0008D2                     u1220:
   613  0008D2  0009               	tblrd		*+
   614  0008D4  CFF5 FFDE          	movff	tablat,postinc2
   615  0008D8  06E8               	decf	wreg,f,c
   616  0008DA  E2FB               	bc	u1220
   617                           
   618                           ;radar.c: 49: T0CON = 0b10001000;
   619  0008DC  0E88               	movlw	136
   620  0008DE  6ED5               	movwf	4053,c	;volatile
   621                           
   622                           ;radar.c: 59: TMR0L = 0x20;
   623  0008E0  0E20               	movlw	32
   624  0008E2  6ED6               	movwf	4054,c	;volatile
   625                           
   626                           ;radar.c: 60: TMR0H = 0xD1;
   627  0008E4  0ED1               	movlw	209
   628  0008E6  6ED7               	movwf	4055,c	;volatile
   629                           
   630                           ;radar.c: 62: ADCON1 = 0X0F;
   631  0008E8  0E0F               	movlw	15
   632  0008EA  6EC1               	movwf	4033,c	;volatile
   633                           
   634                           ;radar.c: 63: TRISE = 0xFF;
   635  0008EC  6896               	setf	3990,c	;volatile
   636                           
   637                           ;radar.c: 66: unsigned int contador;
   638                           ;radar.c: 67: unsigned int velocidade;
   639                           ;radar.c: 68: unsigned int velocInt;
   640                           ;radar.c: 69: unsigned int velocDec;
   641                           ;radar.c: 72: ConfiguraLCD();
   642  0008EE  ECDC  F005         	call	_ConfiguraLCD	;wreg free
   643                           
   644                           ;radar.c: 73: EscreveComandoLCD(0b00001100);
   645  0008F2  0E0C               	movlw	12
   646  0008F4  EC2B  F006         	call	_EscreveComandoLCD
   647                           
   648                           ;radar.c: 74: EscreveFraseRamLCD(Texto_0);
   649  0008F8  0E60               	movlw	low main@Texto_0
   650  0008FA  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   651  0008FC  0E00               	movlw	high main@Texto_0
   652  0008FE  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   653  000900  EC39  F007         	call	_EscreveFraseRamLCD	;wreg free
   654                           
   655                           ;radar.c: 75: PosicaoCursorLCD(2,1);
   656  000904  0E01               	movlw	1
   657  000906  6E04               	movwf	PosicaoCursorLCD@coluna,c
   658  000908  0E02               	movlw	2
   659  00090A  ECDF  F006         	call	_PosicaoCursorLCD
   660                           
   661                           ;radar.c: 76: EscreveFraseRamLCD(Texto_1);
   662  00090E  0E93               	movlw	low main@Texto_1
   663  000910  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   664  000912  0E00               	movlw	high main@Texto_1
   665  000914  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   666  000916  EC39  F007         	call	_EscreveFraseRamLCD	;wreg free
   667                           
   668                           ;radar.c: 78: delay_ms(5000);
   669  00091A  0E13               	movlw	19
   670  00091C  6E02               	movwf	delay_ms@tempodeatraso+1,c
   671  00091E  0E88               	movlw	136
   672  000920  6E01               	movwf	delay_ms@tempodeatraso,c
   673  000922  ECEF  F007         	call	_delay_ms	;wreg free
   674                           
   675                           ;radar.c: 80: PosicaoCursorLCD(1,1);
   676  000926  0E01               	movlw	1
   677  000928  6E04               	movwf	PosicaoCursorLCD@coluna,c
   678  00092A  0E01               	movlw	1
   679  00092C  ECDF  F006         	call	_PosicaoCursorLCD
   680                           
   681                           ;radar.c: 81: EscreveFraseRamLCD(Texto_1);
   682  000930  0E93               	movlw	low main@Texto_1
   683  000932  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   684  000934  0E00               	movlw	high main@Texto_1
   685  000936  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   686  000938  EC39  F007         	call	_EscreveFraseRamLCD	;wreg free
   687                           
   688                           ;radar.c: 82: PosicaoCursorLCD(2,1);
   689  00093C  0E01               	movlw	1
   690  00093E  6E04               	movwf	PosicaoCursorLCD@coluna,c
   691  000940  0E02               	movlw	2
   692  000942  ECDF  F006         	call	_PosicaoCursorLCD
   693                           
   694                           ;radar.c: 83: EscreveFraseRamLCD(Texto_4);
   695  000946  0E82               	movlw	low main@Texto_4
   696  000948  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   697  00094A  0E00               	movlw	high main@Texto_4
   698  00094C  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   699  00094E  EC39  F007         	call	_EscreveFraseRamLCD	;wreg free
   700  000952                     l1810:
   701                           
   702                           ;radar.c: 86: {
   703                           ;radar.c: 87: if(PORTEbits.RE0 == 0)
   704  000952  B084               	btfsc	3972,0,c	;volatile
   705  000954  D7FE               	goto	l1810
   706                           
   707                           ;radar.c: 88: {
   708                           ;radar.c: 89: contador = 0;
   709  000956  0E00               	movlw	0
   710  000958  0100               	movlb	0	; () banked
   711  00095A  6FAB               	movwf	(main@contador+1)& (0+255),b
   712  00095C  0E00               	movlw	0
   713  00095E  6FAA               	movwf	main@contador& (0+255),b
   714                           
   715                           ;radar.c: 90: while(PORTEbits.RE1 != 0)
   716  000960  D00A               	goto	l1822
   717  000962                     l177:
   718                           
   719                           ;radar.c: 91: {
   720                           ;radar.c: 92: if(TMR0IF == 1){
   721  000962  A4F2               	btfss	intcon,2,c	;volatile
   722  000964  D008               	goto	l1822
   723                           
   724                           ;radar.c: 93: TMR0IF = 0;
   725  000966  94F2               	bcf	intcon,2,c	;volatile
   726                           
   727                           ;radar.c: 94: contador++;
   728  000968  0100               	movlb	0	; () banked
   729  00096A  4BAA               	infsnz	main@contador& (0+255),f,b
   730  00096C  2BAB               	incf	(main@contador+1)& (0+255),f,b
   731                           
   732                           ; BSR set to: 0
   733                           ;radar.c: 95: TMR0L = 0x20;
   734  00096E  0E20               	movlw	32
   735  000970  6ED6               	movwf	4054,c	;volatile
   736                           
   737                           ; BSR set to: 0
   738                           ;radar.c: 96: TMR0H = 0xD1;
   739  000972  0ED1               	movlw	209
   740  000974  6ED7               	movwf	4055,c	;volatile
   741  000976                     l1822:
   742  000976  B284               	btfsc	3972,1,c	;volatile
   743  000978  D7F4               	goto	l177
   744                           
   745                           ;radar.c: 97: }
   746                           ;radar.c: 98: }
   747                           ;radar.c: 99: if(contador != 0){
   748  00097A  0100               	movlb	0	; () banked
   749  00097C  51AA               	movf	main@contador& (0+255),w,b
   750  00097E  0100               	movlb	0	; () banked
   751  000980  11AB               	iorwf	(main@contador+1)& (0+255),w,b
   752  000982  B4D8               	btfsc	status,2,c
   753  000984  D7E6               	goto	l1810
   754                           
   755                           ; BSR set to: 0
   756                           ;radar.c: 100: velocidade = 36000 / contador;
   757  000986  0EA0               	movlw	160
   758  000988  6E01               	movwf	___aldiv@dividend,c
   759  00098A  0E8C               	movlw	140
   760  00098C  6E02               	movwf	___aldiv@dividend+1,c
   761  00098E  0E00               	movlw	0
   762  000990  6E03               	movwf	___aldiv@dividend+2,c
   763  000992  0E00               	movlw	0
   764  000994  6E04               	movwf	___aldiv@dividend+3,c
   765  000996  C0AA  F005         	movff	main@contador,___aldiv@divisor
   766  00099A  C0AB  F006         	movff	main@contador+1,___aldiv@divisor+1
   767  00099E  6A07               	clrf	___aldiv@divisor+2,c
   768  0009A0  6A08               	clrf	___aldiv@divisor+3,c
   769  0009A2  EC24  F005         	call	___aldiv	;wreg free
   770  0009A6  C001  F0A6         	movff	?___aldiv,main@velocidade
   771  0009AA  C002  F0A7         	movff	?___aldiv+1,main@velocidade+1
   772                           
   773                           ;radar.c: 101: velocInt = velocidade / 10;
   774  0009AE  C0A6  F001         	movff	main@velocidade,___lwdiv@dividend
   775  0009B2  C0A7  F002         	movff	main@velocidade+1,___lwdiv@dividend+1
   776  0009B6  0E00               	movlw	0
   777  0009B8  6E04               	movwf	___lwdiv@divisor+1,c
   778  0009BA  0E0A               	movlw	10
   779  0009BC  6E03               	movwf	___lwdiv@divisor,c
   780  0009BE  EC10  F007         	call	___lwdiv	;wreg free
   781  0009C2  C001  F0A8         	movff	?___lwdiv,main@velocInt
   782  0009C6  C002  F0A9         	movff	?___lwdiv+1,main@velocInt+1
   783                           
   784                           ;radar.c: 102: velocDec = velocidade - velocInt;
   785  0009CA  C0A8  F022         	movff	main@velocInt,??_main
   786  0009CE  C0A9  F023         	movff	main@velocInt+1,??_main+1
   787  0009D2  1E22               	comf	??_main,f,c
   788  0009D4  1E23               	comf	??_main+1,f,c
   789  0009D6  4A22               	infsnz	??_main,f,c
   790  0009D8  2A23               	incf	??_main+1,f,c
   791  0009DA  0100               	movlb	0	; () banked
   792  0009DC  51A6               	movf	main@velocidade& (0+255),w,b
   793  0009DE  2422               	addwf	??_main,w,c
   794  0009E0  0100               	movlb	0	; () banked
   795  0009E2  6FA4               	movwf	main@velocDec& (0+255),b
   796  0009E4  0100               	movlb	0	; () banked
   797  0009E6  51A7               	movf	(main@velocidade+1)& (0+255),w,b
   798  0009E8  2023               	addwfc	??_main+1,w,c
   799  0009EA  0100               	movlb	0	; () banked
   800  0009EC  6FA5               	movwf	(main@velocDec+1)& (0+255),b
   801                           
   802                           ; BSR set to: 0
   803                           ;radar.c: 104: PosicaoCursorLCD(2,1);
   804  0009EE  0E01               	movlw	1
   805  0009F0  6E04               	movwf	PosicaoCursorLCD@coluna,c
   806  0009F2  0E02               	movlw	2
   807  0009F4  ECDF  F006         	call	_PosicaoCursorLCD
   808                           
   809                           ;radar.c: 105: EscreveFraseRamLCD(Texto_3);
   810  0009F8  0E71               	movlw	low main@Texto_3
   811  0009FA  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   812  0009FC  0E00               	movlw	high main@Texto_3
   813  0009FE  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   814  000A00  EC39  F007         	call	_EscreveFraseRamLCD	;wreg free
   815                           
   816                           ;radar.c: 106: PosicaoCursorLCD(2,3);
   817  000A04  0E03               	movlw	3
   818  000A06  6E04               	movwf	PosicaoCursorLCD@coluna,c
   819  000A08  0E02               	movlw	2
   820  000A0A  ECDF  F006         	call	_PosicaoCursorLCD
   821                           
   822                           ;radar.c: 107: EscreveInteiroLCD(velocInt);
   823  000A0E  C0A8  F019         	movff	main@velocInt,EscreveInteiroLCD@valor
   824  000A12  C0A9  F01A         	movff	main@velocInt+1,EscreveInteiroLCD@valor+1
   825  000A16  ECA4  F007         	call	_EscreveInteiroLCD	;wreg free
   826                           
   827                           ;radar.c: 108: PosicaoCursorLCD(2,6);
   828  000A1A  0E06               	movlw	6
   829  000A1C  6E04               	movwf	PosicaoCursorLCD@coluna,c
   830  000A1E  0E02               	movlw	2
   831  000A20  ECDF  F006         	call	_PosicaoCursorLCD
   832                           
   833                           ;radar.c: 109: EscreveFraseRamLCD(".");
   834  000A24  0E78               	movlw	low STR_1
   835  000A26  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   836  000A28  0E08               	movlw	high STR_1
   837  000A2A  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   838  000A2C  EC39  F007         	call	_EscreveFraseRamLCD	;wreg free
   839                           
   840                           ;radar.c: 110: PosicaoCursorLCD(2,7);
   841  000A30  0E07               	movlw	7
   842  000A32  6E04               	movwf	PosicaoCursorLCD@coluna,c
   843  000A34  0E02               	movlw	2
   844  000A36  ECDF  F006         	call	_PosicaoCursorLCD
   845                           
   846                           ;radar.c: 111: EscreveInteiroLCD(velocDec);
   847  000A3A  C0A4  F019         	movff	main@velocDec,EscreveInteiroLCD@valor
   848  000A3E  C0A5  F01A         	movff	main@velocDec+1,EscreveInteiroLCD@valor+1
   849  000A42  ECA4  F007         	call	_EscreveInteiroLCD	;wreg free
   850  000A46  D785               	goto	l1810
   851  000A48                     __end_of_main:
   852                           	opt stack 0
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           intcon	equ	0xFF2
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           postdec1	equ	0xFE5
   861                           fsr1l	equ	0xFE1
   862                           postinc2	equ	0xFDE
   863                           status	equ	0xFD8
   864                           
   865 ;; *************** function _delay_ms *****************
   866 ;; Defined at:
   867 ;;		line 119 in file "radar.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  tempodeatras    2    0[COMRAM] unsigned int 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   881 ;;      Params:         2       0       0       0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0       0       0
   883 ;;      Temps:          1       0       0       0       0       0       0       0       0
   884 ;;      Totals:         3       0       0       0       0       0       0       0       0
   885 ;;Total ram usage:        3 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text1
   895  000FDE                     __ptext1:
   896                           	opt stack 0
   897  000FDE                     _delay_ms:
   898                           	opt stack 30
   899                           
   900                           ;radar.c: 121: while(--tempodeatraso){
   901                           
   902                           ;incstack = 0
   903  000FDE  D008               	goto	l1670
   904  000FE0                     l1668:
   905                           
   906                           ;radar.c: 122: _delay((unsigned long)((1)*(48000000/4000.0)));
   907  000FE0  0E10               	movlw	16
   908  000FE2  6E03               	movwf	??_delay_ms& (0+255),c
   909  000FE4  0E94               	movlw	148
   910  000FE6                     u1277:
   911  000FE6  2EE8               	decfsz	wreg,f,c
   912  000FE8  D7FE               	bra	u1277
   913  000FEA  2E03               	decfsz	??_delay_ms& (0+255),f,c
   914  000FEC  D7FC               	bra	u1277
   915  000FEE  D000               	nop2	
   916  000FF0                     l1670:
   917  000FF0  0601               	decf	delay_ms@tempodeatraso,f,c
   918  000FF2  A0D8               	btfss	status,0,c
   919  000FF4  0602               	decf	delay_ms@tempodeatraso+1,f,c
   920  000FF6  5001               	movf	delay_ms@tempodeatraso,w,c
   921  000FF8  1002               	iorwf	delay_ms@tempodeatraso+1,w,c
   922  000FFA  B4D8               	btfsc	status,2,c
   923  000FFC  0012               	return	
   924  000FFE  D7F0               	goto	l1668
   925  001000                     __end_of_delay_ms:
   926                           	opt stack 0
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           intcon	equ	0xFF2
   932                           postinc0	equ	0xFEE
   933                           wreg	equ	0xFE8
   934                           postdec1	equ	0xFE5
   935                           fsr1l	equ	0xFE1
   936                           postinc2	equ	0xFDE
   937                           status	equ	0xFD8
   938                           
   939 ;; *************** function ___aldiv *****************
   940 ;; Defined at:
   941 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  dividend        4    0[COMRAM] long 
   944 ;;  divisor         4    4[COMRAM] long 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  quotient        4   10[COMRAM] long 
   947 ;;  sign            1    9[COMRAM] unsigned char 
   948 ;;  counter         1    8[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  4    0[COMRAM] long 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         8       0       0       0       0       0       0       0       0
   959 ;;      Locals:         6       0       0       0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0
   961 ;;      Totals:        14       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:       14 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text2
   972  000A48                     __ptext2:
   973                           	opt stack 0
   974  000A48                     ___aldiv:
   975                           	opt stack 30
   976                           
   977                           ;incstack = 0
   978  000A48  0E00               	movlw	0
   979  000A4A  6E0A               	movwf	___aldiv@sign,c
   980  000A4C  AE08               	btfss	___aldiv@divisor+3,7,c
   981  000A4E  D00A               	goto	l1680
   982  000A50  1E08               	comf	___aldiv@divisor+3,f,c
   983  000A52  1E07               	comf	___aldiv@divisor+2,f,c
   984  000A54  1E06               	comf	___aldiv@divisor+1,f,c
   985  000A56  6C05               	negf	___aldiv@divisor,c
   986  000A58  0E00               	movlw	0
   987  000A5A  2206               	addwfc	___aldiv@divisor+1,f,c
   988  000A5C  2207               	addwfc	___aldiv@divisor+2,f,c
   989  000A5E  2208               	addwfc	___aldiv@divisor+3,f,c
   990  000A60  0E01               	movlw	1
   991  000A62  6E0A               	movwf	___aldiv@sign,c
   992  000A64                     l1680:
   993  000A64  AE04               	btfss	___aldiv@dividend+3,7,c
   994  000A66  D00A               	goto	l1686
   995  000A68  1E04               	comf	___aldiv@dividend+3,f,c
   996  000A6A  1E03               	comf	___aldiv@dividend+2,f,c
   997  000A6C  1E02               	comf	___aldiv@dividend+1,f,c
   998  000A6E  6C01               	negf	___aldiv@dividend,c
   999  000A70  0E00               	movlw	0
  1000  000A72  2202               	addwfc	___aldiv@dividend+1,f,c
  1001  000A74  2203               	addwfc	___aldiv@dividend+2,f,c
  1002  000A76  2204               	addwfc	___aldiv@dividend+3,f,c
  1003  000A78  0E01               	movlw	1
  1004  000A7A  1A0A               	xorwf	___aldiv@sign,f,c
  1005  000A7C                     l1686:
  1006  000A7C  0E00               	movlw	0
  1007  000A7E  6E0B               	movwf	___aldiv@quotient,c
  1008  000A80  0E00               	movlw	0
  1009  000A82  6E0C               	movwf	___aldiv@quotient+1,c
  1010  000A84  0E00               	movlw	0
  1011  000A86  6E0D               	movwf	___aldiv@quotient+2,c
  1012  000A88  0E00               	movlw	0
  1013  000A8A  6E0E               	movwf	___aldiv@quotient+3,c
  1014  000A8C  5005               	movf	___aldiv@divisor,w,c
  1015  000A8E  1006               	iorwf	___aldiv@divisor+1,w,c
  1016  000A90  1007               	iorwf	___aldiv@divisor+2,w,c
  1017  000A92  1008               	iorwf	___aldiv@divisor+3,w,c
  1018  000A94  B4D8               	btfsc	status,2,c
  1019  000A96  D02A               	goto	l1708
  1020  000A98  0E01               	movlw	1
  1021  000A9A  6E09               	movwf	___aldiv@counter,c
  1022  000A9C  D006               	goto	l1694
  1023  000A9E                     l1692:
  1024  000A9E  90D8               	bcf	status,0,c
  1025  000AA0  3605               	rlcf	___aldiv@divisor,f,c
  1026  000AA2  3606               	rlcf	___aldiv@divisor+1,f,c
  1027  000AA4  3607               	rlcf	___aldiv@divisor+2,f,c
  1028  000AA6  3608               	rlcf	___aldiv@divisor+3,f,c
  1029  000AA8  2A09               	incf	___aldiv@counter,f,c
  1030  000AAA                     l1694:
  1031  000AAA  AE08               	btfss	___aldiv@divisor+3,7,c
  1032  000AAC  D7F8               	goto	l1692
  1033  000AAE                     l1696:
  1034  000AAE  90D8               	bcf	status,0,c
  1035  000AB0  360B               	rlcf	___aldiv@quotient,f,c
  1036  000AB2  360C               	rlcf	___aldiv@quotient+1,f,c
  1037  000AB4  360D               	rlcf	___aldiv@quotient+2,f,c
  1038  000AB6  360E               	rlcf	___aldiv@quotient+3,f,c
  1039  000AB8  5005               	movf	___aldiv@divisor,w,c
  1040  000ABA  5C01               	subwf	___aldiv@dividend,w,c
  1041  000ABC  5006               	movf	___aldiv@divisor+1,w,c
  1042  000ABE  5802               	subwfb	___aldiv@dividend+1,w,c
  1043  000AC0  5007               	movf	___aldiv@divisor+2,w,c
  1044  000AC2  5803               	subwfb	___aldiv@dividend+2,w,c
  1045  000AC4  5008               	movf	___aldiv@divisor+3,w,c
  1046  000AC6  5804               	subwfb	___aldiv@dividend+3,w,c
  1047  000AC8  A0D8               	btfss	status,0,c
  1048  000ACA  D009               	goto	l1704
  1049  000ACC  5005               	movf	___aldiv@divisor,w,c
  1050  000ACE  5E01               	subwf	___aldiv@dividend,f,c
  1051  000AD0  5006               	movf	___aldiv@divisor+1,w,c
  1052  000AD2  5A02               	subwfb	___aldiv@dividend+1,f,c
  1053  000AD4  5007               	movf	___aldiv@divisor+2,w,c
  1054  000AD6  5A03               	subwfb	___aldiv@dividend+2,f,c
  1055  000AD8  5008               	movf	___aldiv@divisor+3,w,c
  1056  000ADA  5A04               	subwfb	___aldiv@dividend+3,f,c
  1057  000ADC  800B               	bsf	___aldiv@quotient,0,c
  1058  000ADE                     l1704:
  1059  000ADE  90D8               	bcf	status,0,c
  1060  000AE0  3208               	rrcf	___aldiv@divisor+3,f,c
  1061  000AE2  3207               	rrcf	___aldiv@divisor+2,f,c
  1062  000AE4  3206               	rrcf	___aldiv@divisor+1,f,c
  1063  000AE6  3205               	rrcf	___aldiv@divisor,f,c
  1064  000AE8  2E09               	decfsz	___aldiv@counter,f,c
  1065  000AEA  D7E1               	goto	l1696
  1066  000AEC                     l1708:
  1067  000AEC  500A               	movf	___aldiv@sign,w,c
  1068  000AEE  B4D8               	btfsc	status,2,c
  1069  000AF0  D008               	goto	l1712
  1070  000AF2  1E0E               	comf	___aldiv@quotient+3,f,c
  1071  000AF4  1E0D               	comf	___aldiv@quotient+2,f,c
  1072  000AF6  1E0C               	comf	___aldiv@quotient+1,f,c
  1073  000AF8  6C0B               	negf	___aldiv@quotient,c
  1074  000AFA  0E00               	movlw	0
  1075  000AFC  220C               	addwfc	___aldiv@quotient+1,f,c
  1076  000AFE  220D               	addwfc	___aldiv@quotient+2,f,c
  1077  000B00  220E               	addwfc	___aldiv@quotient+3,f,c
  1078  000B02                     l1712:
  1079  000B02  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1080  000B06  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1081  000B0A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1082  000B0E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1083  000B12  0012               	return	
  1084  000B14                     __end_of___aldiv:
  1085                           	opt stack 0
  1086                           tblptru	equ	0xFF8
  1087                           tblptrh	equ	0xFF7
  1088                           tblptrl	equ	0xFF6
  1089                           tablat	equ	0xFF5
  1090                           intcon	equ	0xFF2
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           postdec1	equ	0xFE5
  1094                           fsr1l	equ	0xFE1
  1095                           postinc2	equ	0xFDE
  1096                           status	equ	0xFD8
  1097                           
  1098 ;; *************** function _PosicaoCursorLCD *****************
  1099 ;; Defined at:
  1100 ;;		line 280 in file "displayLCD.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  linha           1    wreg     unsigned char 
  1103 ;;  coluna          1    3[COMRAM] unsigned char 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  linha           1    4[COMRAM] unsigned char 
  1106 ;;  EnderecoLCD     1    5[COMRAM] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1116 ;;      Params:         1       0       0       0       0       0       0       0       0
  1117 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1119 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1120 ;;Total ram usage:        3 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    2
  1123 ;; This function calls:
  1124 ;;		_EnderecoCursor
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text3
  1131  000DBE                     __ptext3:
  1132                           	opt stack 0
  1133  000DBE                     _PosicaoCursorLCD:
  1134                           	opt stack 28
  1135                           
  1136                           ;incstack = 0
  1137                           ;PosicaoCursorLCD@linha stored from wreg
  1138  000DBE  6E05               	movwf	PosicaoCursorLCD@linha,c
  1139                           
  1140                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
  1141  000DC0  0E00               	movlw	0
  1142  000DC2  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1143                           
  1144                           ;displayLCD.c: 292: if (coluna >= 0)
  1145  000DC4  0604               	decf	PosicaoCursorLCD@coluna,f,c
  1146                           
  1147                           ;displayLCD.c: 293: {
  1148                           ;displayLCD.c: 296: switch (linha)
  1149  000DC6  D01E               	goto	l1656
  1150  000DC8                     l70:
  1151                           
  1152                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
  1153  000DC8  C004  F006         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
  1154                           
  1155                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
  1156  000DCC  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1157  000DCE  ECAA  F006         	call	_EnderecoCursor
  1158                           
  1159                           ;displayLCD.c: 301: break;
  1160  000DD2  0012               	return	
  1161  000DD4                     l1640:
  1162                           
  1163                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
  1164  000DD4  5004               	movf	PosicaoCursorLCD@coluna,w,c
  1165  000DD6  0F40               	addlw	64
  1166  000DD8  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1167                           
  1168                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
  1169  000DDA  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1170  000DDC  ECAA  F006         	call	_EnderecoCursor
  1171                           
  1172                           ;displayLCD.c: 306: break;
  1173  000DE0  0012               	return	
  1174  000DE2                     l1644:
  1175                           
  1176                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
  1177  000DE2  5004               	movf	PosicaoCursorLCD@coluna,w,c
  1178  000DE4  0F14               	addlw	20
  1179  000DE6  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1180                           
  1181                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
  1182  000DE8  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1183  000DEA  ECAA  F006         	call	_EnderecoCursor
  1184                           
  1185                           ;displayLCD.c: 311: break;
  1186  000DEE  0012               	return	
  1187  000DF0                     l1648:
  1188                           
  1189                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
  1190  000DF0  5004               	movf	PosicaoCursorLCD@coluna,w,c
  1191  000DF2  0F54               	addlw	84
  1192  000DF4  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1193                           
  1194                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
  1195  000DF6  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1196  000DF8  ECAA  F006         	call	_EnderecoCursor
  1197                           
  1198                           ;displayLCD.c: 316: break;
  1199  000DFC  0012               	return	
  1200  000DFE                     l1652:
  1201                           
  1202                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
  1203  000DFE  0E00               	movlw	0
  1204  000E00  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1205                           
  1206                           ;displayLCD.c: 321: }
  1207                           
  1208                           ;displayLCD.c: 320: break;
  1209  000E02  0012               	return	
  1210  000E04                     l1656:
  1211  000E04  5005               	movf	PosicaoCursorLCD@linha,w,c
  1212                           
  1213                           ; Switch size 1, requested type "space"
  1214                           ; Number of cases is 4, Range of values is 1 to 4
  1215                           ; switch strategies available:
  1216                           ; Name         Instructions Cycles
  1217                           ; simple_byte           13     7 (average)
  1218                           ;	Chosen strategy is simple_byte
  1219  000E06  0A01               	xorlw	1	; case 1
  1220  000E08  B4D8               	btfsc	status,2,c
  1221  000E0A  D7DE               	goto	l70
  1222  000E0C  0A03               	xorlw	3	; case 2
  1223  000E0E  B4D8               	btfsc	status,2,c
  1224  000E10  D7E1               	goto	l1640
  1225  000E12  0A01               	xorlw	1	; case 3
  1226  000E14  B4D8               	btfsc	status,2,c
  1227  000E16  D7E5               	goto	l1644
  1228  000E18  0A07               	xorlw	7	; case 4
  1229  000E1A  B4D8               	btfsc	status,2,c
  1230  000E1C  D7E9               	goto	l1648
  1231  000E1E  D7EF               	goto	l1652
  1232  000E20                     __end_of_PosicaoCursorLCD:
  1233                           	opt stack 0
  1234                           tblptru	equ	0xFF8
  1235                           tblptrh	equ	0xFF7
  1236                           tblptrl	equ	0xFF6
  1237                           tablat	equ	0xFF5
  1238                           intcon	equ	0xFF2
  1239                           postinc0	equ	0xFEE
  1240                           wreg	equ	0xFE8
  1241                           postdec1	equ	0xFE5
  1242                           fsr1l	equ	0xFE1
  1243                           postinc2	equ	0xFDE
  1244                           status	equ	0xFD8
  1245                           
  1246 ;; *************** function _EnderecoCursor *****************
  1247 ;; Defined at:
  1248 ;;		line 229 in file "displayLCD.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  endereco        1    wreg     unsigned char 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  endereco        1    2[COMRAM] unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1262 ;;      Params:         0       0       0       0       0       0       0       0       0
  1263 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1265 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1266 ;;Total ram usage:        1 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; Hardware stack levels required when called:    1
  1269 ;; This function calls:
  1270 ;;		_Delay
  1271 ;; This function is called by:
  1272 ;;		_PosicaoCursorLCD
  1273 ;;		_CriaCaractereLCD
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text4
  1278  000D54                     __ptext4:
  1279                           	opt stack 0
  1280  000D54                     _EnderecoCursor:
  1281                           	opt stack 28
  1282                           
  1283                           ;incstack = 0
  1284                           ;EnderecoCursor@endereco stored from wreg
  1285  000D54  6E03               	movwf	EnderecoCursor@endereco,c
  1286                           
  1287                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
  1288  000D56  9483               	bcf	3971,2,c	;volatile
  1289                           
  1290                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
  1291  000D58  9283               	bcf	3971,1,c	;volatile
  1292                           
  1293                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
  1294  000D5A  9083               	bcf	3971,0,c	;volatile
  1295                           
  1296                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
  1297  000D5C  8E83               	bsf	3971,7,c	;volatile
  1298                           
  1299                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1300  000D5E  A803               	btfss	EnderecoCursor@endereco,4,c
  1301  000D60  D002               	goto	l51
  1302  000D62  8883               	bsf	3971,4,c	;volatile
  1303  000D64  D001               	goto	l1536
  1304  000D66                     l51:
  1305                           
  1306                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
  1307  000D66  9883               	bcf	3971,4,c	;volatile
  1308  000D68                     l1536:
  1309                           
  1310                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1311  000D68  AA03               	btfss	EnderecoCursor@endereco,5,c
  1312  000D6A  D002               	goto	l53
  1313  000D6C  8A83               	bsf	3971,5,c	;volatile
  1314  000D6E  D001               	goto	l1540
  1315  000D70                     l53:
  1316                           
  1317                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
  1318  000D70  9A83               	bcf	3971,5,c	;volatile
  1319  000D72                     l1540:
  1320                           
  1321                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1322  000D72  AC03               	btfss	EnderecoCursor@endereco,6,c
  1323  000D74  D002               	goto	l55
  1324  000D76  8C83               	bsf	3971,6,c	;volatile
  1325  000D78  D001               	goto	l56
  1326  000D7A                     l55:
  1327                           
  1328                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
  1329  000D7A  9C83               	bcf	3971,6,c	;volatile
  1330  000D7C                     l56:
  1331                           
  1332                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
  1333  000D7C  8083               	bsf	3971,0,c	;volatile
  1334                           
  1335                           ;displayLCD.c: 247: Delay();
  1336  000D7E  ECDD  F007         	call	_Delay	;wreg free
  1337                           
  1338                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
  1339  000D82  9083               	bcf	3971,0,c	;volatile
  1340                           
  1341                           ;displayLCD.c: 249: Delay();
  1342  000D84  ECDD  F007         	call	_Delay	;wreg free
  1343                           
  1344                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1345  000D88  A003               	btfss	EnderecoCursor@endereco,0,c
  1346  000D8A  D002               	goto	l57
  1347  000D8C  8883               	bsf	3971,4,c	;volatile
  1348  000D8E  D001               	goto	l58
  1349  000D90                     l57:
  1350                           
  1351                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
  1352  000D90  9883               	bcf	3971,4,c	;volatile
  1353  000D92                     l58:
  1354                           
  1355                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1356  000D92  A203               	btfss	EnderecoCursor@endereco,1,c
  1357  000D94  D002               	goto	l59
  1358  000D96  8A83               	bsf	3971,5,c	;volatile
  1359  000D98  D001               	goto	l60
  1360  000D9A                     l59:
  1361                           
  1362                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
  1363  000D9A  9A83               	bcf	3971,5,c	;volatile
  1364  000D9C                     l60:
  1365                           
  1366                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1367  000D9C  A403               	btfss	EnderecoCursor@endereco,2,c
  1368  000D9E  D002               	goto	l61
  1369  000DA0  8C83               	bsf	3971,6,c	;volatile
  1370  000DA2  D001               	goto	l62
  1371  000DA4                     l61:
  1372                           
  1373                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
  1374  000DA4  9C83               	bcf	3971,6,c	;volatile
  1375  000DA6                     l62:
  1376                           
  1377                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1378  000DA6  A603               	btfss	EnderecoCursor@endereco,3,c
  1379  000DA8  D002               	goto	l63
  1380  000DAA  8E83               	bsf	3971,7,c	;volatile
  1381  000DAC  D001               	goto	l64
  1382  000DAE                     l63:
  1383                           
  1384                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
  1385  000DAE  9E83               	bcf	3971,7,c	;volatile
  1386  000DB0                     l64:
  1387                           
  1388                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
  1389  000DB0  8083               	bsf	3971,0,c	;volatile
  1390                           
  1391                           ;displayLCD.c: 263: Delay();
  1392  000DB2  ECDD  F007         	call	_Delay	;wreg free
  1393                           
  1394                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
  1395  000DB6  9083               	bcf	3971,0,c	;volatile
  1396                           
  1397                           ;displayLCD.c: 265: Delay();
  1398  000DB8  ECDD  F007         	call	_Delay	;wreg free
  1399  000DBC  0012               	return		;funcret
  1400  000DBE                     __end_of_EnderecoCursor:
  1401                           	opt stack 0
  1402                           tblptru	equ	0xFF8
  1403                           tblptrh	equ	0xFF7
  1404                           tblptrl	equ	0xFF6
  1405                           tablat	equ	0xFF5
  1406                           intcon	equ	0xFF2
  1407                           postinc0	equ	0xFEE
  1408                           wreg	equ	0xFE8
  1409                           postdec1	equ	0xFE5
  1410                           fsr1l	equ	0xFE1
  1411                           postinc2	equ	0xFDE
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _EscreveInteiroLCD *****************
  1415 ;; Defined at:
  1416 ;;		line 391 in file "displayLCD.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  valor           2   24[COMRAM] int 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  texto           7   26[COMRAM] unsigned char [7]
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1430 ;;      Params:         2       0       0       0       0       0       0       0       0
  1431 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1433 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1434 ;;Total ram usage:        9 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    3
  1437 ;; This function calls:
  1438 ;;		_EscreveFraseRamLCD
  1439 ;;		_itoa
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text5
  1446  000F48                     __ptext5:
  1447                           	opt stack 0
  1448  000F48                     _EscreveInteiroLCD:
  1449                           	opt stack 27
  1450                           
  1451                           ;displayLCD.c: 393: char texto[7] = "000000";
  1452                           
  1453                           ;incstack = 0
  1454  000F48  EE20  F035         	lfsr	2,EscreveInteiroLCD@F4004
  1455  000F4C  EE10  F01B         	lfsr	1,EscreveInteiroLCD@texto
  1456  000F50  0E06               	movlw	6
  1457  000F52                     u1071:
  1458  000F52  CFDB FFE3          	movff	plusw2,plusw1
  1459  000F56  06E8               	decf	wreg,f,c
  1460  000F58  E2FC               	bc	u1071
  1461                           
  1462                           ;displayLCD.c: 394: itoa(texto,valor, 10);
  1463  000F5A  0E1B               	movlw	low EscreveInteiroLCD@texto
  1464  000F5C  6E11               	movwf	itoa@buf,c
  1465  000F5E  0E00               	movlw	high EscreveInteiroLCD@texto
  1466  000F60  6E12               	movwf	itoa@buf+1,c
  1467  000F62  C019  F013         	movff	EscreveInteiroLCD@valor,itoa@val
  1468  000F66  C01A  F014         	movff	EscreveInteiroLCD@valor+1,itoa@val+1
  1469  000F6A  0E00               	movlw	0
  1470  000F6C  6E16               	movwf	itoa@base+1,c
  1471  000F6E  0E0A               	movlw	10
  1472  000F70  6E15               	movwf	itoa@base,c
  1473  000F72  EC62  F007         	call	_itoa	;wreg free
  1474                           
  1475                           ;displayLCD.c: 395: EscreveFraseRamLCD(texto);
  1476  000F76  0E1B               	movlw	low EscreveInteiroLCD@texto
  1477  000F78  6E04               	movwf	EscreveFraseRamLCD@buffer,c
  1478  000F7A  0E00               	movlw	high EscreveInteiroLCD@texto
  1479  000F7C  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
  1480  000F7E  EC39  F007         	call	_EscreveFraseRamLCD	;wreg free
  1481  000F82  0012               	return		;funcret
  1482  000F84                     __end_of_EscreveInteiroLCD:
  1483                           	opt stack 0
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           intcon	equ	0xFF2
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           postdec1	equ	0xFE5
  1492                           plusw1	equ	0xFE3
  1493                           fsr1l	equ	0xFE1
  1494                           postinc2	equ	0xFDE
  1495                           plusw2	equ	0xFDB
  1496                           status	equ	0xFD8
  1497                           
  1498 ;; *************** function _itoa *****************
  1499 ;; Defined at:
  1500 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  buf             2   16[COMRAM] PTR unsigned char 
  1503 ;;		 -> EscreveInteiroLCD@texto(7), 
  1504 ;;  val             2   18[COMRAM] int 
  1505 ;;  base            2   20[COMRAM] int 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  cp              2   22[COMRAM] PTR unsigned char 
  1508 ;;		 -> EscreveInteiroLCD@texto(7), 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  2   16[COMRAM] PTR unsigned char 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1518 ;;      Params:         6       0       0       0       0       0       0       0       0
  1519 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1521 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1522 ;;Total ram usage:        8 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    2
  1525 ;; This function calls:
  1526 ;;		_utoa
  1527 ;; This function is called by:
  1528 ;;		_EscreveInteiroLCD
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text6
  1533  000EC4                     __ptext6:
  1534                           	opt stack 0
  1535  000EC4                     _itoa:
  1536                           	opt stack 27
  1537                           
  1538                           ;incstack = 0
  1539  000EC4  C011  F017         	movff	itoa@buf,itoa@cp
  1540  000EC8  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  1541  000ECC  AE14               	btfss	itoa@val+1,7,c
  1542  000ECE  D00C               	goto	l1570
  1543  000ED0  C011  FFD9         	movff	itoa@buf,fsr2l
  1544  000ED4  C012  FFDA         	movff	itoa@buf+1,fsr2h
  1545  000ED8  0E2D               	movlw	45
  1546  000EDA  6EDF               	movwf	indf2,c
  1547  000EDC  4A11               	infsnz	itoa@buf,f,c
  1548  000EDE  2A12               	incf	itoa@buf+1,f,c
  1549  000EE0  6C13               	negf	itoa@val,c
  1550  000EE2  1E14               	comf	itoa@val+1,f,c
  1551  000EE4  B0D8               	btfsc	status,0,c
  1552  000EE6  2A14               	incf	itoa@val+1,f,c
  1553  000EE8                     l1570:
  1554  000EE8  C011  F008         	movff	itoa@buf,utoa@buf
  1555  000EEC  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  1556  000EF0  C013  F00A         	movff	itoa@val,utoa@val
  1557  000EF4  C014  F00B         	movff	itoa@val+1,utoa@val+1
  1558  000EF8  C015  F00C         	movff	itoa@base,utoa@base
  1559  000EFC  C016  F00D         	movff	itoa@base+1,utoa@base+1
  1560  000F00  EC8A  F005         	call	_utoa	;wreg free
  1561  000F04  0012               	return	
  1562  000F06                     __end_of_itoa:
  1563                           	opt stack 0
  1564                           tblptru	equ	0xFF8
  1565                           tblptrh	equ	0xFF7
  1566                           tblptrl	equ	0xFF6
  1567                           tablat	equ	0xFF5
  1568                           intcon	equ	0xFF2
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           postdec1	equ	0xFE5
  1572                           plusw1	equ	0xFE3
  1573                           fsr1l	equ	0xFE1
  1574                           indf2	equ	0xFDF
  1575                           postinc2	equ	0xFDE
  1576                           plusw2	equ	0xFDB
  1577                           fsr2h	equ	0xFDA
  1578                           fsr2l	equ	0xFD9
  1579                           status	equ	0xFD8
  1580                           
  1581 ;; *************** function _utoa *****************
  1582 ;; Defined at:
  1583 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  buf             2    7[COMRAM] PTR unsigned char 
  1586 ;;		 -> EscreveInteiroLCD@texto(7), 
  1587 ;;  val             2    9[COMRAM] unsigned int 
  1588 ;;  base            2   11[COMRAM] int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  v               2   13[COMRAM] unsigned int 
  1591 ;;  c               1   15[COMRAM] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  2    7[COMRAM] PTR unsigned char 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1601 ;;      Params:         6       0       0       0       0       0       0       0       0
  1602 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1604 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1605 ;;Total ram usage:        9 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    1
  1608 ;; This function calls:
  1609 ;;		___lwdiv
  1610 ;;		___lwmod
  1611 ;; This function is called by:
  1612 ;;		_itoa
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text7
  1617  000B14                     __ptext7:
  1618                           	opt stack 0
  1619  000B14                     _utoa:
  1620                           	opt stack 27
  1621                           
  1622                           ;incstack = 0
  1623  000B14  C00A  F00E         	movff	utoa@val,utoa@v
  1624  000B18  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  1625  000B1C                     l1458:
  1626  000B1C  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  1627  000B20  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  1628  000B24  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1629  000B28  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1630  000B2C  EC10  F007         	call	___lwdiv	;wreg free
  1631  000B30  C001  F00E         	movff	?___lwdiv,utoa@v
  1632  000B34  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  1633  000B38  4A08               	infsnz	utoa@buf,f,c
  1634  000B3A  2A09               	incf	utoa@buf+1,f,c
  1635  000B3C  500E               	movf	utoa@v,w,c
  1636  000B3E  100F               	iorwf	utoa@v+1,w,c
  1637  000B40  A4D8               	btfss	status,2,c
  1638  000B42  D7EC               	goto	l1458
  1639  000B44  C008  FFD9         	movff	utoa@buf,fsr2l
  1640  000B48  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1641  000B4C  0E00               	movlw	0
  1642  000B4E  6EDF               	movwf	indf2,c
  1643  000B50  0608               	decf	utoa@buf,f,c
  1644  000B52  A0D8               	btfss	status,0,c
  1645  000B54  0609               	decf	utoa@buf+1,f,c
  1646  000B56                     l1468:
  1647  000B56  C00A  F001         	movff	utoa@val,___lwmod@dividend
  1648  000B5A  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  1649  000B5E  C00C  F003         	movff	utoa@base,___lwmod@divisor
  1650  000B62  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  1651  000B66  EC83  F007         	call	___lwmod	;wreg free
  1652  000B6A  5001               	movf	?___lwmod,w,c
  1653  000B6C  6E10               	movwf	utoa@c,c
  1654  000B6E  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  1655  000B72  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  1656  000B76  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1657  000B7A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1658  000B7E  EC10  F007         	call	___lwdiv	;wreg free
  1659  000B82  C001  F00A         	movff	?___lwdiv,utoa@val
  1660  000B86  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  1661  000B8A  0E09               	movlw	9
  1662  000B8C  6410               	cpfsgt	utoa@c,c
  1663  000B8E  D002               	goto	l588
  1664  000B90  0E07               	movlw	7
  1665  000B92  2610               	addwf	utoa@c,f,c
  1666  000B94                     l588:
  1667  000B94  0E30               	movlw	48
  1668  000B96  2610               	addwf	utoa@c,f,c
  1669  000B98  C008  FFD9         	movff	utoa@buf,fsr2l
  1670  000B9C  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1671  000BA0  C010  FFDF         	movff	utoa@c,indf2
  1672  000BA4  0608               	decf	utoa@buf,f,c
  1673  000BA6  A0D8               	btfss	status,0,c
  1674  000BA8  0609               	decf	utoa@buf+1,f,c
  1675  000BAA  500A               	movf	utoa@val,w,c
  1676  000BAC  100B               	iorwf	utoa@val+1,w,c
  1677  000BAE  A4D8               	btfss	status,2,c
  1678  000BB0  D7D2               	goto	l1468
  1679                           
  1680                           ;	Return value of _utoa is never used
  1681  000BB2  4A08               	infsnz	utoa@buf,f,c
  1682  000BB4  2A09               	incf	utoa@buf+1,f,c
  1683  000BB6  0012               	return	
  1684  000BB8                     __end_of_utoa:
  1685                           	opt stack 0
  1686                           tblptru	equ	0xFF8
  1687                           tblptrh	equ	0xFF7
  1688                           tblptrl	equ	0xFF6
  1689                           tablat	equ	0xFF5
  1690                           intcon	equ	0xFF2
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           postdec1	equ	0xFE5
  1694                           plusw1	equ	0xFE3
  1695                           fsr1l	equ	0xFE1
  1696                           indf2	equ	0xFDF
  1697                           postinc2	equ	0xFDE
  1698                           plusw2	equ	0xFDB
  1699                           fsr2h	equ	0xFDA
  1700                           fsr2l	equ	0xFD9
  1701                           status	equ	0xFD8
  1702                           
  1703 ;; *************** function ___lwmod *****************
  1704 ;; Defined at:
  1705 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  dividend        2    0[COMRAM] unsigned int 
  1708 ;;  divisor         2    2[COMRAM] unsigned int 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  counter         1    4[COMRAM] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  2    0[COMRAM] unsigned int 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1720 ;;      Params:         4       0       0       0       0       0       0       0       0
  1721 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1723 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1724 ;;Total ram usage:        5 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_utoa
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text8
  1734  000F06                     __ptext8:
  1735                           	opt stack 0
  1736  000F06                     ___lwmod:
  1737                           	opt stack 27
  1738                           
  1739                           ;incstack = 0
  1740  000F06  5003               	movf	___lwmod@divisor,w,c
  1741  000F08  1004               	iorwf	___lwmod@divisor+1,w,c
  1742  000F0A  B4D8               	btfsc	status,2,c
  1743  000F0C  D018               	goto	l677
  1744  000F0E  0E01               	movlw	1
  1745  000F10  6E05               	movwf	___lwmod@counter,c
  1746  000F12  D004               	goto	l1410
  1747  000F14                     l1408:
  1748  000F14  90D8               	bcf	status,0,c
  1749  000F16  3603               	rlcf	___lwmod@divisor,f,c
  1750  000F18  3604               	rlcf	___lwmod@divisor+1,f,c
  1751  000F1A  2A05               	incf	___lwmod@counter,f,c
  1752  000F1C                     l1410:
  1753  000F1C  AE04               	btfss	___lwmod@divisor+1,7,c
  1754  000F1E  D7FA               	goto	l1408
  1755  000F20                     l1412:
  1756  000F20  5003               	movf	___lwmod@divisor,w,c
  1757  000F22  5C01               	subwf	___lwmod@dividend,w,c
  1758  000F24  5004               	movf	___lwmod@divisor+1,w,c
  1759  000F26  5802               	subwfb	___lwmod@dividend+1,w,c
  1760  000F28  A0D8               	btfss	status,0,c
  1761  000F2A  D004               	goto	l1416
  1762  000F2C  5003               	movf	___lwmod@divisor,w,c
  1763  000F2E  5E01               	subwf	___lwmod@dividend,f,c
  1764  000F30  5004               	movf	___lwmod@divisor+1,w,c
  1765  000F32  5A02               	subwfb	___lwmod@dividend+1,f,c
  1766  000F34                     l1416:
  1767  000F34  90D8               	bcf	status,0,c
  1768  000F36  3204               	rrcf	___lwmod@divisor+1,f,c
  1769  000F38  3203               	rrcf	___lwmod@divisor,f,c
  1770  000F3A  2E05               	decfsz	___lwmod@counter,f,c
  1771  000F3C  D7F1               	goto	l1412
  1772  000F3E                     l677:
  1773  000F3E  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1774  000F42  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1775  000F46  0012               	return		;funcret
  1776  000F48                     __end_of___lwmod:
  1777                           	opt stack 0
  1778                           tblptru	equ	0xFF8
  1779                           tblptrh	equ	0xFF7
  1780                           tblptrl	equ	0xFF6
  1781                           tablat	equ	0xFF5
  1782                           intcon	equ	0xFF2
  1783                           postinc0	equ	0xFEE
  1784                           wreg	equ	0xFE8
  1785                           postdec1	equ	0xFE5
  1786                           plusw1	equ	0xFE3
  1787                           fsr1l	equ	0xFE1
  1788                           indf2	equ	0xFDF
  1789                           postinc2	equ	0xFDE
  1790                           plusw2	equ	0xFDB
  1791                           fsr2h	equ	0xFDA
  1792                           fsr2l	equ	0xFD9
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function ___lwdiv *****************
  1796 ;; Defined at:
  1797 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  dividend        2    0[COMRAM] unsigned int 
  1800 ;;  divisor         2    2[COMRAM] unsigned int 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  quotient        2    4[COMRAM] unsigned int 
  1803 ;;  counter         1    6[COMRAM] unsigned char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  2    0[COMRAM] unsigned int 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1813 ;;      Params:         4       0       0       0       0       0       0       0       0
  1814 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1816 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1817 ;;Total ram usage:        7 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;;		_utoa
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text9
  1828  000E20                     __ptext9:
  1829                           	opt stack 0
  1830  000E20                     ___lwdiv:
  1831                           	opt stack 30
  1832                           
  1833                           ;incstack = 0
  1834  000E20  0E00               	movlw	0
  1835  000E22  6E06               	movwf	___lwdiv@quotient+1,c
  1836  000E24  0E00               	movlw	0
  1837  000E26  6E05               	movwf	___lwdiv@quotient,c
  1838  000E28  5003               	movf	___lwdiv@divisor,w,c
  1839  000E2A  1004               	iorwf	___lwdiv@divisor+1,w,c
  1840  000E2C  B4D8               	btfsc	status,2,c
  1841  000E2E  D01C               	goto	l667
  1842  000E30  0E01               	movlw	1
  1843  000E32  6E07               	movwf	___lwdiv@counter,c
  1844  000E34  D004               	goto	l1390
  1845  000E36                     l1388:
  1846  000E36  90D8               	bcf	status,0,c
  1847  000E38  3603               	rlcf	___lwdiv@divisor,f,c
  1848  000E3A  3604               	rlcf	___lwdiv@divisor+1,f,c
  1849  000E3C  2A07               	incf	___lwdiv@counter,f,c
  1850  000E3E                     l1390:
  1851  000E3E  AE04               	btfss	___lwdiv@divisor+1,7,c
  1852  000E40  D7FA               	goto	l1388
  1853  000E42                     l1392:
  1854  000E42  90D8               	bcf	status,0,c
  1855  000E44  3605               	rlcf	___lwdiv@quotient,f,c
  1856  000E46  3606               	rlcf	___lwdiv@quotient+1,f,c
  1857  000E48  5003               	movf	___lwdiv@divisor,w,c
  1858  000E4A  5C01               	subwf	___lwdiv@dividend,w,c
  1859  000E4C  5004               	movf	___lwdiv@divisor+1,w,c
  1860  000E4E  5802               	subwfb	___lwdiv@dividend+1,w,c
  1861  000E50  A0D8               	btfss	status,0,c
  1862  000E52  D005               	goto	l1400
  1863  000E54  5003               	movf	___lwdiv@divisor,w,c
  1864  000E56  5E01               	subwf	___lwdiv@dividend,f,c
  1865  000E58  5004               	movf	___lwdiv@divisor+1,w,c
  1866  000E5A  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1867  000E5C  8005               	bsf	___lwdiv@quotient,0,c
  1868  000E5E                     l1400:
  1869  000E5E  90D8               	bcf	status,0,c
  1870  000E60  3204               	rrcf	___lwdiv@divisor+1,f,c
  1871  000E62  3203               	rrcf	___lwdiv@divisor,f,c
  1872  000E64  2E07               	decfsz	___lwdiv@counter,f,c
  1873  000E66  D7ED               	goto	l1392
  1874  000E68                     l667:
  1875  000E68  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1876  000E6C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1877  000E70  0012               	return		;funcret
  1878  000E72                     __end_of___lwdiv:
  1879                           	opt stack 0
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           intcon	equ	0xFF2
  1885                           postinc0	equ	0xFEE
  1886                           wreg	equ	0xFE8
  1887                           postdec1	equ	0xFE5
  1888                           plusw1	equ	0xFE3
  1889                           fsr1l	equ	0xFE1
  1890                           indf2	equ	0xFDF
  1891                           postinc2	equ	0xFDE
  1892                           plusw2	equ	0xFDB
  1893                           fsr2h	equ	0xFDA
  1894                           fsr2l	equ	0xFD9
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _EscreveFraseRamLCD *****************
  1898 ;; Defined at:
  1899 ;;		line 438 in file "displayLCD.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  buffer          2    3[COMRAM] PTR unsigned char 
  1902 ;;		 -> STR_1(2), main@Texto_4(17), main@Texto_3(17), main@Texto_1(17), 
  1903 ;;		 -> main@Texto_0(17), EscreveInteiroLCD@texto(7), 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1915 ;;      Params:         2       0       0       0       0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1918 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1919 ;;Total ram usage:        2 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    2
  1922 ;; This function calls:
  1923 ;;		_EscreveCaractereLCD
  1924 ;; This function is called by:
  1925 ;;		_EscreveInteiroLCD
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text10
  1931  000E72                     __ptext10:
  1932                           	opt stack 0
  1933  000E72                     _EscreveFraseRamLCD:
  1934                           	opt stack 27
  1935                           
  1936                           ;displayLCD.c: 440: while(*buffer)
  1937                           
  1938                           ;incstack = 0
  1939  000E72  D014               	goto	l1580
  1940  000E74                     l1576:
  1941                           
  1942                           ;displayLCD.c: 441: {
  1943                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
  1944  000E74  C004  FFF6         	movff	EscreveFraseRamLCD@buffer,tblptrl
  1945  000E78  C005  FFF7         	movff	EscreveFraseRamLCD@buffer+1,tblptrh
  1946  000E7C  6AF8               	clrf	tblptru,c
  1947  000E7E  0E07               	movlw	(high __ramtop+-1)
  1948  000E80  64F7               	cpfsgt	tblptrh,c
  1949  000E82  D003               	bra	u1047
  1950  000E84  0008               	tblrd		*
  1951  000E86  50F5               	movf	tablat,w,c
  1952  000E88  D005               	bra	u1040
  1953  000E8A                     u1047:
  1954  000E8A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1955  000E8E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1956  000E92  50EF               	movf	indf0,w,c
  1957  000E94                     u1040:
  1958  000E94  EC71  F006         	call	_EscreveCaractereLCD
  1959                           
  1960                           ;displayLCD.c: 443: buffer++;
  1961  000E98  4A04               	infsnz	EscreveFraseRamLCD@buffer,f,c
  1962  000E9A  2A05               	incf	EscreveFraseRamLCD@buffer+1,f,c
  1963  000E9C                     l1580:
  1964  000E9C  C004  FFF6         	movff	EscreveFraseRamLCD@buffer,tblptrl
  1965  000EA0  C005  FFF7         	movff	EscreveFraseRamLCD@buffer+1,tblptrh
  1966  000EA4  6AF8               	clrf	tblptru,c
  1967  000EA6  0E07               	movlw	(high __ramtop+-1)
  1968  000EA8  64F7               	cpfsgt	tblptrh,c
  1969  000EAA  D003               	bra	u1057
  1970  000EAC  0008               	tblrd		*
  1971  000EAE  50F5               	movf	tablat,w,c
  1972  000EB0  D005               	bra	u1050
  1973  000EB2                     u1057:
  1974  000EB2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1975  000EB6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1976  000EBA  50EF               	movf	indf0,w,c
  1977  000EBC                     u1050:
  1978  000EBC  0900               	iorlw	0
  1979  000EBE  B4D8               	btfsc	status,2,c
  1980  000EC0  0012               	return	
  1981  000EC2  D7D8               	goto	l1576
  1982  000EC4                     __end_of_EscreveFraseRamLCD:
  1983                           	opt stack 0
  1984                           tblptru	equ	0xFF8
  1985                           tblptrh	equ	0xFF7
  1986                           tblptrl	equ	0xFF6
  1987                           tablat	equ	0xFF5
  1988                           intcon	equ	0xFF2
  1989                           indf0	equ	0xFEF
  1990                           postinc0	equ	0xFEE
  1991                           fsr0h	equ	0xFEA
  1992                           fsr0l	equ	0xFE9
  1993                           wreg	equ	0xFE8
  1994                           postdec1	equ	0xFE5
  1995                           plusw1	equ	0xFE3
  1996                           fsr1l	equ	0xFE1
  1997                           indf2	equ	0xFDF
  1998                           postinc2	equ	0xFDE
  1999                           plusw2	equ	0xFDB
  2000                           fsr2h	equ	0xFDA
  2001                           fsr2l	equ	0xFD9
  2002                           status	equ	0xFD8
  2003                           
  2004 ;; *************** function _EscreveCaractereLCD *****************
  2005 ;; Defined at:
  2006 ;;		line 339 in file "displayLCD.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  data            1    wreg     unsigned char 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  data            1    2[COMRAM] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0
  2021 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2023 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2024 ;;Total ram usage:        1 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    1
  2027 ;; This function calls:
  2028 ;;		_Delay
  2029 ;; This function is called by:
  2030 ;;		_EscreveFraseRamLCD
  2031 ;;		_EscreveFloatLCD
  2032 ;;		_EscreveFraseLCD
  2033 ;;		_CriaCaractereLCD
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text11
  2038  000CE2                     __ptext11:
  2039                           	opt stack 0
  2040  000CE2                     _EscreveCaractereLCD:
  2041                           	opt stack 27
  2042                           
  2043                           ;incstack = 0
  2044                           ;EscreveCaractereLCD@data stored from wreg
  2045  000CE2  6E03               	movwf	EscreveCaractereLCD@data,c
  2046                           
  2047                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
  2048  000CE4  9483               	bcf	3971,2,c	;volatile
  2049                           
  2050                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
  2051  000CE6  8283               	bsf	3971,1,c	;volatile
  2052                           
  2053                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
  2054  000CE8  9083               	bcf	3971,0,c	;volatile
  2055                           
  2056                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
  2057  000CEA  A803               	btfss	EscreveCaractereLCD@data,4,c
  2058  000CEC  D002               	goto	l80
  2059  000CEE  8883               	bsf	3971,4,c	;volatile
  2060  000CF0  D001               	goto	l1426
  2061  000CF2                     l80:
  2062                           
  2063                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
  2064  000CF2  9883               	bcf	3971,4,c	;volatile
  2065  000CF4                     l1426:
  2066                           
  2067                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
  2068  000CF4  AA03               	btfss	EscreveCaractereLCD@data,5,c
  2069  000CF6  D002               	goto	l82
  2070  000CF8  8A83               	bsf	3971,5,c	;volatile
  2071  000CFA  D001               	goto	l1430
  2072  000CFC                     l82:
  2073                           
  2074                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
  2075  000CFC  9A83               	bcf	3971,5,c	;volatile
  2076  000CFE                     l1430:
  2077                           
  2078                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
  2079  000CFE  AC03               	btfss	EscreveCaractereLCD@data,6,c
  2080  000D00  D002               	goto	l84
  2081  000D02  8C83               	bsf	3971,6,c	;volatile
  2082  000D04  D001               	goto	l1434
  2083  000D06                     l84:
  2084                           
  2085                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
  2086  000D06  9C83               	bcf	3971,6,c	;volatile
  2087  000D08                     l1434:
  2088                           
  2089                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
  2090  000D08  AE03               	btfss	EscreveCaractereLCD@data,7,c
  2091  000D0A  D002               	goto	l86
  2092  000D0C  8E83               	bsf	3971,7,c	;volatile
  2093  000D0E  D001               	goto	l87
  2094  000D10                     l86:
  2095                           
  2096                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
  2097  000D10  9E83               	bcf	3971,7,c	;volatile
  2098  000D12                     l87:
  2099                           
  2100                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
  2101  000D12  8083               	bsf	3971,0,c	;volatile
  2102                           
  2103                           ;displayLCD.c: 358: Delay();
  2104  000D14  ECDD  F007         	call	_Delay	;wreg free
  2105                           
  2106                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  2107  000D18  9083               	bcf	3971,0,c	;volatile
  2108                           
  2109                           ;displayLCD.c: 360: Delay();
  2110  000D1A  ECDD  F007         	call	_Delay	;wreg free
  2111                           
  2112                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  2113  000D1E  A003               	btfss	EscreveCaractereLCD@data,0,c
  2114  000D20  D002               	goto	l88
  2115  000D22  8883               	bsf	3971,4,c	;volatile
  2116  000D24  D001               	goto	l89
  2117  000D26                     l88:
  2118                           
  2119                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  2120  000D26  9883               	bcf	3971,4,c	;volatile
  2121  000D28                     l89:
  2122                           
  2123                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  2124  000D28  A203               	btfss	EscreveCaractereLCD@data,1,c
  2125  000D2A  D002               	goto	l90
  2126  000D2C  8A83               	bsf	3971,5,c	;volatile
  2127  000D2E  D001               	goto	l91
  2128  000D30                     l90:
  2129                           
  2130                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  2131  000D30  9A83               	bcf	3971,5,c	;volatile
  2132  000D32                     l91:
  2133                           
  2134                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  2135  000D32  A403               	btfss	EscreveCaractereLCD@data,2,c
  2136  000D34  D002               	goto	l92
  2137  000D36  8C83               	bsf	3971,6,c	;volatile
  2138  000D38  D001               	goto	l93
  2139  000D3A                     l92:
  2140                           
  2141                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  2142  000D3A  9C83               	bcf	3971,6,c	;volatile
  2143  000D3C                     l93:
  2144                           
  2145                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  2146  000D3C  A603               	btfss	EscreveCaractereLCD@data,3,c
  2147  000D3E  D002               	goto	l94
  2148  000D40  8E83               	bsf	3971,7,c	;volatile
  2149  000D42  D001               	goto	l95
  2150  000D44                     l94:
  2151                           
  2152                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  2153  000D44  9E83               	bcf	3971,7,c	;volatile
  2154  000D46                     l95:
  2155                           
  2156                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  2157  000D46  8083               	bsf	3971,0,c	;volatile
  2158                           
  2159                           ;displayLCD.c: 375: Delay();
  2160  000D48  ECDD  F007         	call	_Delay	;wreg free
  2161                           
  2162                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  2163  000D4C  9083               	bcf	3971,0,c	;volatile
  2164                           
  2165                           ;displayLCD.c: 377: Delay();
  2166  000D4E  ECDD  F007         	call	_Delay	;wreg free
  2167  000D52  0012               	return		;funcret
  2168  000D54                     __end_of_EscreveCaractereLCD:
  2169                           	opt stack 0
  2170                           tblptru	equ	0xFF8
  2171                           tblptrh	equ	0xFF7
  2172                           tblptrl	equ	0xFF6
  2173                           tablat	equ	0xFF5
  2174                           intcon	equ	0xFF2
  2175                           indf0	equ	0xFEF
  2176                           postinc0	equ	0xFEE
  2177                           fsr0h	equ	0xFEA
  2178                           fsr0l	equ	0xFE9
  2179                           wreg	equ	0xFE8
  2180                           postdec1	equ	0xFE5
  2181                           plusw1	equ	0xFE3
  2182                           fsr1l	equ	0xFE1
  2183                           indf2	equ	0xFDF
  2184                           postinc2	equ	0xFDE
  2185                           plusw2	equ	0xFDB
  2186                           fsr2h	equ	0xFDA
  2187                           fsr2l	equ	0xFD9
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _ConfiguraLCD *****************
  2191 ;; Defined at:
  2192 ;;		line 80 in file "displayLCD.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2208 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2209 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2210 ;;Total ram usage:        1 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    2
  2213 ;; This function calls:
  2214 ;;		_Delay
  2215 ;;		_EscreveComandoLCD
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text12
  2222  000BB8                     __ptext12:
  2223                           	opt stack 0
  2224  000BB8                     _ConfiguraLCD:
  2225                           	opt stack 28
  2226                           
  2227                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  2228                           
  2229                           ;incstack = 0
  2230  000BB8  9495               	bcf	3989,2,c	;volatile
  2231                           
  2232                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  2233  000BBA  9295               	bcf	3989,1,c	;volatile
  2234                           
  2235                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  2236  000BBC  9095               	bcf	3989,0,c	;volatile
  2237                           
  2238                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  2239  000BBE  9895               	bcf	3989,4,c	;volatile
  2240                           
  2241                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  2242  000BC0  9A95               	bcf	3989,5,c	;volatile
  2243                           
  2244                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  2245  000BC2  9C95               	bcf	3989,6,c	;volatile
  2246                           
  2247                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  2248  000BC4  9E95               	bcf	3989,7,c	;volatile
  2249                           
  2250                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  2251  000BC6  9483               	bcf	3971,2,c	;volatile
  2252                           
  2253                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  2254  000BC8  9283               	bcf	3971,1,c	;volatile
  2255                           
  2256                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  2257  000BCA  9083               	bcf	3971,0,c	;volatile
  2258                           
  2259                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  2260  000BCC  9E83               	bcf	3971,7,c	;volatile
  2261                           
  2262                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  2263  000BCE  9C83               	bcf	3971,6,c	;volatile
  2264                           
  2265                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  2266  000BD0  8A83               	bsf	3971,5,c	;volatile
  2267                           
  2268                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  2269  000BD2  8883               	bsf	3971,4,c	;volatile
  2270                           
  2271                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  2272  000BD4  0EEA               	movlw	234
  2273  000BD6  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2274  000BD8  0EC3               	movlw	195
  2275  000BDA                     u1287:
  2276  000BDA  2EE8               	decfsz	wreg,f,c
  2277  000BDC  D7FE               	bra	u1287
  2278  000BDE  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2279  000BE0  D7FC               	bra	u1287
  2280  000BE2  F000               	nop	
  2281                           
  2282                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  2283  000BE4  8083               	bsf	3971,0,c	;volatile
  2284                           
  2285                           ;displayLCD.c: 117: Delay();
  2286  000BE6  ECDD  F007         	call	_Delay	;wreg free
  2287                           
  2288                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  2289  000BEA  9083               	bcf	3971,0,c	;volatile
  2290                           
  2291                           ;displayLCD.c: 119: Delay();
  2292  000BEC  ECDD  F007         	call	_Delay	;wreg free
  2293                           
  2294                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  2295  000BF0  0E4E               	movlw	78
  2296  000BF2  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2297  000BF4  0EEB               	movlw	235
  2298  000BF6                     u1297:
  2299  000BF6  2EE8               	decfsz	wreg,f,c
  2300  000BF8  D7FE               	bra	u1297
  2301  000BFA  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2302  000BFC  D7FC               	bra	u1297
  2303  000BFE  F000               	nop	
  2304                           
  2305                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  2306  000C00  8083               	bsf	3971,0,c	;volatile
  2307                           
  2308                           ;displayLCD.c: 128: Delay();
  2309  000C02  ECDD  F007         	call	_Delay	;wreg free
  2310                           
  2311                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  2312  000C06  9083               	bcf	3971,0,c	;volatile
  2313                           
  2314                           ;displayLCD.c: 130: Delay();
  2315  000C08  ECDD  F007         	call	_Delay	;wreg free
  2316                           
  2317                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  2318  000C0C  0E4E               	movlw	78
  2319  000C0E  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2320  000C10  0EEB               	movlw	235
  2321  000C12                     u1307:
  2322  000C12  2EE8               	decfsz	wreg,f,c
  2323  000C14  D7FE               	bra	u1307
  2324  000C16  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2325  000C18  D7FC               	bra	u1307
  2326  000C1A  F000               	nop	
  2327                           
  2328                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  2329  000C1C  8083               	bsf	3971,0,c	;volatile
  2330                           
  2331                           ;displayLCD.c: 139: Delay();
  2332  000C1E  ECDD  F007         	call	_Delay	;wreg free
  2333                           
  2334                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  2335  000C22  9083               	bcf	3971,0,c	;volatile
  2336                           
  2337                           ;displayLCD.c: 141: Delay();
  2338  000C24  ECDD  F007         	call	_Delay	;wreg free
  2339                           
  2340                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  2341  000C28  9E83               	bcf	3971,7,c	;volatile
  2342                           
  2343                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  2344  000C2A  9C83               	bcf	3971,6,c	;volatile
  2345                           
  2346                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  2347  000C2C  8A83               	bsf	3971,5,c	;volatile
  2348                           
  2349                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  2350  000C2E  9883               	bcf	3971,4,c	;volatile
  2351                           
  2352                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  2353  000C30  8083               	bsf	3971,0,c	;volatile
  2354                           
  2355                           ;displayLCD.c: 152: Delay();
  2356  000C32  ECDD  F007         	call	_Delay	;wreg free
  2357                           
  2358                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  2359  000C36  9083               	bcf	3971,0,c	;volatile
  2360                           
  2361                           ;displayLCD.c: 154: Delay();
  2362  000C38  ECDD  F007         	call	_Delay	;wreg free
  2363                           
  2364                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  2365  000C3C  0E28               	movlw	40
  2366  000C3E  EC2B  F006         	call	_EscreveComandoLCD
  2367                           
  2368                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  2369  000C42  0E06               	movlw	6
  2370  000C44  EC2B  F006         	call	_EscreveComandoLCD
  2371                           
  2372                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  2373  000C48  0E0E               	movlw	14
  2374  000C4A  EC2B  F006         	call	_EscreveComandoLCD
  2375                           
  2376                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  2377  000C4E  0E01               	movlw	1
  2378  000C50  EC2B  F006         	call	_EscreveComandoLCD
  2379  000C54  0012               	return		;funcret
  2380  000C56                     __end_of_ConfiguraLCD:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           intcon	equ	0xFF2
  2387                           indf0	equ	0xFEF
  2388                           postinc0	equ	0xFEE
  2389                           fsr0h	equ	0xFEA
  2390                           fsr0l	equ	0xFE9
  2391                           wreg	equ	0xFE8
  2392                           postdec1	equ	0xFE5
  2393                           plusw1	equ	0xFE3
  2394                           fsr1l	equ	0xFE1
  2395                           indf2	equ	0xFDF
  2396                           postinc2	equ	0xFDE
  2397                           plusw2	equ	0xFDB
  2398                           fsr2h	equ	0xFDA
  2399                           fsr2l	equ	0xFD9
  2400                           status	equ	0xFD8
  2401                           
  2402 ;; *************** function _EscreveComandoLCD *****************
  2403 ;; Defined at:
  2404 ;;		line 172 in file "displayLCD.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  cmd             1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  cmd             1    2[COMRAM] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0
  2419 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2421 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2422 ;;Total ram usage:        1 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    1
  2425 ;; This function calls:
  2426 ;;		_Delay
  2427 ;; This function is called by:
  2428 ;;		_ConfiguraLCD
  2429 ;;		_main
  2430 ;;		_CriaCaractereLCD
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text13
  2435  000C56                     __ptext13:
  2436                           	opt stack 0
  2437  000C56                     _EscreveComandoLCD:
  2438                           	opt stack 29
  2439                           
  2440                           ;incstack = 0
  2441                           ;EscreveComandoLCD@cmd stored from wreg
  2442  000C56  6E03               	movwf	EscreveComandoLCD@cmd,c
  2443                           
  2444                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  2445  000C58  9483               	bcf	3971,2,c	;volatile
  2446                           
  2447                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  2448  000C5A  9283               	bcf	3971,1,c	;volatile
  2449                           
  2450                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  2451  000C5C  9083               	bcf	3971,0,c	;volatile
  2452                           
  2453                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  2454  000C5E  A803               	btfss	EscreveComandoLCD@cmd,4,c
  2455  000C60  D002               	goto	l29
  2456  000C62  8883               	bsf	3971,4,c	;volatile
  2457  000C64  D001               	goto	l1492
  2458  000C66                     l29:
  2459                           
  2460                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  2461  000C66  9883               	bcf	3971,4,c	;volatile
  2462  000C68                     l1492:
  2463                           
  2464                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  2465  000C68  AA03               	btfss	EscreveComandoLCD@cmd,5,c
  2466  000C6A  D002               	goto	l31
  2467  000C6C  8A83               	bsf	3971,5,c	;volatile
  2468  000C6E  D001               	goto	l1496
  2469  000C70                     l31:
  2470                           
  2471                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  2472  000C70  9A83               	bcf	3971,5,c	;volatile
  2473  000C72                     l1496:
  2474                           
  2475                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  2476  000C72  AC03               	btfss	EscreveComandoLCD@cmd,6,c
  2477  000C74  D002               	goto	l33
  2478  000C76  8C83               	bsf	3971,6,c	;volatile
  2479  000C78  D001               	goto	l1500
  2480  000C7A                     l33:
  2481                           
  2482                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  2483  000C7A  9C83               	bcf	3971,6,c	;volatile
  2484  000C7C                     l1500:
  2485                           
  2486                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  2487  000C7C  AE03               	btfss	EscreveComandoLCD@cmd,7,c
  2488  000C7E  D002               	goto	l35
  2489  000C80  8E83               	bsf	3971,7,c	;volatile
  2490  000C82  D001               	goto	l36
  2491  000C84                     l35:
  2492                           
  2493                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  2494  000C84  9E83               	bcf	3971,7,c	;volatile
  2495  000C86                     l36:
  2496                           
  2497                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  2498  000C86  8083               	bsf	3971,0,c	;volatile
  2499                           
  2500                           ;displayLCD.c: 191: Delay();
  2501  000C88  ECDD  F007         	call	_Delay	;wreg free
  2502                           
  2503                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  2504  000C8C  9083               	bcf	3971,0,c	;volatile
  2505                           
  2506                           ;displayLCD.c: 193: Delay();
  2507  000C8E  ECDD  F007         	call	_Delay	;wreg free
  2508                           
  2509                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  2510  000C92  A003               	btfss	EscreveComandoLCD@cmd,0,c
  2511  000C94  D002               	goto	l37
  2512  000C96  8883               	bsf	3971,4,c	;volatile
  2513  000C98  D001               	goto	l38
  2514  000C9A                     l37:
  2515                           
  2516                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  2517  000C9A  9883               	bcf	3971,4,c	;volatile
  2518  000C9C                     l38:
  2519                           
  2520                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  2521  000C9C  A203               	btfss	EscreveComandoLCD@cmd,1,c
  2522  000C9E  D002               	goto	l39
  2523  000CA0  8A83               	bsf	3971,5,c	;volatile
  2524  000CA2  D001               	goto	l40
  2525  000CA4                     l39:
  2526                           
  2527                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  2528  000CA4  9A83               	bcf	3971,5,c	;volatile
  2529  000CA6                     l40:
  2530                           
  2531                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  2532  000CA6  A403               	btfss	EscreveComandoLCD@cmd,2,c
  2533  000CA8  D002               	goto	l41
  2534  000CAA  8C83               	bsf	3971,6,c	;volatile
  2535  000CAC  D001               	goto	l42
  2536  000CAE                     l41:
  2537                           
  2538                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  2539  000CAE  9C83               	bcf	3971,6,c	;volatile
  2540  000CB0                     l42:
  2541                           
  2542                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  2543  000CB0  A603               	btfss	EscreveComandoLCD@cmd,3,c
  2544  000CB2  D002               	goto	l43
  2545  000CB4  8E83               	bsf	3971,7,c	;volatile
  2546  000CB6  D001               	goto	l44
  2547  000CB8                     l43:
  2548                           
  2549                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  2550  000CB8  9E83               	bcf	3971,7,c	;volatile
  2551  000CBA                     l44:
  2552                           
  2553                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  2554  000CBA  8083               	bsf	3971,0,c	;volatile
  2555                           
  2556                           ;displayLCD.c: 207: Delay();
  2557  000CBC  ECDD  F007         	call	_Delay	;wreg free
  2558                           
  2559                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  2560  000CC0  9083               	bcf	3971,0,c	;volatile
  2561                           
  2562                           ;displayLCD.c: 209: Delay();
  2563  000CC2  ECDD  F007         	call	_Delay	;wreg free
  2564                           
  2565                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  2566  000CC6  0403               	decf	EscreveComandoLCD@cmd,w,c
  2567  000CC8  B4D8               	btfsc	status,2,c
  2568  000CCA  D008               	goto	l1528
  2569  000CCC  0E02               	movlw	2
  2570  000CCE  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  2571  000CD0  B4D8               	btfsc	status,2,c
  2572  000CD2  D004               	goto	l1528
  2573  000CD4  0E03               	movlw	3
  2574  000CD6  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  2575  000CD8  A4D8               	btfss	status,2,c
  2576  000CDA  0012               	return	
  2577  000CDC                     l1528:
  2578                           
  2579                           ;displayLCD.c: 215: { Delay(); }
  2580  000CDC  ECDD  F007         	call	_Delay	;wreg free
  2581  000CE0  0012               	return	
  2582  000CE2                     __end_of_EscreveComandoLCD:
  2583                           	opt stack 0
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           intcon	equ	0xFF2
  2589                           indf0	equ	0xFEF
  2590                           postinc0	equ	0xFEE
  2591                           fsr0h	equ	0xFEA
  2592                           fsr0l	equ	0xFE9
  2593                           wreg	equ	0xFE8
  2594                           postdec1	equ	0xFE5
  2595                           plusw1	equ	0xFE3
  2596                           fsr1l	equ	0xFE1
  2597                           indf2	equ	0xFDF
  2598                           postinc2	equ	0xFDE
  2599                           plusw2	equ	0xFDB
  2600                           fsr2h	equ	0xFDA
  2601                           fsr2l	equ	0xFD9
  2602                           status	equ	0xFD8
  2603                           
  2604 ;; *************** function _Delay *****************
  2605 ;; Defined at:
  2606 ;;		line 54 in file "displayLCD.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  Cnt2            1    1[COMRAM] unsigned char 
  2611 ;;  Cnt1            1    0[COMRAM] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0
  2622 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2624 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2625 ;;Total ram usage:        2 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_ConfiguraLCD
  2631 ;;		_EscreveComandoLCD
  2632 ;;		_EnderecoCursor
  2633 ;;		_EscreveCaractereLCD
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text14
  2638  000FBA                     __ptext14:
  2639                           	opt stack 0
  2640  000FBA                     _Delay:
  2641                           	opt stack 28
  2642                           
  2643                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  2644                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  2645                           
  2646                           ;incstack = 0
  2647  000FBA  0E00               	movlw	0
  2648  000FBC  6E01               	movwf	Delay@Cnt1,c
  2649  000FBE                     l1364:
  2650  000FBE  0E1D               	movlw	29
  2651  000FC0  6401               	cpfsgt	Delay@Cnt1,c
  2652  000FC2  D001               	goto	l19
  2653  000FC4  0012               	return	
  2654  000FC6                     l19:
  2655                           
  2656                           ;displayLCD.c: 59: {
  2657                           ;displayLCD.c: 60: __nop();
  2658  000FC6  F000               	nop	
  2659                           
  2660                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  2661  000FC8  0E00               	movlw	0
  2662  000FCA  6E02               	movwf	Delay@Cnt2,c
  2663  000FCC                     l1370:
  2664  000FCC  0E1D               	movlw	29
  2665  000FCE  6402               	cpfsgt	Delay@Cnt2,c
  2666  000FD0  D001               	goto	l21
  2667  000FD2  D003               	goto	l1378
  2668  000FD4                     l21:
  2669                           
  2670                           ;displayLCD.c: 62: {
  2671                           ;displayLCD.c: 63: __nop();
  2672  000FD4  F000               	nop	
  2673  000FD6  2A02               	incf	Delay@Cnt2,f,c
  2674  000FD8  D7F9               	goto	l1370
  2675  000FDA                     l1378:
  2676  000FDA  2A01               	incf	Delay@Cnt1,f,c
  2677  000FDC  D7F0               	goto	l1364
  2678  000FDE                     __end_of_Delay:
  2679                           	opt stack 0
  2680                           tblptru	equ	0xFF8
  2681                           tblptrh	equ	0xFF7
  2682                           tblptrl	equ	0xFF6
  2683                           tablat	equ	0xFF5
  2684                           intcon	equ	0xFF2
  2685                           indf0	equ	0xFEF
  2686                           postinc0	equ	0xFEE
  2687                           fsr0h	equ	0xFEA
  2688                           fsr0l	equ	0xFE9
  2689                           wreg	equ	0xFE8
  2690                           postdec1	equ	0xFE5
  2691                           plusw1	equ	0xFE3
  2692                           fsr1l	equ	0xFE1
  2693                           indf2	equ	0xFDF
  2694                           postinc2	equ	0xFDE
  2695                           plusw2	equ	0xFDB
  2696                           fsr2h	equ	0xFDA
  2697                           fsr2l	equ	0xFD9
  2698                           status	equ	0xFD8
  2699                           tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           intcon	equ	0xFF2
  2704                           indf0	equ	0xFEF
  2705                           postinc0	equ	0xFEE
  2706                           fsr0h	equ	0xFEA
  2707                           fsr0l	equ	0xFE9
  2708                           wreg	equ	0xFE8
  2709                           postdec1	equ	0xFE5
  2710                           plusw1	equ	0xFE3
  2711                           fsr1l	equ	0xFE1
  2712                           indf2	equ	0xFDF
  2713                           postinc2	equ	0xFDE
  2714                           plusw2	equ	0xFDB
  2715                           fsr2h	equ	0xFDA
  2716                           fsr2l	equ	0xFD9
  2717                           status	equ	0xFD8
  2718                           
  2719                           	psect	rparam
  2720  0000                     tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           intcon	equ	0xFF2
  2725                           indf0	equ	0xFEF
  2726                           postinc0	equ	0xFEE
  2727                           fsr0h	equ	0xFEA
  2728                           fsr0l	equ	0xFE9
  2729                           wreg	equ	0xFE8
  2730                           postdec1	equ	0xFE5
  2731                           plusw1	equ	0xFE3
  2732                           fsr1l	equ	0xFE1
  2733                           indf2	equ	0xFDF
  2734                           postinc2	equ	0xFDE
  2735                           plusw2	equ	0xFDB
  2736                           fsr2h	equ	0xFDA
  2737                           fsr2l	equ	0xFD9
  2738                           status	equ	0xFD8


Data Sizes:
    Strings     13
    Constant    108
    Data        7
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      59
    BANK0           160     76      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[2]), main@Texto_4(BANK0[17]), main@Texto_3(BANK0[17]), main@Texto_1(BANK0[17]), 
		 -> main@Texto_0(BANK0[17]), EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_EscreveInteiroLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveInteiroLCD->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                78    78      0    6408
                                             33 COMRAM     2     2      0
                                              0 BANK0     76    76      0
                       _ConfiguraLCD
                  _EscreveComandoLCD
                 _EscreveFraseRamLCD
                  _EscreveInteiroLCD
                   _PosicaoCursorLCD
                            ___aldiv
                            ___lwdiv
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2      86
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     428
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _PosicaoCursorLCD                                     3     2      1     900
                                              3 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (2) _EnderecoCursor                                       1     1      0     246
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _EscreveInteiroLCD                                    9     7      2    2646
                                             24 COMRAM     9     7      2
                 _EscreveFraseRamLCD
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1682
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1327
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     546
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EscreveFraseRamLCD                                   2     0      2     761
                                              3 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (3) _EscreveCaractereLCD                                  1     1      0     268
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     426
                                              3 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (1) _EscreveComandoLCD                                    1     1      0     334
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     2      0      92
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveComandoLCD
     _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _EscreveInteiroLCD
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   ___aldiv
   ___lwdiv
   _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      4C       5       47.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      3B       1       62.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      87      20        0.0%
DATA                 0      0      87       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Oct 26 09:47:25 2020

                          l21 0FD4                            l31 0C70                            l40 0CA6  
                          l41 0CAE                            l33 0C7A                            l42 0CB0  
                          l19 0FC6                            l43 0CB8                            l35 0C84  
                          l51 0D66                            l44 0CBA                            l36 0C86  
                          l60 0D9C                            l37 0C9A                            l29 0C66  
                          l61 0DA4                            l53 0D70                            l38 0C9C  
                          l62 0DA6                            l70 0DC8                            l39 0CA4  
                          l63 0DAE                            l55 0D7A                            l80 0CF2  
                          l64 0DB0                            l56 0D7C                            l57 0D90  
                          l90 0D30                            l82 0CFC                            l58 0D92  
                          l91 0D32                            l59 0D9A                            l92 0D3A  
                          l84 0D06                            l93 0D3C                            l94 0D44  
                          l86 0D10                            l95 0D46                            l87 0D12  
                          l88 0D26                            l89 0D28                           l177 0962  
                         l667 0E68                           l588 0B94                           l677 0F3E  
                 main@Texto_0 0060                   main@Texto_1 0093                   main@Texto_3 0071  
                 main@Texto_4 0082                           wreg 000FE8                          l1400 0E5E  
                        l1410 0F1C                          l1500 0C7C                          l1412 0F20  
                        l1430 0CFE                          l1416 0F34                          l1408 0F14  
                        l1370 0FCC                          l1434 0D08                          l1426 0CF4  
                        l1364 0FBE                          l1540 0D72                          l1390 0E3E  
                        l1528 0CDC                          l1392 0E42                          l1536 0D68  
                        l1640 0DD4                          l1712 0B02                          l1704 0ADE  
                        l1378 0FDA                          l1458 0B1C                          l1570 0EE8  
                        l1810 0952                          l1492 0C68                          l1580 0E9C  
                        l1388 0E36                          l1468 0B56                          l1652 0DFE  
                        l1644 0DE2                          l1708 0AEC                          l1670 0FF0  
                        l1822 0976                          l1496 0C72                          l1576 0E74  
                        l1648 0DF0                          l1656 0E04                          l1680 0A64  
                        l1692 0A9E                          l1668 0FE0                          l1694 0AAA  
                        l1686 0A7C                          l1696 0AAE                          STR_1 0878  
                        STR_2 086D                          u1040 0E94                          u1200 08A2  
                        u1050 0EBC                          u1210 08BA                          u1220 08D2  
                        u1047 0E8A                          u1071 0F52                          u1057 0EB2  
                        u1307 0C12                          u1190 088A                          u1277 0FE6  
                        u1287 0BDA                          u1297 0BF6                          _main 087C  
                        _itoa 0EC4                          fsr0h 000FEA                          indf0 000FEF  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          _utoa 0B14  
                        start 0000                  ___param_bank 000000    __end_of_EscreveFraseRamLCD 0EC4  
             __end_of___aldiv 0B14                  main@contador 00AA                         ?_main 0001  
                       ?_itoa 0011                         ?_utoa 0008                         _T0CON 000FD5  
             __end_of___lwdiv 0E72               __end_of___lwmod 0F48                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TRISE 000F96                         _Delay 0FBA  
             __end_of_dpowers 0829          EscreveComandoLCD@cmd 0003                  main@velocDec 00A4  
                main@velocInt 00A8                         tablat 000FF5                         plusw1 000FE3  
                       plusw2 000FDB                         utoa@c 0010                         utoa@v 000E  
                       status 000FD8               __initialization 0F84                  __end_of_main 0A48  
                __end_of_itoa 0F06                  __end_of_utoa 0BB8                        ??_main 0022  
        __end_of_ConfiguraLCD 0C56                        ??_itoa 0017                        ??_utoa 000E  
               __activetblptr 000002             _EscreveComandoLCD 0C56                        ?_Delay 0001  
          ?_EscreveComandoLCD 0001                        _ADCON1 000FC1           ??_EscreveComandoLCD 0003  
                      _TMR0IF 007F92              __end_of_delay_ms 1000             ?_PosicaoCursorLCD 0004  
                   ??___aldiv 0009                     ??___lwdiv 0005  __size_of_EscreveCaractereLCD 0072  
                   ??___lwmod 0005            ??_PosicaoCursorLCD 0005                        clear_0 0FAA  
   __end_of_EscreveComandoLCD 0CE2                        itoa@cp 0017             _EscreveInteiroLCD 0F48  
                __pdataCOMRAM 0035                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8            ?_EscreveInteiroLCD 0019  
     __size_of_EnderecoCursor 006A           ??_EscreveInteiroLCD 001B                    __accesstop 0060  
     __end_of__initialization 0FB0                 ___rparam_used 000001                 __end_of_Delay 0FDE  
              __pcstackCOMRAM 0001     __end_of_EscreveInteiroLCD 0F84                       ??_Delay 0001  
       __size_of_ConfiguraLCD 009E    __size_of_EscreveComandoLCD 008C            _EscreveFraseRamLCD 0E72  
                   ?_delay_ms 0001           ?_EscreveFraseRamLCD 0004                  _ConfiguraLCD 0BB8  
                     __Hparam 0000                       __Lparam 0000                       ___aldiv 0A48  
                     ___lwdiv 0E20                       ___lwmod 0F06          ??_EscreveFraseRamLCD 0006  
                __psmallconst 0800                       __pcinit 0F84                       __ramtop 0800  
  __size_of_EscreveInteiroLCD 003C                       __ptext0 087C                       __ptext1 0FDE  
                     __ptext2 0A48                       __ptext3 0DBE                       __ptext4 0D54  
                     __ptext5 0F48                       __ptext6 0EC4                       __ptext7 0B14  
                     __ptext8 0F06                       __ptext9 0E20                       _dpowers 0801  
            ___aldiv@dividend 0001                    ??_delay_ms 0003                _EnderecoCursor 0D54  
                   Delay@Cnt1 0001                     Delay@Cnt2 0002           _EscreveCaractereLCD 0CE2  
        end_of_initialization 0FB0                       ftoa@buf 0024                       itoa@buf 0011  
                     itoa@val 0013                 __Lmediumconst 0000                main@velocidade 00A6  
           __end_ofmain@F3940 083A             __end_ofmain@F3934 086D             __end_ofmain@F3936 085C  
           __end_ofmain@F3938 084B              ___aldiv@quotient 000B                       postdec1 000FE5  
                     postinc0 000FEE                       postinc2 000FDE          ?_EscreveCaractereLCD 0001  
                     utoa@buf 0008                       utoa@val 000A   PosicaoCursorLCD@EnderecoLCD 0006  
                   _PORTDbits 000F83                     _PORTEbits 000F84        __end_of_EnderecoCursor 0DBE  
                   _TRISDbits 000F95     __size_of_PosicaoCursorLCD 0062         ??_EscreveCaractereLCD 0003  
               __pidataCOMRAM 1000               ?_EnderecoCursor 0001           start_initialization 0F84  
    EscreveFraseRamLCD@buffer 0004                   __pbssCOMRAM 0024                 __pcstackBANK0 0060  
           __size_of_delay_ms 0022              ___lwdiv@dividend 0001                      ?___aldiv 0001  
                    ?___lwdiv 0001                      ?___lwmod 0001        EscreveInteiroLCD@F4004 0035  
                 __smallconst 0800                __size_of_Delay 0024              _PosicaoCursorLCD 0DBE  
            ___lwdiv@quotient 0005        EscreveInteiroLCD@valor 0019        EscreveInteiroLCD@texto 001B  
             ___aldiv@divisor 0005        EnderecoCursor@endereco 0003               ___aldiv@counter 0009  
     EscreveCaractereLCD@data 0003                     main@F3940 0829                     main@F3934 085C  
                   main@F3936 084B                     main@F3938 083A   __size_of_EscreveFraseRamLCD 0052  
                   copy_data0 0F98         delay_ms@tempodeatraso 0001                      __Hrparam 0000  
                    __Lrparam 0000              __size_of___aldiv 00CC              ??_EnderecoCursor 0003  
            __size_of___lwdiv 0052              __size_of___lwmod 0042                      _delay_ms 0FDE  
             ___lwdiv@divisor 0003               ___lwdiv@counter 0007                      __ptext10 0E72  
                    __ptext11 0CE2                      __ptext12 0BB8                      __ptext13 0C56  
                    __ptext14 0FBA                 __size_of_main 01CC                 __size_of_itoa 0042  
               __size_of_utoa 00A4   __end_of_EscreveCaractereLCD 0D54                      itoa@base 0015  
            ___lwmod@dividend 0001                 ?_ConfiguraLCD 0001      __end_of_PosicaoCursorLCD 0E20  
      PosicaoCursorLCD@coluna 0004                      utoa@base 000C               ___lwmod@divisor 0003  
             ___lwmod@counter 0005                  ___aldiv@sign 000A         PosicaoCursorLCD@linha 0005  
              ??_ConfiguraLCD 0004  
