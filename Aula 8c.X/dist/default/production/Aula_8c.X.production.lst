

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Sep 25 13:32:44 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 1.41
    25                           ; Generated 25/01/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  000D68                     __pidataCOMRAM:
    61                           	opt stack 0
    62                           
    63                           ;initializer for EscreveInteiroLCD@F4004
    64  000D68  30                 	db	48
    65  000D69  30                 	db	48
    66  000D6A  30                 	db	48
    67  000D6B  30                 	db	48
    68  000D6C  30                 	db	48
    69  000D6D  30                 	db	48
    70  000D6E  00                 	db	0
    71                           
    72                           	psect	smallconst
    73  000800                     __psmallconst:
    74                           	opt stack 0
    75  000800  00                 	db	0
    76  000801  0001               	dw	1
    77  000803  0000               	dw	0
    78  000805  000A               	dw	10
    79  000807  0000               	dw	0
    80  000809  0064               	dw	100
    81  00080B  0000               	dw	0
    82  00080D  03E8               	dw	1000
    83  00080F  0000               	dw	0
    84  000811  2710               	dw	10000
    85  000813  0000               	dw	0
    86  000815  86A0               	dw	34464
    87  000817  0001               	dw	1
    88  000819  4240               	dw	16960
    89  00081B  000F               	dw	15
    90  00081D  9680               	dw	38528
    91  00081F  0098               	dw	152
    92  000821  E100               	dw	57600
    93  000823  05F5               	dw	1525
    94  000825  CA00               	dw	51712
    95  000827  3B9A               	dw	15258
    96  000829                     __end_of_dpowers:
    97                           	opt stack 0
    98  000829                     main@F4007:
    99                           	opt stack 0
   100  000829  20                 	db	32
   101  00082A  20                 	db	32
   102  00082B  20                 	db	32
   103  00082C  20                 	db	32
   104  00082D  20                 	db	32
   105  00082E  20                 	db	32
   106  00082F  20                 	db	32
   107  000830  20                 	db	32
   108  000831  20                 	db	32
   109  000832  20                 	db	32
   110  000833  20                 	db	32
   111  000834  20                 	db	32
   112  000835  20                 	db	32
   113  000836  20                 	db	32
   114  000837  20                 	db	32
   115  000838  20                 	db	32
   116  000839  00                 	db	0
   117  00083A                     __end_ofmain@F4007:
   118                           	opt stack 0
   119  00083A                     main@F4005:
   120                           	opt stack 0
   121  00083A  20                 	db	32
   122  00083B  20                 	db	32
   123  00083C  20                 	db	32
   124  00083D  20                 	db	32
   125  00083E  46                 	db	70
   126  00083F  52                 	db	82
   127  000840  45                 	db	69
   128  000841  4E                 	db	78
   129  000842  41                 	db	65
   130  000843  4E                 	db	78
   131  000844  44                 	db	68
   132  000845  4F                 	db	79
   133  000846  20                 	db	32
   134  000847  20                 	db	32
   135  000848  20                 	db	32
   136  000849  20                 	db	32
   137  00084A  00                 	db	0
   138  00084B                     __end_ofmain@F4005:
   139                           	opt stack 0
   140  00084B                     main@F4003:
   141                           	opt stack 0
   142  00084B  53                 	db	83
   143  00084C  45                 	db	69
   144  00084D  54                 	db	84
   145  00084E  41                 	db	65
   146  00084F  20                 	db	32
   147  000850  50                 	db	80
   148  000851  2F                 	db	47
   149  000852  20                 	db	32
   150  000853  44                 	db	68
   151  000854  49                 	db	73
   152  000855  52                 	db	82
   153  000856  45                 	db	69
   154  000857  49                 	db	73
   155  000858  54                 	db	84
   156  000859  41                 	db	65
   157  00085A  20                 	db	32
   158  00085B  00                 	db	0
   159  00085C                     __end_ofmain@F4003:
   160                           	opt stack 0
   161  00085C                     main@F4001:
   162                           	opt stack 0
   163  00085C  53                 	db	83
   164  00085D  45                 	db	69
   165  00085E  54                 	db	84
   166  00085F  41                 	db	65
   167  000860  20                 	db	32
   168  000861  50                 	db	80
   169  000862  2F                 	db	47
   170  000863  20                 	db	32
   171  000864  45                 	db	69
   172  000865  53                 	db	83
   173  000866  51                 	db	81
   174  000867  55                 	db	85
   175  000868  45                 	db	69
   176  000869  52                 	db	82
   177  00086A  44                 	db	68
   178  00086B  41                 	db	65
   179  00086C  00                 	db	0
   180  00086D                     __end_ofmain@F4001:
   181                           	opt stack 0
   182  00086D                     main@F3999:
   183                           	opt stack 0
   184  00086D  53                 	db	83
   185  00086E  45                 	db	69
   186  00086F  54                 	db	84
   187  000870  41                 	db	65
   188  000871  20                 	db	32
   189  000872  53                 	db	83
   190  000873  45                 	db	69
   191  000874  51                 	db	81
   192  000875  55                 	db	85
   193  000876  45                 	db	69
   194  000877  4E                 	db	78
   195  000878  43                 	db	67
   196  000879  49                 	db	73
   197  00087A  41                 	db	65
   198  00087B  4C                 	db	76
   199  00087C  20                 	db	32
   200  00087D  00                 	db	0
   201  00087E                     __end_ofmain@F3999:
   202                           	opt stack 0
   203  00087E                     main@F3997:
   204                           	opt stack 0
   205  00087E  46                 	db	70
   206  00087F  41                 	db	65
   207  000880  54                 	db	84
   208  000881  45                 	db	69
   209  000882  43                 	db	67
   210  000883  20                 	db	32
   211  000884  53                 	db	83
   212  000885  54                 	db	84
   213  000886  4F                 	db	79
   214  000887  2E                 	db	46
   215  000888  20                 	db	32
   216  000889  41                 	db	65
   217  00088A  4E                 	db	78
   218  00088B  44                 	db	68
   219  00088C  52                 	db	82
   220  00088D  45                 	db	69
   221  00088E  00                 	db	0
   222  00088F                     __end_ofmain@F3997:
   223                           	opt stack 0
   224  0000                     _PORTEbits	set	3972
   225  0000                     _PORTB	set	3969
   226  0000                     _TRISE	set	3990
   227  0000                     _TRISB	set	3987
   228  0000                     _ADCON1	set	4033
   229  0000                     _PORTDbits	set	3971
   230  0000                     _TRISDbits	set	3989
   231  00088F  25                 	db	37
   232  000890  6C                 	db	108	;'l'
   233  000891  75                 	db	117	;'u'
   234  000892  2E                 	db	46
   235  000893  25                 	db	37
   236  000894  36                 	db	54	;'6'
   237  000895  2E                 	db	46
   238  000896  36                 	db	54	;'6'
   239  000897  6C                 	db	108	;'l'
   240  000898  75                 	db	117	;'u'
   241  000899  00                 	db	0
   242  00089A  00                 	db	0	; dummy byte at the end
   243  0000                     
   244                           ; #config settings
   245                           
   246                           	psect	cinit
   247  000CC8                     __pcinit:
   248                           	opt stack 0
   249  000CC8                     start_initialization:
   250                           	opt stack 0
   251  000CC8                     __initialization:
   252                           	opt stack 0
   253                           
   254                           ; Initialize objects allocated to COMRAM (7 bytes)
   255                           ; load TBLPTR registers with __pidataCOMRAM
   256  000CC8  0E68               	movlw	low __pidataCOMRAM
   257  000CCA  6EF6               	movwf	tblptrl,c
   258  000CCC  0E0D               	movlw	high __pidataCOMRAM
   259  000CCE  6EF7               	movwf	tblptrh,c
   260  000CD0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   261  000CD2  6EF8               	movwf	tblptru,c
   262  000CD4  EE00  F012         	lfsr	0,__pdataCOMRAM
   263  000CD8  EE10 F007          	lfsr	1,7
   264  000CDC                     copy_data0:
   265  000CDC  0009               	tblrd		*+
   266  000CDE  CFF5 FFEE          	movff	tablat,postinc0
   267  000CE2  50E5               	movf	postdec1,w,c
   268  000CE4  50E1               	movf	fsr1l,w,c
   269  000CE6  E1FA               	bnz	copy_data0
   270                           
   271                           ; Clear objects allocated to COMRAM (17 bytes)
   272  000CE8  EE00  F001         	lfsr	0,__pbssCOMRAM
   273  000CEC  0E11               	movlw	17
   274  000CEE                     clear_0:
   275  000CEE  6AEE               	clrf	postinc0,c
   276  000CF0  06E8               	decf	wreg,f,c
   277  000CF2  E1FD               	bnz	clear_0
   278  000CF4                     end_of_initialization:
   279                           	opt stack 0
   280  000CF4                     __end_of__initialization:
   281                           	opt stack 0
   282  000CF4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283  000CF6  6EF8               	movwf	tblptru,c
   284  000CF8  0100               	movlb	0
   285  000CFA  EF4E  F004         	goto	_main	;jump to C main() function
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	bssCOMRAM
   296  000001                     __pbssCOMRAM:
   297                           	opt stack 0
   298  000001                     ftoa@buf:
   299                           	opt stack 0
   300  000001                     	ds	17
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           postdec1	equ	0xFE5
   308                           fsr1l	equ	0xFE1
   309                           
   310                           	psect	dataCOMRAM
   311  000012                     __pdataCOMRAM:
   312                           	opt stack 0
   313  000012                     EscreveInteiroLCD@F4004:
   314                           	opt stack 0
   315  000012                     	ds	7
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           postdec1	equ	0xFE5
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	cstackBANK0
   326  000060                     __pcstackBANK0:
   327                           	opt stack 0
   328  000060                     main@Texto_0:
   329                           	opt stack 0
   330                           
   331                           ; 17 bytes @ 0x0
   332  000060                     	ds	17
   333  000071                     main@Texto_2:
   334                           	opt stack 0
   335                           
   336                           ; 17 bytes @ 0x11
   337  000071                     	ds	17
   338  000082                     main@Texto_3:
   339                           	opt stack 0
   340                           
   341                           ; 17 bytes @ 0x22
   342  000082                     	ds	17
   343  000093                     main@Texto_4:
   344                           	opt stack 0
   345                           
   346                           ; 17 bytes @ 0x33
   347  000093                     	ds	17
   348  0000A4                     main@Texto_5:
   349                           	opt stack 0
   350                           
   351                           ; 17 bytes @ 0x44
   352  0000A4                     	ds	17
   353  0000B5                     main@Texto_1:
   354                           	opt stack 0
   355                           
   356                           ; 17 bytes @ 0x55
   357  0000B5                     	ds	17
   358  0000C6                     main@atraso:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x66
   362  0000C6                     	ds	2
   363  0000C8                     main@cont:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x68
   367  0000C8                     	ds	1
   368                           tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           postdec1	equ	0xFE5
   375                           fsr1l	equ	0xFE1
   376                           
   377                           	psect	cstackCOMRAM
   378  000019                     __pcstackCOMRAM:
   379                           	opt stack 0
   380  000019                     Delay@Cnt1:
   381                           	opt stack 0
   382  000019                     delay_ms@tempodeatraso:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x0
   386  000019                     	ds	1
   387  00001A                     Delay@Cnt2:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x1
   391  00001A                     	ds	1
   392  00001B                     ??_delay_ms:
   393  00001B                     EscreveComandoLCD@cmd:
   394                           	opt stack 0
   395  00001B                     EnderecoCursor@endereco:
   396                           	opt stack 0
   397  00001B                     EscreveCaractereLCD@data:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x2
   401  00001B                     	ds	1
   402  00001C                     ??_ConfiguraLCD:
   403  00001C                     PosicaoCursorLCD@coluna:
   404                           	opt stack 0
   405  00001C                     EscreveFraseRamLCD@buffer:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x3
   409  00001C                     	ds	1
   410  00001D                     PosicaoCursorLCD@linha:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x4
   414  00001D                     	ds	1
   415  00001E                     PosicaoCursorLCD@EnderecoLCD:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x5
   419  00001E                     	ds	1
   420  00001F                     tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           ; 1 bytes @ 0x6
   430 ;;
   431 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   432 ;;
   433 ;; *************** function _main *****************
   434 ;; Defined at:
   435 ;;		line 50 in file "display.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  Texto_1        17   85[BANK0 ] const unsigned char [17]
   440 ;;  Texto_5        17   68[BANK0 ] const unsigned char [17]
   441 ;;  Texto_4        17   51[BANK0 ] const unsigned char [17]
   442 ;;  Texto_3        17   34[BANK0 ] const unsigned char [17]
   443 ;;  Texto_2        17   17[BANK0 ] const unsigned char [17]
   444 ;;  Texto_0        17    0[BANK0 ] const unsigned char [17]
   445 ;;  atraso          2  102[BANK0 ] unsigned int 
   446 ;;  cont            1  104[BANK0 ] unsigned char 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   456 ;;      Params:         0       0       0       0       0       0       0       0       0
   457 ;;      Locals:         0     105       0       0       0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0       0       0       0       0
   459 ;;      Totals:         0     105       0       0       0       0       0       0       0
   460 ;;Total ram usage:      105 bytes
   461 ;; Hardware stack levels required when called:    3
   462 ;; This function calls:
   463 ;;		_ConfiguraLCD
   464 ;;		_EscreveFraseRamLCD
   465 ;;		_PosicaoCursorLCD
   466 ;;		_delay_ms
   467 ;; This function is called by:
   468 ;;		Startup code after reset
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text0
   473  00089C                     __ptext0:
   474                           	opt stack 0
   475  00089C                     _main:
   476                           	opt stack 28
   477                           
   478                           ;display.c: 52: ADCON1 = 0X0F;
   479                           
   480                           ;incstack = 0
   481  00089C  0E0F               	movlw	15
   482  00089E  6EC1               	movwf	4033,c	;volatile
   483                           
   484                           ;display.c: 53: TRISB = 0X00;
   485  0008A0  0E00               	movlw	0
   486  0008A2  6E93               	movwf	3987,c	;volatile
   487                           
   488                           ;display.c: 54: TRISE = 0b11111111;
   489  0008A4  6896               	setf	3990,c	;volatile
   490                           
   491                           ;display.c: 55: PORTB = 0XFF;
   492  0008A6  6881               	setf	3969,c	;volatile
   493                           
   494                           ;display.c: 56: char cont;
   495                           ;display.c: 57: unsigned int atraso = 125;
   496  0008A8  0E00               	movlw	0
   497  0008AA  0100               	movlb	0	; () banked
   498  0008AC  6FC7               	movwf	(main@atraso+1)& (0+255),b
   499  0008AE  0E7D               	movlw	125
   500  0008B0  6FC6               	movwf	main@atraso& (0+255),b
   501                           
   502                           ; BSR set to: 0
   503                           ;display.c: 61: const unsigned char Texto_0[]="FATEC STO. ANDRE";
   504  0008B2  0E7E               	movlw	low main@F3997
   505  0008B4  6EF6               	movwf	tblptrl,c
   506  0008B6                     	if	1	;There is more than 1 active tblptr byte
   507  0008B6  0E08               	movlw	high main@F3997
   508  0008B8  6EF7               	movwf	tblptrh,c
   509  0008BA                     	endif
   510  0008BA                     	if	0	;There are less than 3 active tblptr bytes
   511  0008BA                     	endif
   512  0008BA  EE20  F060         	lfsr	2,main@Texto_0
   513  0008BE  0E10               	movlw	16
   514  0008C0                     u880:
   515  0008C0  0009               	tblrd		*+
   516  0008C2  CFF5 FFDE          	movff	tablat,postinc2
   517  0008C6  06E8               	decf	wreg,f,c
   518  0008C8  E2FB               	bc	u880
   519                           
   520                           ; BSR set to: 0
   521                           ;display.c: 62: const unsigned char Texto_1[]="SETA SEQUENCIAL ";
   522  0008CA  0E6D               	movlw	low main@F3999
   523  0008CC  6EF6               	movwf	tblptrl,c
   524  0008CE                     	if	1	;There is more than 1 active tblptr byte
   525  0008CE  0E08               	movlw	high main@F3999
   526  0008D0  6EF7               	movwf	tblptrh,c
   527  0008D2                     	endif
   528  0008D2                     	if	0	;There are less than 3 active tblptr bytes
   529  0008D2                     	endif
   530  0008D2  EE20  F0B5         	lfsr	2,main@Texto_1
   531  0008D6  0E10               	movlw	16
   532  0008D8                     u890:
   533  0008D8  0009               	tblrd		*+
   534  0008DA  CFF5 FFDE          	movff	tablat,postinc2
   535  0008DE  06E8               	decf	wreg,f,c
   536  0008E0  E2FB               	bc	u890
   537                           
   538                           ; BSR set to: 0
   539                           ;display.c: 63: const unsigned char Texto_2[]="SETA P/ ESQUERDA";
   540  0008E2  0E5C               	movlw	low main@F4001
   541  0008E4  6EF6               	movwf	tblptrl,c
   542  0008E6                     	if	1	;There is more than 1 active tblptr byte
   543  0008E6  0E08               	movlw	high main@F4001
   544  0008E8  6EF7               	movwf	tblptrh,c
   545  0008EA                     	endif
   546  0008EA                     	if	0	;There are less than 3 active tblptr bytes
   547  0008EA                     	endif
   548  0008EA  EE20  F071         	lfsr	2,main@Texto_2
   549  0008EE  0E10               	movlw	16
   550  0008F0                     u900:
   551  0008F0  0009               	tblrd		*+
   552  0008F2  CFF5 FFDE          	movff	tablat,postinc2
   553  0008F6  06E8               	decf	wreg,f,c
   554  0008F8  E2FB               	bc	u900
   555                           
   556                           ; BSR set to: 0
   557                           ;display.c: 64: const unsigned char Texto_3[]="SETA P/ DIREITA ";
   558  0008FA  0E4B               	movlw	low main@F4003
   559  0008FC  6EF6               	movwf	tblptrl,c
   560  0008FE                     	if	1	;There is more than 1 active tblptr byte
   561  0008FE  0E08               	movlw	high main@F4003
   562  000900  6EF7               	movwf	tblptrh,c
   563  000902                     	endif
   564  000902                     	if	0	;There are less than 3 active tblptr bytes
   565  000902                     	endif
   566  000902  EE20  F082         	lfsr	2,main@Texto_3
   567  000906  0E10               	movlw	16
   568  000908                     u910:
   569  000908  0009               	tblrd		*+
   570  00090A  CFF5 FFDE          	movff	tablat,postinc2
   571  00090E  06E8               	decf	wreg,f,c
   572  000910  E2FB               	bc	u910
   573                           
   574                           ; BSR set to: 0
   575                           ;display.c: 65: const unsigned char Texto_4[]="    FRENANDO    ";
   576  000912  0E3A               	movlw	low main@F4005
   577  000914  6EF6               	movwf	tblptrl,c
   578  000916                     	if	1	;There is more than 1 active tblptr byte
   579  000916  0E08               	movlw	high main@F4005
   580  000918  6EF7               	movwf	tblptrh,c
   581  00091A                     	endif
   582  00091A                     	if	0	;There are less than 3 active tblptr bytes
   583  00091A                     	endif
   584  00091A  EE20  F093         	lfsr	2,main@Texto_4
   585  00091E  0E10               	movlw	16
   586  000920                     u920:
   587  000920  0009               	tblrd		*+
   588  000922  CFF5 FFDE          	movff	tablat,postinc2
   589  000926  06E8               	decf	wreg,f,c
   590  000928  E2FB               	bc	u920
   591                           
   592                           ; BSR set to: 0
   593                           ;display.c: 66: const unsigned char Texto_5[]="                ";
   594  00092A  0E29               	movlw	low main@F4007
   595  00092C  6EF6               	movwf	tblptrl,c
   596  00092E                     	if	1	;There is more than 1 active tblptr byte
   597  00092E  0E08               	movlw	high main@F4007
   598  000930  6EF7               	movwf	tblptrh,c
   599  000932                     	endif
   600  000932                     	if	0	;There are less than 3 active tblptr bytes
   601  000932                     	endif
   602  000932  EE20  F0A4         	lfsr	2,main@Texto_5
   603  000936  0E10               	movlw	16
   604  000938                     u930:
   605  000938  0009               	tblrd		*+
   606  00093A  CFF5 FFDE          	movff	tablat,postinc2
   607  00093E  06E8               	decf	wreg,f,c
   608  000940  E2FB               	bc	u930
   609                           
   610                           ; BSR set to: 0
   611                           ;display.c: 70: ConfiguraLCD();
   612  000942  EC30  F005         	call	_ConfiguraLCD	;wreg free
   613                           
   614                           ;display.c: 72: EscreveFraseRamLCD(Texto_0);
   615  000946  0E60               	movlw	low main@Texto_0
   616  000948  6E1C               	movwf	EscreveFraseRamLCD@buffer,c
   617  00094A  0E00               	movlw	high main@Texto_0
   618  00094C  6E1D               	movwf	EscreveFraseRamLCD@buffer+1,c
   619  00094E  EC7F  F006         	call	_EscreveFraseRamLCD	;wreg free
   620                           
   621                           ;display.c: 73: PosicaoCursorLCD(2,1);
   622  000952  0E01               	movlw	1
   623  000954  6E1C               	movwf	PosicaoCursorLCD@coluna,c
   624  000956  0E02               	movlw	2
   625  000958  EC33  F006         	call	_PosicaoCursorLCD
   626                           
   627                           ;display.c: 74: EscreveFraseRamLCD(Texto_1);
   628  00095C  0EB5               	movlw	low main@Texto_1
   629  00095E  6E1C               	movwf	EscreveFraseRamLCD@buffer,c
   630  000960  0E00               	movlw	high main@Texto_1
   631  000962  6E1D               	movwf	EscreveFraseRamLCD@buffer+1,c
   632  000964  EC7F  F006         	call	_EscreveFraseRamLCD	;wreg free
   633                           
   634                           ;display.c: 76: delay_ms(5000);
   635  000968  0E13               	movlw	19
   636  00096A  6E1A               	movwf	delay_ms@tempodeatraso+1,c
   637  00096C  0E88               	movlw	136
   638  00096E  6E19               	movwf	delay_ms@tempodeatraso,c
   639  000970  ECA3  F006         	call	_delay_ms	;wreg free
   640                           
   641                           ;display.c: 78: PosicaoCursorLCD(1,1);
   642  000974  0E01               	movlw	1
   643  000976  6E1C               	movwf	PosicaoCursorLCD@coluna,c
   644  000978  0E01               	movlw	1
   645  00097A  EC33  F006         	call	_PosicaoCursorLCD
   646                           
   647                           ;display.c: 79: EscreveFraseRamLCD(Texto_1);
   648  00097E  0EB5               	movlw	low main@Texto_1
   649  000980  6E1C               	movwf	EscreveFraseRamLCD@buffer,c
   650  000982  0E00               	movlw	high main@Texto_1
   651  000984  6E1D               	movwf	EscreveFraseRamLCD@buffer+1,c
   652  000986  EC7F  F006         	call	_EscreveFraseRamLCD	;wreg free
   653  00098A                     l1578:
   654                           
   655                           ;display.c: 83: {
   656                           ;display.c: 84: if(PORTEbits.RE0 == 0)
   657  00098A  B084               	btfsc	3972,0,c	;volatile
   658  00098C  D022               	goto	l171
   659                           
   660                           ;display.c: 85: {
   661                           ;display.c: 86: PORTB = 0b11101111;
   662  00098E  0EEF               	movlw	239
   663  000990  6E81               	movwf	3969,c	;volatile
   664                           
   665                           ;display.c: 87: PosicaoCursorLCD(2,1);
   666  000992  0E01               	movlw	1
   667  000994  6E1C               	movwf	PosicaoCursorLCD@coluna,c
   668  000996  0E02               	movlw	2
   669  000998  EC33  F006         	call	_PosicaoCursorLCD
   670                           
   671                           ;display.c: 88: EscreveFraseRamLCD(Texto_2);
   672  00099C  0E71               	movlw	low main@Texto_2
   673  00099E  6E1C               	movwf	EscreveFraseRamLCD@buffer,c
   674  0009A0  0E00               	movlw	high main@Texto_2
   675  0009A2  6E1D               	movwf	EscreveFraseRamLCD@buffer+1,c
   676  0009A4  EC7F  F006         	call	_EscreveFraseRamLCD	;wreg free
   677                           
   678                           ;display.c: 89: for(cont = 0; cont<=3; cont++){
   679  0009A8  0E00               	movlw	0
   680  0009AA  0100               	movlb	0	; () banked
   681  0009AC  6FC8               	movwf	main@cont& (0+255),b
   682  0009AE                     l1588:
   683                           
   684                           ; BSR set to: 0
   685  0009AE  0E03               	movlw	3
   686  0009B0  0100               	movlb	0	; () banked
   687  0009B2  65C8               	cpfsgt	main@cont& (0+255),b
   688  0009B4  D001               	goto	l1592
   689  0009B6  D00D               	goto	l171
   690  0009B8                     l1592:
   691                           
   692                           ; BSR set to: 0
   693                           ;display.c: 90: delay_ms(atraso);
   694  0009B8  C0C6  F019         	movff	main@atraso,delay_ms@tempodeatraso
   695  0009BC  C0C7  F01A         	movff	main@atraso+1,delay_ms@tempodeatraso+1
   696  0009C0  ECA3  F006         	call	_delay_ms	;wreg free
   697                           
   698                           ;display.c: 91: PORTB = PORTB << 1 | 0b00001111;
   699  0009C4  5081               	movf	3969,w,c	;volatile
   700  0009C6  2481               	addwf	3969,w,c	;volatile
   701  0009C8  090F               	iorlw	15
   702  0009CA  6E81               	movwf	3969,c	;volatile
   703  0009CC  0100               	movlb	0	; () banked
   704  0009CE  2BC8               	incf	main@cont& (0+255),f,b
   705  0009D0  D7EE               	goto	l1588
   706  0009D2                     l171:
   707                           
   708                           ;display.c: 92: }
   709                           ;display.c: 93: }
   710                           ;display.c: 94: if(PORTEbits.RE1 == 0)
   711  0009D2  B284               	btfsc	3972,1,c	;volatile
   712  0009D4  D022               	goto	l174
   713                           
   714                           ;display.c: 95: {
   715                           ;display.c: 96: PORTB = 0b11110111;
   716  0009D6  0EF7               	movlw	247
   717  0009D8  6E81               	movwf	3969,c	;volatile
   718                           
   719                           ;display.c: 97: PosicaoCursorLCD(2,1);
   720  0009DA  0E01               	movlw	1
   721  0009DC  6E1C               	movwf	PosicaoCursorLCD@coluna,c
   722  0009DE  0E02               	movlw	2
   723  0009E0  EC33  F006         	call	_PosicaoCursorLCD
   724                           
   725                           ;display.c: 98: EscreveFraseRamLCD(Texto_3);
   726  0009E4  0E82               	movlw	low main@Texto_3
   727  0009E6  6E1C               	movwf	EscreveFraseRamLCD@buffer,c
   728  0009E8  0E00               	movlw	high main@Texto_3
   729  0009EA  6E1D               	movwf	EscreveFraseRamLCD@buffer+1,c
   730  0009EC  EC7F  F006         	call	_EscreveFraseRamLCD	;wreg free
   731                           
   732                           ;display.c: 99: for(cont = 0; cont<=3; cont++){
   733  0009F0  0E00               	movlw	0
   734  0009F2  0100               	movlb	0	; () banked
   735  0009F4  6FC8               	movwf	main@cont& (0+255),b
   736  0009F6                     l1608:
   737                           
   738                           ; BSR set to: 0
   739  0009F6  0E03               	movlw	3
   740  0009F8  0100               	movlb	0	; () banked
   741  0009FA  65C8               	cpfsgt	main@cont& (0+255),b
   742  0009FC  D001               	goto	l1612
   743  0009FE  D00D               	goto	l174
   744  000A00                     l1612:
   745                           
   746                           ; BSR set to: 0
   747                           ;display.c: 100: delay_ms(atraso);
   748  000A00  C0C6  F019         	movff	main@atraso,delay_ms@tempodeatraso
   749  000A04  C0C7  F01A         	movff	main@atraso+1,delay_ms@tempodeatraso+1
   750  000A08  ECA3  F006         	call	_delay_ms	;wreg free
   751                           
   752                           ;display.c: 101: PORTB = PORTB >> 1 | 0b11110000;
   753  000A0C  90D8               	bcf	status,0,c
   754  000A0E  3081               	rrcf	3969,w,c	;volatile
   755  000A10  09F0               	iorlw	240
   756  000A12  6E81               	movwf	3969,c	;volatile
   757  000A14  0100               	movlb	0	; () banked
   758  000A16  2BC8               	incf	main@cont& (0+255),f,b
   759  000A18  D7EE               	goto	l1608
   760  000A1A                     l174:
   761                           
   762                           ;display.c: 102: }
   763                           ;display.c: 103: }
   764                           ;display.c: 104: if(PORTEbits.RE2 == 0)
   765  000A1A  B484               	btfsc	3972,2,c	;volatile
   766  000A1C  D014               	goto	l177
   767                           
   768                           ;display.c: 105: {
   769                           ;display.c: 106: PosicaoCursorLCD(2,1);
   770  000A1E  0E01               	movlw	1
   771  000A20  6E1C               	movwf	PosicaoCursorLCD@coluna,c
   772  000A22  0E02               	movlw	2
   773  000A24  EC33  F006         	call	_PosicaoCursorLCD
   774                           
   775                           ;display.c: 107: EscreveFraseRamLCD(Texto_4);
   776  000A28  0E93               	movlw	low main@Texto_4
   777  000A2A  6E1C               	movwf	EscreveFraseRamLCD@buffer,c
   778  000A2C  0E00               	movlw	high main@Texto_4
   779  000A2E  6E1D               	movwf	EscreveFraseRamLCD@buffer+1,c
   780  000A30  EC7F  F006         	call	_EscreveFraseRamLCD	;wreg free
   781                           
   782                           ;display.c: 108: PORTB = 0b00000000;
   783  000A34  0E00               	movlw	0
   784  000A36  6E81               	movwf	3969,c	;volatile
   785                           
   786                           ;display.c: 109: delay_ms(500);
   787  000A38  0E01               	movlw	1
   788  000A3A  6E1A               	movwf	delay_ms@tempodeatraso+1,c
   789  000A3C  0EF4               	movlw	244
   790  000A3E  6E19               	movwf	delay_ms@tempodeatraso,c
   791  000A40  ECA3  F006         	call	_delay_ms	;wreg free
   792                           
   793                           ;display.c: 110: }
   794  000A44  D7A2               	goto	l1578
   795  000A46                     l177:
   796                           
   797                           ;display.c: 111: else
   798                           ;display.c: 112: {
   799                           ;display.c: 113: PORTB = 0b11111111;
   800  000A46  6881               	setf	3969,c	;volatile
   801                           
   802                           ;display.c: 114: PosicaoCursorLCD(2,1);
   803  000A48  0E01               	movlw	1
   804  000A4A  6E1C               	movwf	PosicaoCursorLCD@coluna,c
   805  000A4C  0E02               	movlw	2
   806  000A4E  EC33  F006         	call	_PosicaoCursorLCD
   807                           
   808                           ;display.c: 115: EscreveFraseRamLCD(Texto_5);
   809  000A52  0EA4               	movlw	low main@Texto_5
   810  000A54  6E1C               	movwf	EscreveFraseRamLCD@buffer,c
   811  000A56  0E00               	movlw	high main@Texto_5
   812  000A58  6E1D               	movwf	EscreveFraseRamLCD@buffer+1,c
   813  000A5A  EC7F  F006         	call	_EscreveFraseRamLCD	;wreg free
   814  000A5E  D795               	goto	l1578
   815  000A60                     __end_of_main:
   816                           	opt stack 0
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           postinc0	equ	0xFEE
   822                           wreg	equ	0xFE8
   823                           postdec1	equ	0xFE5
   824                           fsr1l	equ	0xFE1
   825                           postinc2	equ	0xFDE
   826                           status	equ	0xFD8
   827                           
   828 ;; *************** function _delay_ms *****************
   829 ;; Defined at:
   830 ;;		line 121 in file "display.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  tempodeatras    2    0[COMRAM] unsigned int 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   844 ;;      Params:         2       0       0       0       0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0       0       0       0       0
   846 ;;      Temps:          1       0       0       0       0       0       0       0       0
   847 ;;      Totals:         3       0       0       0       0       0       0       0       0
   848 ;;Total ram usage:        3 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text1
   858  000D46                     __ptext1:
   859                           	opt stack 0
   860  000D46                     _delay_ms:
   861                           	opt stack 30
   862                           
   863                           ;display.c: 123: while(--tempodeatraso){
   864                           
   865                           ;incstack = 0
   866  000D46  D008               	goto	l1476
   867  000D48                     l1474:
   868                           
   869                           ;display.c: 124: _delay((unsigned long)((1)*(48000000/4000.0)));
   870  000D48  0E10               	movlw	16
   871  000D4A  6E1B               	movwf	??_delay_ms& (0+255),c
   872  000D4C  0E94               	movlw	148
   873  000D4E                     u1017:
   874  000D4E  2EE8               	decfsz	wreg,f,c
   875  000D50  D7FE               	bra	u1017
   876  000D52  2E1B               	decfsz	??_delay_ms& (0+255),f,c
   877  000D54  D7FC               	bra	u1017
   878  000D56  D000               	nop2	
   879  000D58                     l1476:
   880  000D58  0619               	decf	delay_ms@tempodeatraso,f,c
   881  000D5A  A0D8               	btfss	status,0,c
   882  000D5C  061A               	decf	delay_ms@tempodeatraso+1,f,c
   883  000D5E  5019               	movf	delay_ms@tempodeatraso,w,c
   884  000D60  101A               	iorwf	delay_ms@tempodeatraso+1,w,c
   885  000D62  B4D8               	btfsc	status,2,c
   886  000D64  0012               	return	
   887  000D66  D7F0               	goto	l1474
   888  000D68                     __end_of_delay_ms:
   889                           	opt stack 0
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           postinc0	equ	0xFEE
   895                           wreg	equ	0xFE8
   896                           postdec1	equ	0xFE5
   897                           fsr1l	equ	0xFE1
   898                           postinc2	equ	0xFDE
   899                           status	equ	0xFD8
   900                           
   901 ;; *************** function _PosicaoCursorLCD *****************
   902 ;; Defined at:
   903 ;;		line 280 in file "displayLCD.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  linha           1    wreg     unsigned char 
   906 ;;  coluna          1    3[COMRAM] unsigned char 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  linha           1    4[COMRAM] unsigned char 
   909 ;;  EnderecoLCD     1    5[COMRAM] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   919 ;;      Params:         1       0       0       0       0       0       0       0       0
   920 ;;      Locals:         2       0       0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0
   922 ;;      Totals:         3       0       0       0       0       0       0       0       0
   923 ;;Total ram usage:        3 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    2
   926 ;; This function calls:
   927 ;;		_EnderecoCursor
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text2
   934  000C66                     __ptext2:
   935                           	opt stack 0
   936  000C66                     _PosicaoCursorLCD:
   937                           	opt stack 28
   938                           
   939                           ;incstack = 0
   940                           ;PosicaoCursorLCD@linha stored from wreg
   941  000C66  6E1D               	movwf	PosicaoCursorLCD@linha,c
   942                           
   943                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
   944  000C68  0E00               	movlw	0
   945  000C6A  6E1E               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   946                           
   947                           ;displayLCD.c: 292: if (coluna >= 0)
   948  000C6C  061C               	decf	PosicaoCursorLCD@coluna,f,c
   949                           
   950                           ;displayLCD.c: 293: {
   951                           ;displayLCD.c: 296: switch (linha)
   952  000C6E  D01E               	goto	l1460
   953  000C70                     l70:
   954                           
   955                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
   956  000C70  C01C  F01E         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
   957                           
   958                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
   959  000C74  501E               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   960  000C76  ECFE  F005         	call	_EnderecoCursor
   961                           
   962                           ;displayLCD.c: 301: break;
   963  000C7A  0012               	return	
   964  000C7C                     l1444:
   965                           
   966                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
   967  000C7C  501C               	movf	PosicaoCursorLCD@coluna,w,c
   968  000C7E  0F40               	addlw	64
   969  000C80  6E1E               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   970                           
   971                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
   972  000C82  501E               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   973  000C84  ECFE  F005         	call	_EnderecoCursor
   974                           
   975                           ;displayLCD.c: 306: break;
   976  000C88  0012               	return	
   977  000C8A                     l1448:
   978                           
   979                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
   980  000C8A  501C               	movf	PosicaoCursorLCD@coluna,w,c
   981  000C8C  0F14               	addlw	20
   982  000C8E  6E1E               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   983                           
   984                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
   985  000C90  501E               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   986  000C92  ECFE  F005         	call	_EnderecoCursor
   987                           
   988                           ;displayLCD.c: 311: break;
   989  000C96  0012               	return	
   990  000C98                     l1452:
   991                           
   992                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
   993  000C98  501C               	movf	PosicaoCursorLCD@coluna,w,c
   994  000C9A  0F54               	addlw	84
   995  000C9C  6E1E               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   996                           
   997                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
   998  000C9E  501E               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   999  000CA0  ECFE  F005         	call	_EnderecoCursor
  1000                           
  1001                           ;displayLCD.c: 316: break;
  1002  000CA4  0012               	return	
  1003  000CA6                     l1456:
  1004                           
  1005                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
  1006  000CA6  0E00               	movlw	0
  1007  000CA8  6E1E               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1008                           
  1009                           ;displayLCD.c: 321: }
  1010                           
  1011                           ;displayLCD.c: 320: break;
  1012  000CAA  0012               	return	
  1013  000CAC                     l1460:
  1014  000CAC  501D               	movf	PosicaoCursorLCD@linha,w,c
  1015                           
  1016                           ; Switch size 1, requested type "space"
  1017                           ; Number of cases is 4, Range of values is 1 to 4
  1018                           ; switch strategies available:
  1019                           ; Name         Instructions Cycles
  1020                           ; simple_byte           13     7 (average)
  1021                           ;	Chosen strategy is simple_byte
  1022  000CAE  0A01               	xorlw	1	; case 1
  1023  000CB0  B4D8               	btfsc	status,2,c
  1024  000CB2  D7DE               	goto	l70
  1025  000CB4  0A03               	xorlw	3	; case 2
  1026  000CB6  B4D8               	btfsc	status,2,c
  1027  000CB8  D7E1               	goto	l1444
  1028  000CBA  0A01               	xorlw	1	; case 3
  1029  000CBC  B4D8               	btfsc	status,2,c
  1030  000CBE  D7E5               	goto	l1448
  1031  000CC0  0A07               	xorlw	7	; case 4
  1032  000CC2  B4D8               	btfsc	status,2,c
  1033  000CC4  D7E9               	goto	l1452
  1034  000CC6  D7EF               	goto	l1456
  1035  000CC8                     __end_of_PosicaoCursorLCD:
  1036                           	opt stack 0
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           postinc0	equ	0xFEE
  1042                           wreg	equ	0xFE8
  1043                           postdec1	equ	0xFE5
  1044                           fsr1l	equ	0xFE1
  1045                           postinc2	equ	0xFDE
  1046                           status	equ	0xFD8
  1047                           
  1048 ;; *************** function _EnderecoCursor *****************
  1049 ;; Defined at:
  1050 ;;		line 229 in file "displayLCD.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  endereco        1    wreg     unsigned char 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  endereco        1    2[COMRAM] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1064 ;;      Params:         0       0       0       0       0       0       0       0       0
  1065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1067 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1068 ;;Total ram usage:        1 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    1
  1071 ;; This function calls:
  1072 ;;		_Delay
  1073 ;; This function is called by:
  1074 ;;		_PosicaoCursorLCD
  1075 ;;		_CriaCaractereLCD
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text3
  1080  000BFC                     __ptext3:
  1081                           	opt stack 0
  1082  000BFC                     _EnderecoCursor:
  1083                           	opt stack 28
  1084                           
  1085                           ;incstack = 0
  1086                           ;EnderecoCursor@endereco stored from wreg
  1087  000BFC  6E1B               	movwf	EnderecoCursor@endereco,c
  1088                           
  1089                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
  1090  000BFE  9483               	bcf	3971,2,c	;volatile
  1091                           
  1092                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
  1093  000C00  9283               	bcf	3971,1,c	;volatile
  1094                           
  1095                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
  1096  000C02  9083               	bcf	3971,0,c	;volatile
  1097                           
  1098                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
  1099  000C04  8E83               	bsf	3971,7,c	;volatile
  1100                           
  1101                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1102  000C06  A81B               	btfss	EnderecoCursor@endereco,4,c
  1103  000C08  D002               	goto	l51
  1104  000C0A  8883               	bsf	3971,4,c	;volatile
  1105  000C0C  D001               	goto	l1324
  1106  000C0E                     l51:
  1107                           
  1108                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
  1109  000C0E  9883               	bcf	3971,4,c	;volatile
  1110  000C10                     l1324:
  1111                           
  1112                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1113  000C10  AA1B               	btfss	EnderecoCursor@endereco,5,c
  1114  000C12  D002               	goto	l53
  1115  000C14  8A83               	bsf	3971,5,c	;volatile
  1116  000C16  D001               	goto	l1328
  1117  000C18                     l53:
  1118                           
  1119                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
  1120  000C18  9A83               	bcf	3971,5,c	;volatile
  1121  000C1A                     l1328:
  1122                           
  1123                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1124  000C1A  AC1B               	btfss	EnderecoCursor@endereco,6,c
  1125  000C1C  D002               	goto	l55
  1126  000C1E  8C83               	bsf	3971,6,c	;volatile
  1127  000C20  D001               	goto	l56
  1128  000C22                     l55:
  1129                           
  1130                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
  1131  000C22  9C83               	bcf	3971,6,c	;volatile
  1132  000C24                     l56:
  1133                           
  1134                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
  1135  000C24  8083               	bsf	3971,0,c	;volatile
  1136                           
  1137                           ;displayLCD.c: 247: Delay();
  1138  000C26  EC91  F006         	call	_Delay	;wreg free
  1139                           
  1140                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
  1141  000C2A  9083               	bcf	3971,0,c	;volatile
  1142                           
  1143                           ;displayLCD.c: 249: Delay();
  1144  000C2C  EC91  F006         	call	_Delay	;wreg free
  1145                           
  1146                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1147  000C30  A01B               	btfss	EnderecoCursor@endereco,0,c
  1148  000C32  D002               	goto	l57
  1149  000C34  8883               	bsf	3971,4,c	;volatile
  1150  000C36  D001               	goto	l58
  1151  000C38                     l57:
  1152                           
  1153                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
  1154  000C38  9883               	bcf	3971,4,c	;volatile
  1155  000C3A                     l58:
  1156                           
  1157                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1158  000C3A  A21B               	btfss	EnderecoCursor@endereco,1,c
  1159  000C3C  D002               	goto	l59
  1160  000C3E  8A83               	bsf	3971,5,c	;volatile
  1161  000C40  D001               	goto	l60
  1162  000C42                     l59:
  1163                           
  1164                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
  1165  000C42  9A83               	bcf	3971,5,c	;volatile
  1166  000C44                     l60:
  1167                           
  1168                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1169  000C44  A41B               	btfss	EnderecoCursor@endereco,2,c
  1170  000C46  D002               	goto	l61
  1171  000C48  8C83               	bsf	3971,6,c	;volatile
  1172  000C4A  D001               	goto	l62
  1173  000C4C                     l61:
  1174                           
  1175                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
  1176  000C4C  9C83               	bcf	3971,6,c	;volatile
  1177  000C4E                     l62:
  1178                           
  1179                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1180  000C4E  A61B               	btfss	EnderecoCursor@endereco,3,c
  1181  000C50  D002               	goto	l63
  1182  000C52  8E83               	bsf	3971,7,c	;volatile
  1183  000C54  D001               	goto	l64
  1184  000C56                     l63:
  1185                           
  1186                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
  1187  000C56  9E83               	bcf	3971,7,c	;volatile
  1188  000C58                     l64:
  1189                           
  1190                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
  1191  000C58  8083               	bsf	3971,0,c	;volatile
  1192                           
  1193                           ;displayLCD.c: 263: Delay();
  1194  000C5A  EC91  F006         	call	_Delay	;wreg free
  1195                           
  1196                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
  1197  000C5E  9083               	bcf	3971,0,c	;volatile
  1198                           
  1199                           ;displayLCD.c: 265: Delay();
  1200  000C60  EC91  F006         	call	_Delay	;wreg free
  1201  000C64  0012               	return		;funcret
  1202  000C66                     __end_of_EnderecoCursor:
  1203                           	opt stack 0
  1204                           tblptru	equ	0xFF8
  1205                           tblptrh	equ	0xFF7
  1206                           tblptrl	equ	0xFF6
  1207                           tablat	equ	0xFF5
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           postdec1	equ	0xFE5
  1211                           fsr1l	equ	0xFE1
  1212                           postinc2	equ	0xFDE
  1213                           status	equ	0xFD8
  1214                           
  1215 ;; *************** function _EscreveFraseRamLCD *****************
  1216 ;; Defined at:
  1217 ;;		line 438 in file "displayLCD.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  buffer          2    3[COMRAM] PTR unsigned char 
  1220 ;;		 -> main@Texto_5(17), main@Texto_4(17), main@Texto_3(17), main@Texto_2(17), 
  1221 ;;		 -> main@Texto_1(17), main@Texto_0(17), EscreveInteiroLCD@texto(7), 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1233 ;;      Params:         2       0       0       0       0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1236 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1237 ;;Total ram usage:        2 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    2
  1240 ;; This function calls:
  1241 ;;		_EscreveCaractereLCD
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;;		_EscreveInteiroLCD
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text4
  1249  000CFE                     __ptext4:
  1250                           	opt stack 0
  1251  000CFE                     _EscreveFraseRamLCD:
  1252                           	opt stack 28
  1253                           
  1254                           ;displayLCD.c: 440: while(*buffer)
  1255                           
  1256                           ;incstack = 0
  1257  000CFE  D009               	goto	l1470
  1258  000D00                     l1466:
  1259                           
  1260                           ;displayLCD.c: 441: {
  1261                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
  1262  000D00  C01C  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1263  000D04  C01D  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1264  000D08  50DF               	movf	indf2,w,c
  1265  000D0A  ECC5  F005         	call	_EscreveCaractereLCD
  1266                           
  1267                           ;displayLCD.c: 443: buffer++;
  1268  000D0E  4A1C               	infsnz	EscreveFraseRamLCD@buffer,f,c
  1269  000D10  2A1D               	incf	EscreveFraseRamLCD@buffer+1,f,c
  1270  000D12                     l1470:
  1271  000D12  C01C  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1272  000D16  C01D  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1273  000D1A  50DF               	movf	indf2,w,c
  1274  000D1C  B4D8               	btfsc	status,2,c
  1275  000D1E  0012               	return	
  1276  000D20  D7EF               	goto	l1466
  1277  000D22                     __end_of_EscreveFraseRamLCD:
  1278                           	opt stack 0
  1279                           tblptru	equ	0xFF8
  1280                           tblptrh	equ	0xFF7
  1281                           tblptrl	equ	0xFF6
  1282                           tablat	equ	0xFF5
  1283                           postinc0	equ	0xFEE
  1284                           wreg	equ	0xFE8
  1285                           postdec1	equ	0xFE5
  1286                           fsr1l	equ	0xFE1
  1287                           indf2	equ	0xFDF
  1288                           postinc2	equ	0xFDE
  1289                           fsr2h	equ	0xFDA
  1290                           fsr2l	equ	0xFD9
  1291                           status	equ	0xFD8
  1292                           
  1293 ;; *************** function _EscreveCaractereLCD *****************
  1294 ;; Defined at:
  1295 ;;		line 339 in file "displayLCD.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  data            1    wreg     unsigned char 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  data            1    2[COMRAM] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0
  1310 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1312 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1313 ;;Total ram usage:        1 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    1
  1316 ;; This function calls:
  1317 ;;		_Delay
  1318 ;; This function is called by:
  1319 ;;		_EscreveFraseRamLCD
  1320 ;;		_EscreveFloatLCD
  1321 ;;		_EscreveFraseLCD
  1322 ;;		_CriaCaractereLCD
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text5
  1327  000B8A                     __ptext5:
  1328                           	opt stack 0
  1329  000B8A                     _EscreveCaractereLCD:
  1330                           	opt stack 28
  1331                           
  1332                           ;incstack = 0
  1333                           ;EscreveCaractereLCD@data stored from wreg
  1334  000B8A  6E1B               	movwf	EscreveCaractereLCD@data,c
  1335                           
  1336                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
  1337  000B8C  9483               	bcf	3971,2,c	;volatile
  1338                           
  1339                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
  1340  000B8E  8283               	bsf	3971,1,c	;volatile
  1341                           
  1342                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
  1343  000B90  9083               	bcf	3971,0,c	;volatile
  1344                           
  1345                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
  1346  000B92  A81B               	btfss	EscreveCaractereLCD@data,4,c
  1347  000B94  D002               	goto	l80
  1348  000B96  8883               	bsf	3971,4,c	;volatile
  1349  000B98  D001               	goto	l1356
  1350  000B9A                     l80:
  1351                           
  1352                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
  1353  000B9A  9883               	bcf	3971,4,c	;volatile
  1354  000B9C                     l1356:
  1355                           
  1356                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
  1357  000B9C  AA1B               	btfss	EscreveCaractereLCD@data,5,c
  1358  000B9E  D002               	goto	l82
  1359  000BA0  8A83               	bsf	3971,5,c	;volatile
  1360  000BA2  D001               	goto	l1360
  1361  000BA4                     l82:
  1362                           
  1363                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
  1364  000BA4  9A83               	bcf	3971,5,c	;volatile
  1365  000BA6                     l1360:
  1366                           
  1367                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
  1368  000BA6  AC1B               	btfss	EscreveCaractereLCD@data,6,c
  1369  000BA8  D002               	goto	l84
  1370  000BAA  8C83               	bsf	3971,6,c	;volatile
  1371  000BAC  D001               	goto	l1364
  1372  000BAE                     l84:
  1373                           
  1374                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
  1375  000BAE  9C83               	bcf	3971,6,c	;volatile
  1376  000BB0                     l1364:
  1377                           
  1378                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
  1379  000BB0  AE1B               	btfss	EscreveCaractereLCD@data,7,c
  1380  000BB2  D002               	goto	l86
  1381  000BB4  8E83               	bsf	3971,7,c	;volatile
  1382  000BB6  D001               	goto	l87
  1383  000BB8                     l86:
  1384                           
  1385                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
  1386  000BB8  9E83               	bcf	3971,7,c	;volatile
  1387  000BBA                     l87:
  1388                           
  1389                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
  1390  000BBA  8083               	bsf	3971,0,c	;volatile
  1391                           
  1392                           ;displayLCD.c: 358: Delay();
  1393  000BBC  EC91  F006         	call	_Delay	;wreg free
  1394                           
  1395                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  1396  000BC0  9083               	bcf	3971,0,c	;volatile
  1397                           
  1398                           ;displayLCD.c: 360: Delay();
  1399  000BC2  EC91  F006         	call	_Delay	;wreg free
  1400                           
  1401                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  1402  000BC6  A01B               	btfss	EscreveCaractereLCD@data,0,c
  1403  000BC8  D002               	goto	l88
  1404  000BCA  8883               	bsf	3971,4,c	;volatile
  1405  000BCC  D001               	goto	l89
  1406  000BCE                     l88:
  1407                           
  1408                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  1409  000BCE  9883               	bcf	3971,4,c	;volatile
  1410  000BD0                     l89:
  1411                           
  1412                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  1413  000BD0  A21B               	btfss	EscreveCaractereLCD@data,1,c
  1414  000BD2  D002               	goto	l90
  1415  000BD4  8A83               	bsf	3971,5,c	;volatile
  1416  000BD6  D001               	goto	l91
  1417  000BD8                     l90:
  1418                           
  1419                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  1420  000BD8  9A83               	bcf	3971,5,c	;volatile
  1421  000BDA                     l91:
  1422                           
  1423                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  1424  000BDA  A41B               	btfss	EscreveCaractereLCD@data,2,c
  1425  000BDC  D002               	goto	l92
  1426  000BDE  8C83               	bsf	3971,6,c	;volatile
  1427  000BE0  D001               	goto	l93
  1428  000BE2                     l92:
  1429                           
  1430                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  1431  000BE2  9C83               	bcf	3971,6,c	;volatile
  1432  000BE4                     l93:
  1433                           
  1434                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  1435  000BE4  A61B               	btfss	EscreveCaractereLCD@data,3,c
  1436  000BE6  D002               	goto	l94
  1437  000BE8  8E83               	bsf	3971,7,c	;volatile
  1438  000BEA  D001               	goto	l95
  1439  000BEC                     l94:
  1440                           
  1441                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  1442  000BEC  9E83               	bcf	3971,7,c	;volatile
  1443  000BEE                     l95:
  1444                           
  1445                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  1446  000BEE  8083               	bsf	3971,0,c	;volatile
  1447                           
  1448                           ;displayLCD.c: 375: Delay();
  1449  000BF0  EC91  F006         	call	_Delay	;wreg free
  1450                           
  1451                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  1452  000BF4  9083               	bcf	3971,0,c	;volatile
  1453                           
  1454                           ;displayLCD.c: 377: Delay();
  1455  000BF6  EC91  F006         	call	_Delay	;wreg free
  1456  000BFA  0012               	return		;funcret
  1457  000BFC                     __end_of_EscreveCaractereLCD:
  1458                           	opt stack 0
  1459                           tblptru	equ	0xFF8
  1460                           tblptrh	equ	0xFF7
  1461                           tblptrl	equ	0xFF6
  1462                           tablat	equ	0xFF5
  1463                           postinc0	equ	0xFEE
  1464                           wreg	equ	0xFE8
  1465                           postdec1	equ	0xFE5
  1466                           fsr1l	equ	0xFE1
  1467                           indf2	equ	0xFDF
  1468                           postinc2	equ	0xFDE
  1469                           fsr2h	equ	0xFDA
  1470                           fsr2l	equ	0xFD9
  1471                           status	equ	0xFD8
  1472                           
  1473 ;; *************** function _ConfiguraLCD *****************
  1474 ;; Defined at:
  1475 ;;		line 80 in file "displayLCD.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1491 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1492 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1493 ;;Total ram usage:        1 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    2
  1496 ;; This function calls:
  1497 ;;		_Delay
  1498 ;;		_EscreveComandoLCD
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text6
  1505  000A60                     __ptext6:
  1506                           	opt stack 0
  1507  000A60                     _ConfiguraLCD:
  1508                           	opt stack 28
  1509                           
  1510                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  1511                           
  1512                           ;incstack = 0
  1513  000A60  9495               	bcf	3989,2,c	;volatile
  1514                           
  1515                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  1516  000A62  9295               	bcf	3989,1,c	;volatile
  1517                           
  1518                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  1519  000A64  9095               	bcf	3989,0,c	;volatile
  1520                           
  1521                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  1522  000A66  9895               	bcf	3989,4,c	;volatile
  1523                           
  1524                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  1525  000A68  9A95               	bcf	3989,5,c	;volatile
  1526                           
  1527                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  1528  000A6A  9C95               	bcf	3989,6,c	;volatile
  1529                           
  1530                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  1531  000A6C  9E95               	bcf	3989,7,c	;volatile
  1532                           
  1533                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  1534  000A6E  9483               	bcf	3971,2,c	;volatile
  1535                           
  1536                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  1537  000A70  9283               	bcf	3971,1,c	;volatile
  1538                           
  1539                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  1540  000A72  9083               	bcf	3971,0,c	;volatile
  1541                           
  1542                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  1543  000A74  9E83               	bcf	3971,7,c	;volatile
  1544                           
  1545                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  1546  000A76  9C83               	bcf	3971,6,c	;volatile
  1547                           
  1548                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  1549  000A78  8A83               	bsf	3971,5,c	;volatile
  1550                           
  1551                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  1552  000A7A  8883               	bsf	3971,4,c	;volatile
  1553                           
  1554                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  1555  000A7C  0EEA               	movlw	234
  1556  000A7E  6E1C               	movwf	??_ConfiguraLCD& (0+255),c
  1557  000A80  0EC3               	movlw	195
  1558  000A82                     u1027:
  1559  000A82  2EE8               	decfsz	wreg,f,c
  1560  000A84  D7FE               	bra	u1027
  1561  000A86  2E1C               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1562  000A88  D7FC               	bra	u1027
  1563  000A8A  F000               	nop	
  1564                           
  1565                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  1566  000A8C  8083               	bsf	3971,0,c	;volatile
  1567                           
  1568                           ;displayLCD.c: 117: Delay();
  1569  000A8E  EC91  F006         	call	_Delay	;wreg free
  1570                           
  1571                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  1572  000A92  9083               	bcf	3971,0,c	;volatile
  1573                           
  1574                           ;displayLCD.c: 119: Delay();
  1575  000A94  EC91  F006         	call	_Delay	;wreg free
  1576                           
  1577                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  1578  000A98  0E4E               	movlw	78
  1579  000A9A  6E1C               	movwf	??_ConfiguraLCD& (0+255),c
  1580  000A9C  0EEB               	movlw	235
  1581  000A9E                     u1037:
  1582  000A9E  2EE8               	decfsz	wreg,f,c
  1583  000AA0  D7FE               	bra	u1037
  1584  000AA2  2E1C               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1585  000AA4  D7FC               	bra	u1037
  1586  000AA6  F000               	nop	
  1587                           
  1588                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  1589  000AA8  8083               	bsf	3971,0,c	;volatile
  1590                           
  1591                           ;displayLCD.c: 128: Delay();
  1592  000AAA  EC91  F006         	call	_Delay	;wreg free
  1593                           
  1594                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  1595  000AAE  9083               	bcf	3971,0,c	;volatile
  1596                           
  1597                           ;displayLCD.c: 130: Delay();
  1598  000AB0  EC91  F006         	call	_Delay	;wreg free
  1599                           
  1600                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  1601  000AB4  0E4E               	movlw	78
  1602  000AB6  6E1C               	movwf	??_ConfiguraLCD& (0+255),c
  1603  000AB8  0EEB               	movlw	235
  1604  000ABA                     u1047:
  1605  000ABA  2EE8               	decfsz	wreg,f,c
  1606  000ABC  D7FE               	bra	u1047
  1607  000ABE  2E1C               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1608  000AC0  D7FC               	bra	u1047
  1609  000AC2  F000               	nop	
  1610                           
  1611                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  1612  000AC4  8083               	bsf	3971,0,c	;volatile
  1613                           
  1614                           ;displayLCD.c: 139: Delay();
  1615  000AC6  EC91  F006         	call	_Delay	;wreg free
  1616                           
  1617                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  1618  000ACA  9083               	bcf	3971,0,c	;volatile
  1619                           
  1620                           ;displayLCD.c: 141: Delay();
  1621  000ACC  EC91  F006         	call	_Delay	;wreg free
  1622                           
  1623                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  1624  000AD0  9E83               	bcf	3971,7,c	;volatile
  1625                           
  1626                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  1627  000AD2  9C83               	bcf	3971,6,c	;volatile
  1628                           
  1629                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  1630  000AD4  8A83               	bsf	3971,5,c	;volatile
  1631                           
  1632                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  1633  000AD6  9883               	bcf	3971,4,c	;volatile
  1634                           
  1635                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  1636  000AD8  8083               	bsf	3971,0,c	;volatile
  1637                           
  1638                           ;displayLCD.c: 152: Delay();
  1639  000ADA  EC91  F006         	call	_Delay	;wreg free
  1640                           
  1641                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  1642  000ADE  9083               	bcf	3971,0,c	;volatile
  1643                           
  1644                           ;displayLCD.c: 154: Delay();
  1645  000AE0  EC91  F006         	call	_Delay	;wreg free
  1646                           
  1647                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  1648  000AE4  0E28               	movlw	40
  1649  000AE6  EC7F  F005         	call	_EscreveComandoLCD
  1650                           
  1651                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  1652  000AEA  0E06               	movlw	6
  1653  000AEC  EC7F  F005         	call	_EscreveComandoLCD
  1654                           
  1655                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  1656  000AF0  0E0E               	movlw	14
  1657  000AF2  EC7F  F005         	call	_EscreveComandoLCD
  1658                           
  1659                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  1660  000AF6  0E01               	movlw	1
  1661  000AF8  EC7F  F005         	call	_EscreveComandoLCD
  1662  000AFC  0012               	return		;funcret
  1663  000AFE                     __end_of_ConfiguraLCD:
  1664                           	opt stack 0
  1665                           tblptru	equ	0xFF8
  1666                           tblptrh	equ	0xFF7
  1667                           tblptrl	equ	0xFF6
  1668                           tablat	equ	0xFF5
  1669                           postinc0	equ	0xFEE
  1670                           wreg	equ	0xFE8
  1671                           postdec1	equ	0xFE5
  1672                           fsr1l	equ	0xFE1
  1673                           indf2	equ	0xFDF
  1674                           postinc2	equ	0xFDE
  1675                           fsr2h	equ	0xFDA
  1676                           fsr2l	equ	0xFD9
  1677                           status	equ	0xFD8
  1678                           
  1679 ;; *************** function _EscreveComandoLCD *****************
  1680 ;; Defined at:
  1681 ;;		line 172 in file "displayLCD.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  cmd             1    wreg     unsigned char 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  cmd             1    2[COMRAM] unsigned char 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1695 ;;      Params:         0       0       0       0       0       0       0       0       0
  1696 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1698 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1699 ;;Total ram usage:        1 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    1
  1702 ;; This function calls:
  1703 ;;		_Delay
  1704 ;; This function is called by:
  1705 ;;		_ConfiguraLCD
  1706 ;;		_CriaCaractereLCD
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text7
  1711  000AFE                     __ptext7:
  1712                           	opt stack 0
  1713  000AFE                     _EscreveComandoLCD:
  1714                           	opt stack 28
  1715                           
  1716                           ;incstack = 0
  1717                           ;EscreveComandoLCD@cmd stored from wreg
  1718  000AFE  6E1B               	movwf	EscreveComandoLCD@cmd,c
  1719                           
  1720                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  1721  000B00  9483               	bcf	3971,2,c	;volatile
  1722                           
  1723                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  1724  000B02  9283               	bcf	3971,1,c	;volatile
  1725                           
  1726                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  1727  000B04  9083               	bcf	3971,0,c	;volatile
  1728                           
  1729                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  1730  000B06  A81B               	btfss	EscreveComandoLCD@cmd,4,c
  1731  000B08  D002               	goto	l29
  1732  000B0A  8883               	bsf	3971,4,c	;volatile
  1733  000B0C  D001               	goto	l1280
  1734  000B0E                     l29:
  1735                           
  1736                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  1737  000B0E  9883               	bcf	3971,4,c	;volatile
  1738  000B10                     l1280:
  1739                           
  1740                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  1741  000B10  AA1B               	btfss	EscreveComandoLCD@cmd,5,c
  1742  000B12  D002               	goto	l31
  1743  000B14  8A83               	bsf	3971,5,c	;volatile
  1744  000B16  D001               	goto	l1284
  1745  000B18                     l31:
  1746                           
  1747                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  1748  000B18  9A83               	bcf	3971,5,c	;volatile
  1749  000B1A                     l1284:
  1750                           
  1751                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  1752  000B1A  AC1B               	btfss	EscreveComandoLCD@cmd,6,c
  1753  000B1C  D002               	goto	l33
  1754  000B1E  8C83               	bsf	3971,6,c	;volatile
  1755  000B20  D001               	goto	l1288
  1756  000B22                     l33:
  1757                           
  1758                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  1759  000B22  9C83               	bcf	3971,6,c	;volatile
  1760  000B24                     l1288:
  1761                           
  1762                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  1763  000B24  AE1B               	btfss	EscreveComandoLCD@cmd,7,c
  1764  000B26  D002               	goto	l35
  1765  000B28  8E83               	bsf	3971,7,c	;volatile
  1766  000B2A  D001               	goto	l36
  1767  000B2C                     l35:
  1768                           
  1769                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  1770  000B2C  9E83               	bcf	3971,7,c	;volatile
  1771  000B2E                     l36:
  1772                           
  1773                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  1774  000B2E  8083               	bsf	3971,0,c	;volatile
  1775                           
  1776                           ;displayLCD.c: 191: Delay();
  1777  000B30  EC91  F006         	call	_Delay	;wreg free
  1778                           
  1779                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  1780  000B34  9083               	bcf	3971,0,c	;volatile
  1781                           
  1782                           ;displayLCD.c: 193: Delay();
  1783  000B36  EC91  F006         	call	_Delay	;wreg free
  1784                           
  1785                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  1786  000B3A  A01B               	btfss	EscreveComandoLCD@cmd,0,c
  1787  000B3C  D002               	goto	l37
  1788  000B3E  8883               	bsf	3971,4,c	;volatile
  1789  000B40  D001               	goto	l38
  1790  000B42                     l37:
  1791                           
  1792                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  1793  000B42  9883               	bcf	3971,4,c	;volatile
  1794  000B44                     l38:
  1795                           
  1796                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  1797  000B44  A21B               	btfss	EscreveComandoLCD@cmd,1,c
  1798  000B46  D002               	goto	l39
  1799  000B48  8A83               	bsf	3971,5,c	;volatile
  1800  000B4A  D001               	goto	l40
  1801  000B4C                     l39:
  1802                           
  1803                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  1804  000B4C  9A83               	bcf	3971,5,c	;volatile
  1805  000B4E                     l40:
  1806                           
  1807                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  1808  000B4E  A41B               	btfss	EscreveComandoLCD@cmd,2,c
  1809  000B50  D002               	goto	l41
  1810  000B52  8C83               	bsf	3971,6,c	;volatile
  1811  000B54  D001               	goto	l42
  1812  000B56                     l41:
  1813                           
  1814                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  1815  000B56  9C83               	bcf	3971,6,c	;volatile
  1816  000B58                     l42:
  1817                           
  1818                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  1819  000B58  A61B               	btfss	EscreveComandoLCD@cmd,3,c
  1820  000B5A  D002               	goto	l43
  1821  000B5C  8E83               	bsf	3971,7,c	;volatile
  1822  000B5E  D001               	goto	l44
  1823  000B60                     l43:
  1824                           
  1825                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  1826  000B60  9E83               	bcf	3971,7,c	;volatile
  1827  000B62                     l44:
  1828                           
  1829                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  1830  000B62  8083               	bsf	3971,0,c	;volatile
  1831                           
  1832                           ;displayLCD.c: 207: Delay();
  1833  000B64  EC91  F006         	call	_Delay	;wreg free
  1834                           
  1835                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  1836  000B68  9083               	bcf	3971,0,c	;volatile
  1837                           
  1838                           ;displayLCD.c: 209: Delay();
  1839  000B6A  EC91  F006         	call	_Delay	;wreg free
  1840                           
  1841                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  1842  000B6E  041B               	decf	EscreveComandoLCD@cmd,w,c
  1843  000B70  B4D8               	btfsc	status,2,c
  1844  000B72  D008               	goto	l1316
  1845  000B74  0E02               	movlw	2
  1846  000B76  181B               	xorwf	EscreveComandoLCD@cmd,w,c
  1847  000B78  B4D8               	btfsc	status,2,c
  1848  000B7A  D004               	goto	l1316
  1849  000B7C  0E03               	movlw	3
  1850  000B7E  181B               	xorwf	EscreveComandoLCD@cmd,w,c
  1851  000B80  A4D8               	btfss	status,2,c
  1852  000B82  0012               	return	
  1853  000B84                     l1316:
  1854                           
  1855                           ;displayLCD.c: 215: { Delay(); }
  1856  000B84  EC91  F006         	call	_Delay	;wreg free
  1857  000B88  0012               	return	
  1858  000B8A                     __end_of_EscreveComandoLCD:
  1859                           	opt stack 0
  1860                           tblptru	equ	0xFF8
  1861                           tblptrh	equ	0xFF7
  1862                           tblptrl	equ	0xFF6
  1863                           tablat	equ	0xFF5
  1864                           postinc0	equ	0xFEE
  1865                           wreg	equ	0xFE8
  1866                           postdec1	equ	0xFE5
  1867                           fsr1l	equ	0xFE1
  1868                           indf2	equ	0xFDF
  1869                           postinc2	equ	0xFDE
  1870                           fsr2h	equ	0xFDA
  1871                           fsr2l	equ	0xFD9
  1872                           status	equ	0xFD8
  1873                           
  1874 ;; *************** function _Delay *****************
  1875 ;; Defined at:
  1876 ;;		line 54 in file "displayLCD.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  Cnt2            1    1[COMRAM] unsigned char 
  1881 ;;  Cnt1            1    0[COMRAM] unsigned char 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1891 ;;      Params:         0       0       0       0       0       0       0       0       0
  1892 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1894 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1895 ;;Total ram usage:        2 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_ConfiguraLCD
  1901 ;;		_EscreveComandoLCD
  1902 ;;		_EnderecoCursor
  1903 ;;		_EscreveCaractereLCD
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text8
  1908  000D22                     __ptext8:
  1909                           	opt stack 0
  1910  000D22                     _Delay:
  1911                           	opt stack 28
  1912                           
  1913                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  1914                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  1915                           
  1916                           ;incstack = 0
  1917  000D22  0E00               	movlw	0
  1918  000D24  6E19               	movwf	Delay@Cnt1,c
  1919  000D26                     l1256:
  1920  000D26  0E1D               	movlw	29
  1921  000D28  6419               	cpfsgt	Delay@Cnt1,c
  1922  000D2A  D001               	goto	l19
  1923  000D2C  0012               	return	
  1924  000D2E                     l19:
  1925                           
  1926                           ;displayLCD.c: 59: {
  1927                           ;displayLCD.c: 60: __nop();
  1928  000D2E  F000               	nop	
  1929                           
  1930                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  1931  000D30  0E00               	movlw	0
  1932  000D32  6E1A               	movwf	Delay@Cnt2,c
  1933  000D34                     l1262:
  1934  000D34  0E1D               	movlw	29
  1935  000D36  641A               	cpfsgt	Delay@Cnt2,c
  1936  000D38  D001               	goto	l21
  1937  000D3A  D003               	goto	l1270
  1938  000D3C                     l21:
  1939                           
  1940                           ;displayLCD.c: 62: {
  1941                           ;displayLCD.c: 63: __nop();
  1942  000D3C  F000               	nop	
  1943  000D3E  2A1A               	incf	Delay@Cnt2,f,c
  1944  000D40  D7F9               	goto	l1262
  1945  000D42                     l1270:
  1946  000D42  2A19               	incf	Delay@Cnt1,f,c
  1947  000D44  D7F0               	goto	l1256
  1948  000D46                     __end_of_Delay:
  1949                           	opt stack 0
  1950                           tblptru	equ	0xFF8
  1951                           tblptrh	equ	0xFF7
  1952                           tblptrl	equ	0xFF6
  1953                           tablat	equ	0xFF5
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           postdec1	equ	0xFE5
  1957                           fsr1l	equ	0xFE1
  1958                           indf2	equ	0xFDF
  1959                           postinc2	equ	0xFDE
  1960                           fsr2h	equ	0xFDA
  1961                           fsr2l	equ	0xFD9
  1962                           status	equ	0xFD8
  1963                           tblptru	equ	0xFF8
  1964                           tblptrh	equ	0xFF7
  1965                           tblptrl	equ	0xFF6
  1966                           tablat	equ	0xFF5
  1967                           postinc0	equ	0xFEE
  1968                           wreg	equ	0xFE8
  1969                           postdec1	equ	0xFE5
  1970                           fsr1l	equ	0xFE1
  1971                           indf2	equ	0xFDF
  1972                           postinc2	equ	0xFDE
  1973                           fsr2h	equ	0xFDA
  1974                           fsr2l	equ	0xFD9
  1975                           status	equ	0xFD8
  1976                           
  1977                           	psect	rparam
  1978  0000                     tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           postinc0	equ	0xFEE
  1983                           wreg	equ	0xFE8
  1984                           postdec1	equ	0xFE5
  1985                           fsr1l	equ	0xFE1
  1986                           indf2	equ	0xFDF
  1987                           postinc2	equ	0xFDE
  1988                           fsr2h	equ	0xFDA
  1989                           fsr2l	equ	0xFD9
  1990                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    142
    Data        7
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      30
    BANK0           160    105     105
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@Texto_5(BANK0[17]), main@Texto_4(BANK0[17]), main@Texto_3(BANK0[17]), main@Texto_2(BANK0[17]), 
		 -> main@Texto_1(BANK0[17]), main@Texto_0(BANK0[17]), EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_PosicaoCursorLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               105   105      0    2674
                                              0 BANK0    105   105      0
                       _ConfiguraLCD
                 _EscreveFraseRamLCD
                   _PosicaoCursorLCD
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2     278
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _PosicaoCursorLCD                                     3     2      1     836
                                              3 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (2) _EnderecoCursor                                       1     1      0     246
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _EscreveFraseRamLCD                                   2     0      2     825
                                              3 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveCaractereLCD                                  1     1      0     268
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     426
                                              3 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveComandoLCD                                    1     1      0     334
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     2      0      92
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      69       5       65.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6      1E       1       31.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      87      20        0.0%
DATA                 0      0      87       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Sep 25 13:32:44 2020

                          l21 0D3C                            l31 0B18                            l40 0B4E  
                          l41 0B56                            l33 0B22                            l42 0B58  
                          l19 0D2E                            l43 0B60                            l35 0B2C  
                          l51 0C0E                            l44 0B62                            l36 0B2E  
                          l60 0C44                            l37 0B42                            l29 0B0E  
                          l61 0C4C                            l53 0C18                            l38 0B44  
                          l62 0C4E                            l70 0C70                            l39 0B4C  
                          l63 0C56                            l55 0C22                            l80 0B9A  
                          l64 0C58                            l56 0C24                            l57 0C38  
                          l90 0BD8                            l82 0BA4                            l58 0C3A  
                          l91 0BDA                            l59 0C42                            l92 0BE2  
                          l84 0BAE                            l93 0BE4                            l94 0BEC  
                          l86 0BB8                            l95 0BEE                            l87 0BBA  
                          l88 0BCE                            l89 0BD0                           l171 09D2  
                         l174 0A1A                           l177 0A46                           u900 08F0  
                         u910 0908                           u920 0920                           u930 0938  
                         u880 08C0                           u890 08D8                   main@Texto_0 0060  
                 main@Texto_1 00B5                   main@Texto_2 0071                   main@Texto_3 0082  
                 main@Texto_4 0093                   main@Texto_5 00A4                           wreg 000FE8  
                        l1316 0B84                          l1324 0C10                          l1270 0D42  
                        l1262 0D34                          l1256 0D26                          l1280 0B10  
                        l1360 0BA6                          l1328 0C1A                          l1284 0B1A  
                        l1364 0BB0                          l1356 0B9C                          l1452 0C98  
                        l1444 0C7C                          l1460 0CAC                          l1612 0A00  
                        l1470 0D12                          l1288 0B24                          l1456 0CA6  
                        l1448 0C8A                          l1608 09F6                          l1466 0D00  
                        l1474 0D48                          l1476 0D58                          l1592 09B8  
                        l1578 098A                          l1588 09AE                          STR_1 088F  
                        u1017 0D4E                          u1027 0A82                          u1037 0A9E  
                        u1047 0ABA                          _main 089C                          fsr2h 000FDA  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        start 0000                  ___param_bank 000000    __end_of_EscreveFraseRamLCD 0D22  
                       ?_main 0019                         _PORTB 000F81                         _TRISB 000F93  
                       _TRISE 000F96                         _Delay 0D22               __end_of_dpowers 0829  
        EscreveComandoLCD@cmd 001B                         tablat 000FF5                         status 000FD8  
             __initialization 0CC8                  __end_of_main 0A60                        ??_main 001F  
        __end_of_ConfiguraLCD 0AFE                 __activetblptr 000002             _EscreveComandoLCD 0AFE  
                      ?_Delay 0019            ?_EscreveComandoLCD 0019                        _ADCON1 000FC1  
         ??_EscreveComandoLCD 001B              __end_of_delay_ms 0D68             ?_PosicaoCursorLCD 001C  
__size_of_EscreveCaractereLCD 0072            ??_PosicaoCursorLCD 001D                        clear_0 0CEE  
   __end_of_EscreveComandoLCD 0B8A                  __pdataCOMRAM 0012                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
     __size_of_EnderecoCursor 006A                    __accesstop 0060       __end_of__initialization 0CF4  
               ___rparam_used 000001                 __end_of_Delay 0D46                __pcstackCOMRAM 0019  
                     ??_Delay 0019         __size_of_ConfiguraLCD 009E    __size_of_EscreveComandoLCD 008C  
          _EscreveFraseRamLCD 0CFE                     ?_delay_ms 0019           ?_EscreveFraseRamLCD 001C  
                _ConfiguraLCD 0A60                       __Hparam 0000                       __Lparam 0000  
        ??_EscreveFraseRamLCD 001E                  __psmallconst 0800                       __pcinit 0CC8  
                     __ramtop 0800                       __ptext0 089C                       __ptext1 0D46  
                     __ptext2 0C66                       __ptext3 0BFC                       __ptext4 0CFE  
                     __ptext5 0B8A                       __ptext6 0A60                       __ptext7 0AFE  
                     __ptext8 0D22                       _dpowers 0801                    ??_delay_ms 001B  
              _EnderecoCursor 0BFC                     Delay@Cnt1 0019                     Delay@Cnt2 001A  
         _EscreveCaractereLCD 0B8A          end_of_initialization 0CF4                       ftoa@buf 0001  
               __Lmediumconst 0000             __end_ofmain@F4001 086D             __end_ofmain@F4003 085C  
           __end_ofmain@F4005 084B             __end_ofmain@F4007 083A             __end_ofmain@F3997 088F  
           __end_ofmain@F3999 087E                       postdec1 000FE5                       postinc0 000FEE  
                     postinc2 000FDE          ?_EscreveCaractereLCD 0019   PosicaoCursorLCD@EnderecoLCD 001E  
                   _PORTDbits 000F83                     _PORTEbits 000F84        __end_of_EnderecoCursor 0C66  
                   _TRISDbits 000F95     __size_of_PosicaoCursorLCD 0062                    main@atraso 00C6  
       ??_EscreveCaractereLCD 001B                 __pidataCOMRAM 0D68               ?_EnderecoCursor 0019  
         start_initialization 0CC8      EscreveFraseRamLCD@buffer 001C                   __pbssCOMRAM 0001  
               __pcstackBANK0 0060             __size_of_delay_ms 0022        EscreveInteiroLCD@F4004 0012  
                 __smallconst 0800                __size_of_Delay 0024              _PosicaoCursorLCD 0C66  
      EnderecoCursor@endereco 001B       EscreveCaractereLCD@data 001B                     main@F4001 085C  
                   main@F4003 084B                     main@F4005 083A                     main@F4007 0829  
                   main@F3997 087E                     main@F3999 086D   __size_of_EscreveFraseRamLCD 0024  
                   copy_data0 0CDC         delay_ms@tempodeatraso 0019                      __Hrparam 0000  
                    __Lrparam 0000              ??_EnderecoCursor 001B                      _delay_ms 0D46  
               __size_of_main 01C4   __end_of_EscreveCaractereLCD 0BFC                      main@cont 00C8  
               ?_ConfiguraLCD 0019      __end_of_PosicaoCursorLCD 0CC8        PosicaoCursorLCD@coluna 001C  
       PosicaoCursorLCD@linha 001D                ??_ConfiguraLCD 001C  
