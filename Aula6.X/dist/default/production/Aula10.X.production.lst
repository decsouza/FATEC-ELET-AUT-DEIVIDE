

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Oct 03 11:43:24 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28  0000                     
    29                           ; Version 1.41
    30                           ; Generated 25/01/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  000ED2                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for EscreveInteiroLCD@F4004
    69  000ED2  30                 	db	48
    70  000ED3  30                 	db	48
    71  000ED4  30                 	db	48
    72  000ED5  30                 	db	48
    73  000ED6  30                 	db	48
    74  000ED7  30                 	db	48
    75  000ED8  00                 	db	0
    76                           
    77                           	psect	smallconst
    78  000800                     __psmallconst:
    79                           	opt stack 0
    80  000800  00                 	db	0
    81  000801  0001               	dw	1
    82  000803  0000               	dw	0
    83  000805  000A               	dw	10
    84  000807  0000               	dw	0
    85  000809  0064               	dw	100
    86  00080B  0000               	dw	0
    87  00080D  03E8               	dw	1000
    88  00080F  0000               	dw	0
    89  000811  2710               	dw	10000
    90  000813  0000               	dw	0
    91  000815  86A0               	dw	34464
    92  000817  0001               	dw	1
    93  000819  4240               	dw	16960
    94  00081B  000F               	dw	15
    95  00081D  9680               	dw	38528
    96  00081F  0098               	dw	152
    97  000821  E100               	dw	57600
    98  000823  05F5               	dw	1525
    99  000825  CA00               	dw	51712
   100  000827  3B9A               	dw	15258
   101  000829                     __end_of_dpowers:
   102                           	opt stack 0
   103  000829                     main@F4005:
   104                           	opt stack 0
   105  000829  41                 	db	65
   106  00082A  4E                 	db	78
   107  00082B  30                 	db	48
   108  00082C  20                 	db	32
   109  00082D  3D                 	db	61
   110  00082E  20                 	db	32
   111  00082F  20                 	db	32
   112  000830  20                 	db	32
   113  000831  20                 	db	32
   114  000832  20                 	db	32
   115  000833  20                 	db	32
   116  000834  20                 	db	32
   117  000835  20                 	db	32
   118  000836  20                 	db	32
   119  000837  20                 	db	32
   120  000838  20                 	db	32
   121  000839  00                 	db	0
   122  00083A                     __end_ofmain@F4005:
   123                           	opt stack 0
   124  00083A                     main@F4003:
   125                           	opt stack 0
   126  00083A  20                 	db	32
   127  00083B  20                 	db	32
   128  00083C  20                 	db	32
   129  00083D  20                 	db	32
   130  00083E  20                 	db	32
   131  00083F  20                 	db	32
   132  000840  20                 	db	32
   133  000841  20                 	db	32
   134  000842  20                 	db	32
   135  000843  20                 	db	32
   136  000844  20                 	db	32
   137  000845  20                 	db	32
   138  000846  20                 	db	32
   139  000847  20                 	db	32
   140  000848  20                 	db	32
   141  000849  20                 	db	32
   142  00084A  00                 	db	0
   143  00084B                     __end_ofmain@F4003:
   144                           	opt stack 0
   145  00084B                     main@F4001:
   146                           	opt stack 0
   147  00084B  41                 	db	65
   148  00084C  44                 	db	68
   149  00084D  52                 	db	82
   150  00084E  45                 	db	69
   151  00084F  53                 	db	83
   152  000850  4C                 	db	76
   153  000851  20                 	db	32
   154  000852  3D                 	db	61
   155  000853  20                 	db	32
   156  000854  20                 	db	32
   157  000855  20                 	db	32
   158  000856  20                 	db	32
   159  000857  20                 	db	32
   160  000858  20                 	db	32
   161  000859  20                 	db	32
   162  00085A  20                 	db	32
   163  00085B  00                 	db	0
   164  00085C                     __end_ofmain@F4001:
   165                           	opt stack 0
   166  00085C                     main@F3999:
   167                           	opt stack 0
   168  00085C  41                 	db	65
   169  00085D  44                 	db	68
   170  00085E  52                 	db	82
   171  00085F  45                 	db	69
   172  000860  53                 	db	83
   173  000861  48                 	db	72
   174  000862  20                 	db	32
   175  000863  3D                 	db	61
   176  000864  20                 	db	32
   177  000865  20                 	db	32
   178  000866  20                 	db	32
   179  000867  20                 	db	32
   180  000868  20                 	db	32
   181  000869  20                 	db	32
   182  00086A  20                 	db	32
   183  00086B  20                 	db	32
   184  00086C  00                 	db	0
   185  00086D                     __end_ofmain@F3999:
   186                           	opt stack 0
   187  00086D                     main@F3997:
   188                           	opt stack 0
   189  00086D  45                 	db	69
   190  00086E  4E                 	db	78
   191  00086F  54                 	db	84
   192  000870  2E                 	db	46
   193  000871  20                 	db	32
   194  000872  41                 	db	65
   195  000873  4E                 	db	78
   196  000874  41                 	db	65
   197  000875  4C                 	db	76
   198  000876  4F                 	db	79
   199  000877  47                 	db	71
   200  000878  49                 	db	73
   201  000879  43                 	db	67
   202  00087A  41                 	db	65
   203  00087B  20                 	db	32
   204  00087C  20                 	db	32
   205  00087D  00                 	db	0
   206  00087E                     __end_ofmain@F3997:
   207                           	opt stack 0
   208  00087E                     main@F3995:
   209                           	opt stack 0
   210  00087E  46                 	db	70
   211  00087F  41                 	db	65
   212  000880  54                 	db	84
   213  000881  45                 	db	69
   214  000882  43                 	db	67
   215  000883  20                 	db	32
   216  000884  53                 	db	83
   217  000885  54                 	db	84
   218  000886  4F                 	db	79
   219  000887  2E                 	db	46
   220  000888  20                 	db	32
   221  000889  41                 	db	65
   222  00088A  4E                 	db	78
   223  00088B  44                 	db	68
   224  00088C  52                 	db	82
   225  00088D  45                 	db	69
   226  00088E  00                 	db	0
   227  00088F                     __end_ofmain@F3995:
   228                           	opt stack 0
   229  0000                     _ADRESL	set	4035
   230  0000                     _ADRESH	set	4036
   231  0000                     _ADCON0bits	set	4034
   232  0000                     _ADCON2	set	4032
   233  0000                     _ADCON0	set	4034
   234  0000                     _ADCON1	set	4033
   235  0000                     _PORTDbits	set	3971
   236  0000                     _TRISDbits	set	3989
   237  00088F  25                 	db	37
   238  000890  6C                 	db	108	;'l'
   239  000891  75                 	db	117	;'u'
   240  000892  2E                 	db	46
   241  000893  25                 	db	37
   242  000894  36                 	db	54	;'6'
   243  000895  2E                 	db	46
   244  000896  36                 	db	54	;'6'
   245  000897  6C                 	db	108	;'l'
   246  000898  75                 	db	117	;'u'
   247  000899  00                 	db	0
   248  00089A  00                 	db	0	; dummy byte at the end
   249  0000                     
   250                           ; #config settings
   251                           
   252                           	psect	cinit
   253  000E32                     __pcinit:
   254                           	opt stack 0
   255  000E32                     start_initialization:
   256                           	opt stack 0
   257  000E32                     __initialization:
   258                           	opt stack 0
   259                           
   260                           ; Initialize objects allocated to COMRAM (7 bytes)
   261                           ; load TBLPTR registers with __pidataCOMRAM
   262  000E32  0ED2               	movlw	low __pidataCOMRAM
   263  000E34  6EF6               	movwf	tblptrl,c
   264  000E36  0E0E               	movlw	high __pidataCOMRAM
   265  000E38  6EF7               	movwf	tblptrh,c
   266  000E3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   267  000E3C  6EF8               	movwf	tblptru,c
   268  000E3E  EE00  F035         	lfsr	0,__pdataCOMRAM
   269  000E42  EE10 F007          	lfsr	1,7
   270  000E46                     copy_data0:
   271  000E46  0009               	tblrd		*+
   272  000E48  CFF5 FFEE          	movff	tablat,postinc0
   273  000E4C  50E5               	movf	postdec1,w,c
   274  000E4E  50E1               	movf	fsr1l,w,c
   275  000E50  E1FA               	bnz	copy_data0
   276                           
   277                           ; Clear objects allocated to COMRAM (17 bytes)
   278  000E52  EE00  F024         	lfsr	0,__pbssCOMRAM
   279  000E56  0E11               	movlw	17
   280  000E58                     clear_0:
   281  000E58  6AEE               	clrf	postinc0,c
   282  000E5A  06E8               	decf	wreg,f,c
   283  000E5C  E1FD               	bnz	clear_0
   284  000E5E                     end_of_initialization:
   285                           	opt stack 0
   286  000E5E                     __end_of__initialization:
   287                           	opt stack 0
   288  000E5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   289  000E60  6EF8               	movwf	tblptru,c
   290  000E62  0100               	movlb	0
   291  000E64  EF4E  F004         	goto	_main	;jump to C main() function
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           postdec1	equ	0xFE5
   299                           fsr1l	equ	0xFE1
   300                           
   301                           	psect	bssCOMRAM
   302  000024                     __pbssCOMRAM:
   303                           	opt stack 0
   304  000024                     ftoa@buf:
   305                           	opt stack 0
   306  000024                     	ds	17
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	dataCOMRAM
   317  000035                     __pdataCOMRAM:
   318                           	opt stack 0
   319  000035                     EscreveInteiroLCD@F4004:
   320                           	opt stack 0
   321  000035                     	ds	7
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	cstackBANK0
   332  000060                     __pcstackBANK0:
   333                           	opt stack 0
   334  000060                     main@Texto_2:
   335                           	opt stack 0
   336                           
   337                           ; 17 bytes @ 0x0
   338  000060                     	ds	17
   339  000071                     main@Texto_3:
   340                           	opt stack 0
   341                           
   342                           ; 17 bytes @ 0x11
   343  000071                     	ds	17
   344  000082                     main@Texto_0:
   345                           	opt stack 0
   346                           
   347                           ; 17 bytes @ 0x22
   348  000082                     	ds	17
   349  000093                     main@Texto_4:
   350                           	opt stack 0
   351                           
   352                           ; 17 bytes @ 0x33
   353  000093                     	ds	17
   354  0000A4                     main@Texto_1:
   355                           	opt stack 0
   356                           
   357                           ; 17 bytes @ 0x44
   358  0000A4                     	ds	17
   359  0000B5                     main@Texto_5:
   360                           	opt stack 0
   361                           
   362                           ; 17 bytes @ 0x55
   363  0000B5                     	ds	17
   364  0000C6                     main@valorAN0:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x66
   368  0000C6                     	ds	2
   369                           tblptru	equ	0xFF8
   370                           tblptrh	equ	0xFF7
   371                           tblptrl	equ	0xFF6
   372                           tablat	equ	0xFF5
   373                           postinc0	equ	0xFEE
   374                           wreg	equ	0xFE8
   375                           postdec1	equ	0xFE5
   376                           fsr1l	equ	0xFE1
   377                           
   378                           	psect	cstackCOMRAM
   379  000001                     __pcstackCOMRAM:
   380                           	opt stack 0
   381  000001                     ?___lwdiv:
   382                           	opt stack 0
   383  000001                     ?___lwmod:
   384                           	opt stack 0
   385  000001                     Delay@Cnt1:
   386                           	opt stack 0
   387  000001                     delay_ms@tempodeatraso:
   388                           	opt stack 0
   389  000001                     ___lwdiv@dividend:
   390                           	opt stack 0
   391  000001                     ___lwmod@dividend:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x0
   395  000001                     	ds	1
   396  000002                     Delay@Cnt2:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x1
   400  000002                     	ds	1
   401  000003                     ??_delay_ms:
   402  000003                     EscreveComandoLCD@cmd:
   403                           	opt stack 0
   404  000003                     EnderecoCursor@endereco:
   405                           	opt stack 0
   406  000003                     EscreveCaractereLCD@data:
   407                           	opt stack 0
   408  000003                     ___lwdiv@divisor:
   409                           	opt stack 0
   410  000003                     ___lwmod@divisor:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x2
   414  000003                     	ds	1
   415  000004                     ??_ConfiguraLCD:
   416  000004                     PosicaoCursorLCD@coluna:
   417                           	opt stack 0
   418  000004                     EscreveFraseRamLCD@buffer:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x3
   422  000004                     	ds	1
   423  000005                     PosicaoCursorLCD@linha:
   424                           	opt stack 0
   425  000005                     ___lwmod@counter:
   426                           	opt stack 0
   427  000005                     ___lwdiv@quotient:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x4
   431  000005                     	ds	1
   432  000006                     PosicaoCursorLCD@EnderecoLCD:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x5
   436  000006                     	ds	1
   437  000007                     ___lwdiv@counter:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x6
   441  000007                     	ds	1
   442  000008                     utoa@buf:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x7
   446  000008                     	ds	2
   447  00000A                     utoa@val:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x9
   451  00000A                     	ds	2
   452  00000C                     utoa@base:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0xB
   456  00000C                     	ds	2
   457  00000E                     utoa@v:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0xD
   461  00000E                     	ds	2
   462  000010                     utoa@c:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0xF
   466  000010                     	ds	1
   467  000011                     itoa@buf:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x10
   471  000011                     	ds	2
   472  000013                     itoa@val:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x12
   476  000013                     	ds	2
   477  000015                     itoa@base:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x14
   481  000015                     	ds	2
   482  000017                     itoa@cp:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x16
   486  000017                     	ds	2
   487  000019                     EscreveInteiroLCD@valor:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x18
   491  000019                     	ds	2
   492  00001B                     EscreveInteiroLCD@texto:
   493                           	opt stack 0
   494                           
   495                           ; 7 bytes @ 0x1A
   496  00001B                     	ds	7
   497  000022                     ??_main:
   498                           
   499                           ; 1 bytes @ 0x21
   500  000022                     	ds	2
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           postdec1	equ	0xFE5
   508                           fsr1l	equ	0xFE1
   509                           
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 48 in file "Entrada_Analogica.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  Texto_5        17   85[BANK0 ] const unsigned char [17]
   520 ;;  Texto_1        17   68[BANK0 ] const unsigned char [17]
   521 ;;  Texto_4        17   51[BANK0 ] const unsigned char [17]
   522 ;;  Texto_0        17   34[BANK0 ] const unsigned char [17]
   523 ;;  Texto_3        17   17[BANK0 ] const unsigned char [17]
   524 ;;  Texto_2        17    0[BANK0 ] const unsigned char [17]
   525 ;;  valorAN0        2  102[BANK0 ] unsigned int 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   535 ;;      Params:         0       0       0       0       0       0       0       0       0
   536 ;;      Locals:         0     104       0       0       0       0       0       0       0
   537 ;;      Temps:          2       0       0       0       0       0       0       0       0
   538 ;;      Totals:         2     104       0       0       0       0       0       0       0
   539 ;;Total ram usage:      106 bytes
   540 ;; Hardware stack levels required when called:    4
   541 ;; This function calls:
   542 ;;		_ConfiguraLCD
   543 ;;		_EscreveComandoLCD
   544 ;;		_EscreveFraseRamLCD
   545 ;;		_EscreveInteiroLCD
   546 ;;		_PosicaoCursorLCD
   547 ;;		_delay_ms
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text0
   554  00089C                     __ptext0:
   555                           	opt stack 0
   556  00089C                     _main:
   557                           	opt stack 27
   558                           
   559                           ;Entrada_Analogica.c: 50: const unsigned char Texto_0[]="FATEC STO. ANDRE";
   560                           
   561                           ;incstack = 0
   562  00089C  0E7E               	movlw	low main@F3995
   563  00089E  6EF6               	movwf	tblptrl,c
   564  0008A0                     	if	1	;There is more than 1 active tblptr byte
   565  0008A0  0E08               	movlw	high main@F3995
   566  0008A2  6EF7               	movwf	tblptrh,c
   567  0008A4                     	endif
   568  0008A4                     	if	0	;There are less than 3 active tblptr bytes
   569  0008A4                     	endif
   570  0008A4  EE20  F082         	lfsr	2,main@Texto_0
   571  0008A8  0E10               	movlw	16
   572  0008AA                     u1020:
   573  0008AA  0009               	tblrd		*+
   574  0008AC  CFF5 FFDE          	movff	tablat,postinc2
   575  0008B0  06E8               	decf	wreg,f,c
   576  0008B2  E2FB               	bc	u1020
   577                           
   578                           ;Entrada_Analogica.c: 51: const unsigned char Texto_1[]="ENT. ANALOGICA  ";
   579  0008B4  0E6D               	movlw	low main@F3997
   580  0008B6  6EF6               	movwf	tblptrl,c
   581  0008B8                     	if	1	;There is more than 1 active tblptr byte
   582  0008B8  0E08               	movlw	high main@F3997
   583  0008BA  6EF7               	movwf	tblptrh,c
   584  0008BC                     	endif
   585  0008BC                     	if	0	;There are less than 3 active tblptr bytes
   586  0008BC                     	endif
   587  0008BC  EE20  F0A4         	lfsr	2,main@Texto_1
   588  0008C0  0E10               	movlw	16
   589  0008C2                     u1030:
   590  0008C2  0009               	tblrd		*+
   591  0008C4  CFF5 FFDE          	movff	tablat,postinc2
   592  0008C8  06E8               	decf	wreg,f,c
   593  0008CA  E2FB               	bc	u1030
   594                           
   595                           ;Entrada_Analogica.c: 52: const unsigned char Texto_2[]="ADRESH =        ";
   596  0008CC  0E5C               	movlw	low main@F3999
   597  0008CE  6EF6               	movwf	tblptrl,c
   598  0008D0                     	if	1	;There is more than 1 active tblptr byte
   599  0008D0  0E08               	movlw	high main@F3999
   600  0008D2  6EF7               	movwf	tblptrh,c
   601  0008D4                     	endif
   602  0008D4                     	if	0	;There are less than 3 active tblptr bytes
   603  0008D4                     	endif
   604  0008D4  EE20  F060         	lfsr	2,main@Texto_2
   605  0008D8  0E10               	movlw	16
   606  0008DA                     u1040:
   607  0008DA  0009               	tblrd		*+
   608  0008DC  CFF5 FFDE          	movff	tablat,postinc2
   609  0008E0  06E8               	decf	wreg,f,c
   610  0008E2  E2FB               	bc	u1040
   611                           
   612                           ;Entrada_Analogica.c: 53: const unsigned char Texto_3[]="ADRESL =        ";
   613  0008E4  0E4B               	movlw	low main@F4001
   614  0008E6  6EF6               	movwf	tblptrl,c
   615  0008E8                     	if	1	;There is more than 1 active tblptr byte
   616  0008E8  0E08               	movlw	high main@F4001
   617  0008EA  6EF7               	movwf	tblptrh,c
   618  0008EC                     	endif
   619  0008EC                     	if	0	;There are less than 3 active tblptr bytes
   620  0008EC                     	endif
   621  0008EC  EE20  F071         	lfsr	2,main@Texto_3
   622  0008F0  0E10               	movlw	16
   623  0008F2                     u1050:
   624  0008F2  0009               	tblrd		*+
   625  0008F4  CFF5 FFDE          	movff	tablat,postinc2
   626  0008F8  06E8               	decf	wreg,f,c
   627  0008FA  E2FB               	bc	u1050
   628                           
   629                           ;Entrada_Analogica.c: 54: const unsigned char Texto_4[]="                ";
   630  0008FC  0E3A               	movlw	low main@F4003
   631  0008FE  6EF6               	movwf	tblptrl,c
   632  000900                     	if	1	;There is more than 1 active tblptr byte
   633  000900  0E08               	movlw	high main@F4003
   634  000902  6EF7               	movwf	tblptrh,c
   635  000904                     	endif
   636  000904                     	if	0	;There are less than 3 active tblptr bytes
   637  000904                     	endif
   638  000904  EE20  F093         	lfsr	2,main@Texto_4
   639  000908  0E10               	movlw	16
   640  00090A                     u1060:
   641  00090A  0009               	tblrd		*+
   642  00090C  CFF5 FFDE          	movff	tablat,postinc2
   643  000910  06E8               	decf	wreg,f,c
   644  000912  E2FB               	bc	u1060
   645                           
   646                           ;Entrada_Analogica.c: 55: const unsigned char Texto_5[]="AN0 =           ";
   647  000914  0E29               	movlw	low main@F4005
   648  000916  6EF6               	movwf	tblptrl,c
   649  000918                     	if	1	;There is more than 1 active tblptr byte
   650  000918  0E08               	movlw	high main@F4005
   651  00091A  6EF7               	movwf	tblptrh,c
   652  00091C                     	endif
   653  00091C                     	if	0	;There are less than 3 active tblptr bytes
   654  00091C                     	endif
   655  00091C  EE20  F0B5         	lfsr	2,main@Texto_5
   656  000920  0E10               	movlw	16
   657  000922                     u1070:
   658  000922  0009               	tblrd		*+
   659  000924  CFF5 FFDE          	movff	tablat,postinc2
   660  000928  06E8               	decf	wreg,f,c
   661  00092A  E2FB               	bc	u1070
   662                           
   663                           ;Entrada_Analogica.c: 57: unsigned int valorAN0 = 0;
   664  00092C  0E00               	movlw	0
   665  00092E  0100               	movlb	0	; () banked
   666  000930  6FC7               	movwf	(main@valorAN0+1)& (0+255),b
   667  000932  0E00               	movlw	0
   668  000934  6FC6               	movwf	main@valorAN0& (0+255),b
   669                           
   670                           ; BSR set to: 0
   671                           ;Entrada_Analogica.c: 59: ADCON1 = 0b00001110;
   672  000936  0E0E               	movlw	14
   673  000938  6EC1               	movwf	4033,c	;volatile
   674                           
   675                           ; BSR set to: 0
   676                           ;Entrada_Analogica.c: 60: ADCON0 = 0b00000001;
   677  00093A  0E01               	movlw	1
   678  00093C  6EC2               	movwf	4034,c	;volatile
   679                           
   680                           ; BSR set to: 0
   681                           ;Entrada_Analogica.c: 61: ADCON2 = 0b10001110;
   682  00093E  0E8E               	movlw	142
   683  000940  6EC0               	movwf	4032,c	;volatile
   684                           
   685                           ; BSR set to: 0
   686                           ;Entrada_Analogica.c: 66: ConfiguraLCD();
   687  000942  EC5C  F005         	call	_ConfiguraLCD	;wreg free
   688                           
   689                           ;Entrada_Analogica.c: 67: EscreveComandoLCD(0b00001100);
   690  000946  0E0C               	movlw	12
   691  000948  ECAB  F005         	call	_EscreveComandoLCD
   692                           
   693                           ;Entrada_Analogica.c: 68: EscreveFraseRamLCD(Texto_0);
   694  00094C  0E82               	movlw	low main@Texto_0
   695  00094E  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   696  000950  0E00               	movlw	high main@Texto_0
   697  000952  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   698  000954  EC34  F007         	call	_EscreveFraseRamLCD	;wreg free
   699                           
   700                           ;Entrada_Analogica.c: 69: PosicaoCursorLCD(2,1);
   701  000958  0E01               	movlw	1
   702  00095A  6E04               	movwf	PosicaoCursorLCD@coluna,c
   703  00095C  0E02               	movlw	2
   704  00095E  EC5F  F006         	call	_PosicaoCursorLCD
   705                           
   706                           ;Entrada_Analogica.c: 70: EscreveFraseRamLCD(Texto_1);
   707  000962  0EA4               	movlw	low main@Texto_1
   708  000964  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   709  000966  0E00               	movlw	high main@Texto_1
   710  000968  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   711  00096A  EC34  F007         	call	_EscreveFraseRamLCD	;wreg free
   712                           
   713                           ;Entrada_Analogica.c: 72: delay_ms(5000);
   714  00096E  0E13               	movlw	19
   715  000970  6E02               	movwf	delay_ms@tempodeatraso+1,c
   716  000972  0E88               	movlw	136
   717  000974  6E01               	movwf	delay_ms@tempodeatraso,c
   718  000976  EC58  F007         	call	_delay_ms	;wreg free
   719                           
   720                           ;Entrada_Analogica.c: 74: PosicaoCursorLCD(1,1);
   721  00097A  0E01               	movlw	1
   722  00097C  6E04               	movwf	PosicaoCursorLCD@coluna,c
   723  00097E  0E01               	movlw	1
   724  000980  EC5F  F006         	call	_PosicaoCursorLCD
   725                           
   726                           ;Entrada_Analogica.c: 75: EscreveFraseRamLCD(Texto_1);
   727  000984  0EA4               	movlw	low main@Texto_1
   728  000986  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   729  000988  0E00               	movlw	high main@Texto_1
   730  00098A  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   731  00098C  EC34  F007         	call	_EscreveFraseRamLCD	;wreg free
   732                           
   733                           ;Entrada_Analogica.c: 76: PosicaoCursorLCD(2,1);
   734  000990  0E01               	movlw	1
   735  000992  6E04               	movwf	PosicaoCursorLCD@coluna,c
   736  000994  0E02               	movlw	2
   737  000996  EC5F  F006         	call	_PosicaoCursorLCD
   738                           
   739                           ;Entrada_Analogica.c: 77: EscreveFraseRamLCD(Texto_5);
   740  00099A  0EB5               	movlw	low main@Texto_5
   741  00099C  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   742  00099E  0E00               	movlw	high main@Texto_5
   743  0009A0  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   744  0009A2  EC34  F007         	call	_EscreveFraseRamLCD	;wreg free
   745  0009A6                     l1699:
   746                           
   747                           ;Entrada_Analogica.c: 82: {
   748                           ;Entrada_Analogica.c: 83: ADCON0 = 0b00000011;
   749  0009A6  0E03               	movlw	3
   750  0009A8  6EC2               	movwf	4034,c	;volatile
   751  0009AA                     l177:
   752  0009AA  B2C2               	btfsc	4034,1,c	;volatile
   753  0009AC  D7FE               	goto	l177
   754                           
   755                           ;Entrada_Analogica.c: 86: }
   756                           ;Entrada_Analogica.c: 94: valorAN0 = (ADRESH << 8) + ADRESL;
   757  0009AE  50C4               	movf	4036,w,c	;volatile
   758  0009B0  6E23               	movwf	(??_main+1)& (0+255),c
   759  0009B2  6A22               	clrf	??_main& (0+255),c
   760  0009B4  50C3               	movf	4035,w,c	;volatile
   761  0009B6  2422               	addwf	??_main,w,c
   762  0009B8  0100               	movlb	0	; () banked
   763  0009BA  6FC6               	movwf	main@valorAN0& (0+255),b
   764  0009BC  0E00               	movlw	0
   765  0009BE  2023               	addwfc	??_main+1,w,c
   766  0009C0  0100               	movlb	0	; () banked
   767  0009C2  6FC7               	movwf	(main@valorAN0+1)& (0+255),b
   768                           
   769                           ; BSR set to: 0
   770                           ;Entrada_Analogica.c: 95: PosicaoCursorLCD(2,1);
   771  0009C4  0E01               	movlw	1
   772  0009C6  6E04               	movwf	PosicaoCursorLCD@coluna,c
   773  0009C8  0E02               	movlw	2
   774  0009CA  EC5F  F006         	call	_PosicaoCursorLCD
   775                           
   776                           ;Entrada_Analogica.c: 96: EscreveFraseRamLCD(Texto_4);
   777  0009CE  0E93               	movlw	low main@Texto_4
   778  0009D0  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   779  0009D2  0E00               	movlw	high main@Texto_4
   780  0009D4  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   781  0009D6  EC34  F007         	call	_EscreveFraseRamLCD	;wreg free
   782                           
   783                           ;Entrada_Analogica.c: 97: PosicaoCursorLCD(2,1);
   784  0009DA  0E01               	movlw	1
   785  0009DC  6E04               	movwf	PosicaoCursorLCD@coluna,c
   786  0009DE  0E02               	movlw	2
   787  0009E0  EC5F  F006         	call	_PosicaoCursorLCD
   788                           
   789                           ;Entrada_Analogica.c: 98: EscreveFraseRamLCD(Texto_5);
   790  0009E4  0EB5               	movlw	low main@Texto_5
   791  0009E6  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   792  0009E8  0E00               	movlw	high main@Texto_5
   793  0009EA  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   794  0009EC  EC34  F007         	call	_EscreveFraseRamLCD	;wreg free
   795                           
   796                           ;Entrada_Analogica.c: 99: PosicaoCursorLCD(2,7);
   797  0009F0  0E07               	movlw	7
   798  0009F2  6E04               	movwf	PosicaoCursorLCD@coluna,c
   799  0009F4  0E02               	movlw	2
   800  0009F6  EC5F  F006         	call	_PosicaoCursorLCD
   801                           
   802                           ;Entrada_Analogica.c: 100: EscreveInteiroLCD(valorAN0);
   803  0009FA  C0C6  F019         	movff	main@valorAN0,EscreveInteiroLCD@valor
   804  0009FE  C0C7  F01A         	movff	main@valorAN0+1,EscreveInteiroLCD@valor+1
   805  000A02  ECFB  F006         	call	_EscreveInteiroLCD	;wreg free
   806                           
   807                           ;Entrada_Analogica.c: 101: delay_ms(1000);
   808  000A06  0E03               	movlw	3
   809  000A08  6E02               	movwf	delay_ms@tempodeatraso+1,c
   810  000A0A  0EE8               	movlw	232
   811  000A0C  6E01               	movwf	delay_ms@tempodeatraso,c
   812  000A0E  EC58  F007         	call	_delay_ms	;wreg free
   813  000A12  D7C9               	goto	l1699
   814  000A14                     __end_of_main:
   815                           	opt stack 0
   816                           tblptru	equ	0xFF8
   817                           tblptrh	equ	0xFF7
   818                           tblptrl	equ	0xFF6
   819                           tablat	equ	0xFF5
   820                           postinc0	equ	0xFEE
   821                           wreg	equ	0xFE8
   822                           postdec1	equ	0xFE5
   823                           fsr1l	equ	0xFE1
   824                           postinc2	equ	0xFDE
   825                           
   826 ;; *************** function _delay_ms *****************
   827 ;; Defined at:
   828 ;;		line 115 in file "Entrada_Analogica.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  tempodeatras    2    0[COMRAM] unsigned int 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   842 ;;      Params:         2       0       0       0       0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0       0       0       0       0
   844 ;;      Temps:          1       0       0       0       0       0       0       0       0
   845 ;;      Totals:         3       0       0       0       0       0       0       0       0
   846 ;;Total ram usage:        3 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text1
   856  000EB0                     __ptext1:
   857                           	opt stack 0
   858  000EB0                     _delay_ms:
   859                           	opt stack 30
   860                           
   861                           ;Entrada_Analogica.c: 117: while(--tempodeatraso){
   862                           
   863                           ;incstack = 0
   864  000EB0  D008               	goto	l1605
   865  000EB2                     l1603:
   866                           
   867                           ;Entrada_Analogica.c: 118: _delay((unsigned long)((1)*(48000000/4000.0)));
   868  000EB2  0E10               	movlw	16
   869  000EB4  6E03               	movwf	??_delay_ms& (0+255),c
   870  000EB6  0E94               	movlw	148
   871  000EB8                     u1097:
   872  000EB8  2EE8               	decfsz	wreg,f,c
   873  000EBA  D7FE               	bra	u1097
   874  000EBC  2E03               	decfsz	??_delay_ms& (0+255),f,c
   875  000EBE  D7FC               	bra	u1097
   876  000EC0  D000               	nop2	
   877  000EC2                     l1605:
   878  000EC2  0601               	decf	delay_ms@tempodeatraso,f,c
   879  000EC4  A0D8               	btfss	status,0,c
   880  000EC6  0602               	decf	delay_ms@tempodeatraso+1,f,c
   881  000EC8  5001               	movf	delay_ms@tempodeatraso,w,c
   882  000ECA  1002               	iorwf	delay_ms@tempodeatraso+1,w,c
   883  000ECC  B4D8               	btfsc	status,2,c
   884  000ECE  0012               	return	
   885  000ED0  D7F0               	goto	l1603
   886  000ED2                     __end_of_delay_ms:
   887                           	opt stack 0
   888                           tblptru	equ	0xFF8
   889                           tblptrh	equ	0xFF7
   890                           tblptrl	equ	0xFF6
   891                           tablat	equ	0xFF5
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           postdec1	equ	0xFE5
   895                           fsr1l	equ	0xFE1
   896                           postinc2	equ	0xFDE
   897                           status	equ	0xFD8
   898                           
   899 ;; *************** function _PosicaoCursorLCD *****************
   900 ;; Defined at:
   901 ;;		line 280 in file "displayLCD.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  linha           1    wreg     unsigned char 
   904 ;;  coluna          1    3[COMRAM] unsigned char 
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  linha           1    4[COMRAM] unsigned char 
   907 ;;  EnderecoLCD     1    5[COMRAM] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   917 ;;      Params:         1       0       0       0       0       0       0       0       0
   918 ;;      Locals:         2       0       0       0       0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0       0       0
   920 ;;      Totals:         3       0       0       0       0       0       0       0       0
   921 ;;Total ram usage:        3 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    2
   924 ;; This function calls:
   925 ;;		_EnderecoCursor
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text2
   932  000CBE                     __ptext2:
   933                           	opt stack 0
   934  000CBE                     _PosicaoCursorLCD:
   935                           	opt stack 28
   936                           
   937                           ;incstack = 0
   938                           ;PosicaoCursorLCD@linha stored from wreg
   939  000CBE  6E05               	movwf	PosicaoCursorLCD@linha,c
   940                           
   941                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
   942  000CC0  0E00               	movlw	0
   943  000CC2  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   944                           
   945                           ;displayLCD.c: 292: if (coluna >= 0)
   946  000CC4  0604               	decf	PosicaoCursorLCD@coluna,f,c
   947                           
   948                           ;displayLCD.c: 293: {
   949                           ;displayLCD.c: 296: switch (linha)
   950  000CC6  D01E               	goto	l1591
   951  000CC8                     l70:
   952                           
   953                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
   954  000CC8  C004  F006         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
   955                           
   956                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
   957  000CCC  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   958  000CCE  EC2A  F006         	call	_EnderecoCursor
   959                           
   960                           ;displayLCD.c: 301: break;
   961  000CD2  0012               	return	
   962  000CD4                     l1575:
   963                           
   964                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
   965  000CD4  5004               	movf	PosicaoCursorLCD@coluna,w,c
   966  000CD6  0F40               	addlw	64
   967  000CD8  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   968                           
   969                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
   970  000CDA  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   971  000CDC  EC2A  F006         	call	_EnderecoCursor
   972                           
   973                           ;displayLCD.c: 306: break;
   974  000CE0  0012               	return	
   975  000CE2                     l1579:
   976                           
   977                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
   978  000CE2  5004               	movf	PosicaoCursorLCD@coluna,w,c
   979  000CE4  0F14               	addlw	20
   980  000CE6  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   981                           
   982                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
   983  000CE8  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   984  000CEA  EC2A  F006         	call	_EnderecoCursor
   985                           
   986                           ;displayLCD.c: 311: break;
   987  000CEE  0012               	return	
   988  000CF0                     l1583:
   989                           
   990                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
   991  000CF0  5004               	movf	PosicaoCursorLCD@coluna,w,c
   992  000CF2  0F54               	addlw	84
   993  000CF4  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   994                           
   995                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
   996  000CF6  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   997  000CF8  EC2A  F006         	call	_EnderecoCursor
   998                           
   999                           ;displayLCD.c: 316: break;
  1000  000CFC  0012               	return	
  1001  000CFE                     l1587:
  1002                           
  1003                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
  1004  000CFE  0E00               	movlw	0
  1005  000D00  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1006                           
  1007                           ;displayLCD.c: 321: }
  1008                           
  1009                           ;displayLCD.c: 320: break;
  1010  000D02  0012               	return	
  1011  000D04                     l1591:
  1012  000D04  5005               	movf	PosicaoCursorLCD@linha,w,c
  1013                           
  1014                           ; Switch size 1, requested type "space"
  1015                           ; Number of cases is 4, Range of values is 1 to 4
  1016                           ; switch strategies available:
  1017                           ; Name         Instructions Cycles
  1018                           ; simple_byte           13     7 (average)
  1019                           ;	Chosen strategy is simple_byte
  1020  000D06  0A01               	xorlw	1	; case 1
  1021  000D08  B4D8               	btfsc	status,2,c
  1022  000D0A  D7DE               	goto	l70
  1023  000D0C  0A03               	xorlw	3	; case 2
  1024  000D0E  B4D8               	btfsc	status,2,c
  1025  000D10  D7E1               	goto	l1575
  1026  000D12  0A01               	xorlw	1	; case 3
  1027  000D14  B4D8               	btfsc	status,2,c
  1028  000D16  D7E5               	goto	l1579
  1029  000D18  0A07               	xorlw	7	; case 4
  1030  000D1A  B4D8               	btfsc	status,2,c
  1031  000D1C  D7E9               	goto	l1583
  1032  000D1E  D7EF               	goto	l1587
  1033  000D20                     __end_of_PosicaoCursorLCD:
  1034                           	opt stack 0
  1035                           tblptru	equ	0xFF8
  1036                           tblptrh	equ	0xFF7
  1037                           tblptrl	equ	0xFF6
  1038                           tablat	equ	0xFF5
  1039                           postinc0	equ	0xFEE
  1040                           wreg	equ	0xFE8
  1041                           postdec1	equ	0xFE5
  1042                           fsr1l	equ	0xFE1
  1043                           postinc2	equ	0xFDE
  1044                           status	equ	0xFD8
  1045                           
  1046 ;; *************** function _EnderecoCursor *****************
  1047 ;; Defined at:
  1048 ;;		line 229 in file "displayLCD.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  endereco        1    wreg     unsigned char 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  endereco        1    2[COMRAM] unsigned char 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0
  1063 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1065 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1066 ;;Total ram usage:        1 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    1
  1069 ;; This function calls:
  1070 ;;		_Delay
  1071 ;; This function is called by:
  1072 ;;		_PosicaoCursorLCD
  1073 ;;		_CriaCaractereLCD
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text3
  1078  000C54                     __ptext3:
  1079                           	opt stack 0
  1080  000C54                     _EnderecoCursor:
  1081                           	opt stack 28
  1082                           
  1083                           ;incstack = 0
  1084                           ;EnderecoCursor@endereco stored from wreg
  1085  000C54  6E03               	movwf	EnderecoCursor@endereco,c
  1086                           
  1087                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
  1088  000C56  9483               	bcf	3971,2,c	;volatile
  1089                           
  1090                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
  1091  000C58  9283               	bcf	3971,1,c	;volatile
  1092                           
  1093                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
  1094  000C5A  9083               	bcf	3971,0,c	;volatile
  1095                           
  1096                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
  1097  000C5C  8E83               	bsf	3971,7,c	;volatile
  1098                           
  1099                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1100  000C5E  A803               	btfss	EnderecoCursor@endereco,4,c
  1101  000C60  D002               	goto	l51
  1102  000C62  8883               	bsf	3971,4,c	;volatile
  1103  000C64  D001               	goto	l1471
  1104  000C66                     l51:
  1105                           
  1106                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
  1107  000C66  9883               	bcf	3971,4,c	;volatile
  1108  000C68                     l1471:
  1109                           
  1110                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1111  000C68  AA03               	btfss	EnderecoCursor@endereco,5,c
  1112  000C6A  D002               	goto	l53
  1113  000C6C  8A83               	bsf	3971,5,c	;volatile
  1114  000C6E  D001               	goto	l1475
  1115  000C70                     l53:
  1116                           
  1117                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
  1118  000C70  9A83               	bcf	3971,5,c	;volatile
  1119  000C72                     l1475:
  1120                           
  1121                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1122  000C72  AC03               	btfss	EnderecoCursor@endereco,6,c
  1123  000C74  D002               	goto	l55
  1124  000C76  8C83               	bsf	3971,6,c	;volatile
  1125  000C78  D001               	goto	l56
  1126  000C7A                     l55:
  1127                           
  1128                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
  1129  000C7A  9C83               	bcf	3971,6,c	;volatile
  1130  000C7C                     l56:
  1131                           
  1132                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
  1133  000C7C  8083               	bsf	3971,0,c	;volatile
  1134                           
  1135                           ;displayLCD.c: 247: Delay();
  1136  000C7E  EC46  F007         	call	_Delay	;wreg free
  1137                           
  1138                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
  1139  000C82  9083               	bcf	3971,0,c	;volatile
  1140                           
  1141                           ;displayLCD.c: 249: Delay();
  1142  000C84  EC46  F007         	call	_Delay	;wreg free
  1143                           
  1144                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1145  000C88  A003               	btfss	EnderecoCursor@endereco,0,c
  1146  000C8A  D002               	goto	l57
  1147  000C8C  8883               	bsf	3971,4,c	;volatile
  1148  000C8E  D001               	goto	l58
  1149  000C90                     l57:
  1150                           
  1151                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
  1152  000C90  9883               	bcf	3971,4,c	;volatile
  1153  000C92                     l58:
  1154                           
  1155                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1156  000C92  A203               	btfss	EnderecoCursor@endereco,1,c
  1157  000C94  D002               	goto	l59
  1158  000C96  8A83               	bsf	3971,5,c	;volatile
  1159  000C98  D001               	goto	l60
  1160  000C9A                     l59:
  1161                           
  1162                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
  1163  000C9A  9A83               	bcf	3971,5,c	;volatile
  1164  000C9C                     l60:
  1165                           
  1166                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1167  000C9C  A403               	btfss	EnderecoCursor@endereco,2,c
  1168  000C9E  D002               	goto	l61
  1169  000CA0  8C83               	bsf	3971,6,c	;volatile
  1170  000CA2  D001               	goto	l62
  1171  000CA4                     l61:
  1172                           
  1173                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
  1174  000CA4  9C83               	bcf	3971,6,c	;volatile
  1175  000CA6                     l62:
  1176                           
  1177                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1178  000CA6  A603               	btfss	EnderecoCursor@endereco,3,c
  1179  000CA8  D002               	goto	l63
  1180  000CAA  8E83               	bsf	3971,7,c	;volatile
  1181  000CAC  D001               	goto	l64
  1182  000CAE                     l63:
  1183                           
  1184                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
  1185  000CAE  9E83               	bcf	3971,7,c	;volatile
  1186  000CB0                     l64:
  1187                           
  1188                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
  1189  000CB0  8083               	bsf	3971,0,c	;volatile
  1190                           
  1191                           ;displayLCD.c: 263: Delay();
  1192  000CB2  EC46  F007         	call	_Delay	;wreg free
  1193                           
  1194                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
  1195  000CB6  9083               	bcf	3971,0,c	;volatile
  1196                           
  1197                           ;displayLCD.c: 265: Delay();
  1198  000CB8  EC46  F007         	call	_Delay	;wreg free
  1199  000CBC  0012               	return		;funcret
  1200  000CBE                     __end_of_EnderecoCursor:
  1201                           	opt stack 0
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           postinc0	equ	0xFEE
  1207                           wreg	equ	0xFE8
  1208                           postdec1	equ	0xFE5
  1209                           fsr1l	equ	0xFE1
  1210                           postinc2	equ	0xFDE
  1211                           status	equ	0xFD8
  1212                           
  1213 ;; *************** function _EscreveInteiroLCD *****************
  1214 ;; Defined at:
  1215 ;;		line 391 in file "displayLCD.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  valor           2   24[COMRAM] int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  texto           7   26[COMRAM] unsigned char [7]
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1229 ;;      Params:         2       0       0       0       0       0       0       0       0
  1230 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1232 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1233 ;;Total ram usage:        9 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    3
  1236 ;; This function calls:
  1237 ;;		_EscreveFraseRamLCD
  1238 ;;		_itoa
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text4
  1245  000DF6                     __ptext4:
  1246                           	opt stack 0
  1247  000DF6                     _EscreveInteiroLCD:
  1248                           	opt stack 27
  1249                           
  1250                           ;displayLCD.c: 393: char texto[7] = "000000";
  1251                           
  1252                           ;incstack = 0
  1253  000DF6  EE20  F035         	lfsr	2,EscreveInteiroLCD@F4004
  1254  000DFA  EE10  F01B         	lfsr	1,EscreveInteiroLCD@texto
  1255  000DFE  0E06               	movlw	6
  1256  000E00                     u961:
  1257  000E00  CFDB FFE3          	movff	plusw2,plusw1
  1258  000E04  06E8               	decf	wreg,f,c
  1259  000E06  E2FC               	bc	u961
  1260                           
  1261                           ;displayLCD.c: 394: itoa(texto,valor, 10);
  1262  000E08  0E1B               	movlw	low EscreveInteiroLCD@texto
  1263  000E0A  6E11               	movwf	itoa@buf,c
  1264  000E0C  0E00               	movlw	high EscreveInteiroLCD@texto
  1265  000E0E  6E12               	movwf	itoa@buf+1,c
  1266  000E10  C019  F013         	movff	EscreveInteiroLCD@valor,itoa@val
  1267  000E14  C01A  F014         	movff	EscreveInteiroLCD@valor+1,itoa@val+1
  1268  000E18  0E00               	movlw	0
  1269  000E1A  6E16               	movwf	itoa@base+1,c
  1270  000E1C  0E0A               	movlw	10
  1271  000E1E  6E15               	movwf	itoa@base,c
  1272  000E20  ECB9  F006         	call	_itoa	;wreg free
  1273                           
  1274                           ;displayLCD.c: 395: EscreveFraseRamLCD(texto);
  1275  000E24  0E1B               	movlw	low EscreveInteiroLCD@texto
  1276  000E26  6E04               	movwf	EscreveFraseRamLCD@buffer,c
  1277  000E28  0E00               	movlw	high EscreveInteiroLCD@texto
  1278  000E2A  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
  1279  000E2C  EC34  F007         	call	_EscreveFraseRamLCD	;wreg free
  1280  000E30  0012               	return		;funcret
  1281  000E32                     __end_of_EscreveInteiroLCD:
  1282                           	opt stack 0
  1283                           tblptru	equ	0xFF8
  1284                           tblptrh	equ	0xFF7
  1285                           tblptrl	equ	0xFF6
  1286                           tablat	equ	0xFF5
  1287                           postinc0	equ	0xFEE
  1288                           wreg	equ	0xFE8
  1289                           postdec1	equ	0xFE5
  1290                           plusw1	equ	0xFE3
  1291                           fsr1l	equ	0xFE1
  1292                           postinc2	equ	0xFDE
  1293                           plusw2	equ	0xFDB
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _itoa *****************
  1297 ;; Defined at:
  1298 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  buf             2   16[COMRAM] PTR unsigned char 
  1301 ;;		 -> EscreveInteiroLCD@texto(7), 
  1302 ;;  val             2   18[COMRAM] int 
  1303 ;;  base            2   20[COMRAM] int 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  cp              2   22[COMRAM] PTR unsigned char 
  1306 ;;		 -> EscreveInteiroLCD@texto(7), 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  2   16[COMRAM] PTR unsigned char 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1316 ;;      Params:         6       0       0       0       0       0       0       0       0
  1317 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1319 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1320 ;;Total ram usage:        8 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    2
  1323 ;; This function calls:
  1324 ;;		_utoa
  1325 ;; This function is called by:
  1326 ;;		_EscreveInteiroLCD
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text5
  1331  000D72                     __ptext5:
  1332                           	opt stack 0
  1333  000D72                     _itoa:
  1334                           	opt stack 27
  1335                           
  1336                           ;incstack = 0
  1337  000D72  C011  F017         	movff	itoa@buf,itoa@cp
  1338  000D76  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  1339  000D7A  AE14               	btfss	itoa@val+1,7,c
  1340  000D7C  D00C               	goto	l1505
  1341  000D7E  C011  FFD9         	movff	itoa@buf,fsr2l
  1342  000D82  C012  FFDA         	movff	itoa@buf+1,fsr2h
  1343  000D86  0E2D               	movlw	45
  1344  000D88  6EDF               	movwf	indf2,c
  1345  000D8A  4A11               	infsnz	itoa@buf,f,c
  1346  000D8C  2A12               	incf	itoa@buf+1,f,c
  1347  000D8E  6C13               	negf	itoa@val,c
  1348  000D90  1E14               	comf	itoa@val+1,f,c
  1349  000D92  B0D8               	btfsc	status,0,c
  1350  000D94  2A14               	incf	itoa@val+1,f,c
  1351  000D96                     l1505:
  1352  000D96  C011  F008         	movff	itoa@buf,utoa@buf
  1353  000D9A  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  1354  000D9E  C013  F00A         	movff	itoa@val,utoa@val
  1355  000DA2  C014  F00B         	movff	itoa@val+1,utoa@val+1
  1356  000DA6  C015  F00C         	movff	itoa@base,utoa@base
  1357  000DAA  C016  F00D         	movff	itoa@base+1,utoa@base+1
  1358  000DAE  EC0A  F005         	call	_utoa	;wreg free
  1359  000DB2  0012               	return	
  1360  000DB4                     __end_of_itoa:
  1361                           	opt stack 0
  1362                           tblptru	equ	0xFF8
  1363                           tblptrh	equ	0xFF7
  1364                           tblptrl	equ	0xFF6
  1365                           tablat	equ	0xFF5
  1366                           postinc0	equ	0xFEE
  1367                           wreg	equ	0xFE8
  1368                           postdec1	equ	0xFE5
  1369                           plusw1	equ	0xFE3
  1370                           fsr1l	equ	0xFE1
  1371                           indf2	equ	0xFDF
  1372                           postinc2	equ	0xFDE
  1373                           plusw2	equ	0xFDB
  1374                           fsr2h	equ	0xFDA
  1375                           fsr2l	equ	0xFD9
  1376                           status	equ	0xFD8
  1377                           
  1378 ;; *************** function _utoa *****************
  1379 ;; Defined at:
  1380 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  buf             2    7[COMRAM] PTR unsigned char 
  1383 ;;		 -> EscreveInteiroLCD@texto(7), 
  1384 ;;  val             2    9[COMRAM] unsigned int 
  1385 ;;  base            2   11[COMRAM] int 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  v               2   13[COMRAM] unsigned int 
  1388 ;;  c               1   15[COMRAM] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  2    7[COMRAM] PTR unsigned char 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:         6       0       0       0       0       0       0       0       0
  1399 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1401 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:        9 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    1
  1405 ;; This function calls:
  1406 ;;		___lwdiv
  1407 ;;		___lwmod
  1408 ;; This function is called by:
  1409 ;;		_itoa
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text6
  1414  000A14                     __ptext6:
  1415                           	opt stack 0
  1416  000A14                     _utoa:
  1417                           	opt stack 27
  1418                           
  1419                           ;incstack = 0
  1420  000A14  C00A  F00E         	movff	utoa@val,utoa@v
  1421  000A18  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  1422  000A1C                     l1393:
  1423  000A1C  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  1424  000A20  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  1425  000A24  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1426  000A28  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1427  000A2C  EC90  F006         	call	___lwdiv	;wreg free
  1428  000A30  C001  F00E         	movff	?___lwdiv,utoa@v
  1429  000A34  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  1430  000A38  4A08               	infsnz	utoa@buf,f,c
  1431  000A3A  2A09               	incf	utoa@buf+1,f,c
  1432  000A3C  500E               	movf	utoa@v,w,c
  1433  000A3E  100F               	iorwf	utoa@v+1,w,c
  1434  000A40  A4D8               	btfss	status,2,c
  1435  000A42  D7EC               	goto	l1393
  1436  000A44  C008  FFD9         	movff	utoa@buf,fsr2l
  1437  000A48  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1438  000A4C  0E00               	movlw	0
  1439  000A4E  6EDF               	movwf	indf2,c
  1440  000A50  0608               	decf	utoa@buf,f,c
  1441  000A52  A0D8               	btfss	status,0,c
  1442  000A54  0609               	decf	utoa@buf+1,f,c
  1443  000A56                     l1403:
  1444  000A56  C00A  F001         	movff	utoa@val,___lwmod@dividend
  1445  000A5A  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  1446  000A5E  C00C  F003         	movff	utoa@base,___lwmod@divisor
  1447  000A62  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  1448  000A66  ECDA  F006         	call	___lwmod	;wreg free
  1449  000A6A  5001               	movf	?___lwmod,w,c
  1450  000A6C  6E10               	movwf	utoa@c,c
  1451  000A6E  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  1452  000A72  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  1453  000A76  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1454  000A7A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1455  000A7E  EC90  F006         	call	___lwdiv	;wreg free
  1456  000A82  C001  F00A         	movff	?___lwdiv,utoa@val
  1457  000A86  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  1458  000A8A  0E09               	movlw	9
  1459  000A8C  6410               	cpfsgt	utoa@c,c
  1460  000A8E  D002               	goto	l587
  1461  000A90  0E07               	movlw	7
  1462  000A92  2610               	addwf	utoa@c,f,c
  1463  000A94                     l587:
  1464  000A94  0E30               	movlw	48
  1465  000A96  2610               	addwf	utoa@c,f,c
  1466  000A98  C008  FFD9         	movff	utoa@buf,fsr2l
  1467  000A9C  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1468  000AA0  C010  FFDF         	movff	utoa@c,indf2
  1469  000AA4  0608               	decf	utoa@buf,f,c
  1470  000AA6  A0D8               	btfss	status,0,c
  1471  000AA8  0609               	decf	utoa@buf+1,f,c
  1472  000AAA  500A               	movf	utoa@val,w,c
  1473  000AAC  100B               	iorwf	utoa@val+1,w,c
  1474  000AAE  A4D8               	btfss	status,2,c
  1475  000AB0  D7D2               	goto	l1403
  1476                           
  1477                           ;	Return value of _utoa is never used
  1478  000AB2  4A08               	infsnz	utoa@buf,f,c
  1479  000AB4  2A09               	incf	utoa@buf+1,f,c
  1480  000AB6  0012               	return	
  1481  000AB8                     __end_of_utoa:
  1482                           	opt stack 0
  1483                           tblptru	equ	0xFF8
  1484                           tblptrh	equ	0xFF7
  1485                           tblptrl	equ	0xFF6
  1486                           tablat	equ	0xFF5
  1487                           postinc0	equ	0xFEE
  1488                           wreg	equ	0xFE8
  1489                           postdec1	equ	0xFE5
  1490                           plusw1	equ	0xFE3
  1491                           fsr1l	equ	0xFE1
  1492                           indf2	equ	0xFDF
  1493                           postinc2	equ	0xFDE
  1494                           plusw2	equ	0xFDB
  1495                           fsr2h	equ	0xFDA
  1496                           fsr2l	equ	0xFD9
  1497                           status	equ	0xFD8
  1498                           
  1499 ;; *************** function ___lwmod *****************
  1500 ;; Defined at:
  1501 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  dividend        2    0[COMRAM] unsigned int 
  1504 ;;  divisor         2    2[COMRAM] unsigned int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  counter         1    4[COMRAM] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  2    0[COMRAM] unsigned int 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1516 ;;      Params:         4       0       0       0       0       0       0       0       0
  1517 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1519 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1520 ;;Total ram usage:        5 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_utoa
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text7
  1530  000DB4                     __ptext7:
  1531                           	opt stack 0
  1532  000DB4                     ___lwmod:
  1533                           	opt stack 27
  1534                           
  1535                           ;incstack = 0
  1536  000DB4  5003               	movf	___lwmod@divisor,w,c
  1537  000DB6  1004               	iorwf	___lwmod@divisor+1,w,c
  1538  000DB8  B4D8               	btfsc	status,2,c
  1539  000DBA  D018               	goto	l676
  1540  000DBC  0E01               	movlw	1
  1541  000DBE  6E05               	movwf	___lwmod@counter,c
  1542  000DC0  D004               	goto	l1345
  1543  000DC2                     l1343:
  1544  000DC2  90D8               	bcf	status,0,c
  1545  000DC4  3603               	rlcf	___lwmod@divisor,f,c
  1546  000DC6  3604               	rlcf	___lwmod@divisor+1,f,c
  1547  000DC8  2A05               	incf	___lwmod@counter,f,c
  1548  000DCA                     l1345:
  1549  000DCA  AE04               	btfss	___lwmod@divisor+1,7,c
  1550  000DCC  D7FA               	goto	l1343
  1551  000DCE                     l1347:
  1552  000DCE  5003               	movf	___lwmod@divisor,w,c
  1553  000DD0  5C01               	subwf	___lwmod@dividend,w,c
  1554  000DD2  5004               	movf	___lwmod@divisor+1,w,c
  1555  000DD4  5802               	subwfb	___lwmod@dividend+1,w,c
  1556  000DD6  A0D8               	btfss	status,0,c
  1557  000DD8  D004               	goto	l1351
  1558  000DDA  5003               	movf	___lwmod@divisor,w,c
  1559  000DDC  5E01               	subwf	___lwmod@dividend,f,c
  1560  000DDE  5004               	movf	___lwmod@divisor+1,w,c
  1561  000DE0  5A02               	subwfb	___lwmod@dividend+1,f,c
  1562  000DE2                     l1351:
  1563  000DE2  90D8               	bcf	status,0,c
  1564  000DE4  3204               	rrcf	___lwmod@divisor+1,f,c
  1565  000DE6  3203               	rrcf	___lwmod@divisor,f,c
  1566  000DE8  2E05               	decfsz	___lwmod@counter,f,c
  1567  000DEA  D7F1               	goto	l1347
  1568  000DEC                     l676:
  1569  000DEC  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1570  000DF0  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1571  000DF4  0012               	return		;funcret
  1572  000DF6                     __end_of___lwmod:
  1573                           	opt stack 0
  1574                           tblptru	equ	0xFF8
  1575                           tblptrh	equ	0xFF7
  1576                           tblptrl	equ	0xFF6
  1577                           tablat	equ	0xFF5
  1578                           postinc0	equ	0xFEE
  1579                           wreg	equ	0xFE8
  1580                           postdec1	equ	0xFE5
  1581                           plusw1	equ	0xFE3
  1582                           fsr1l	equ	0xFE1
  1583                           indf2	equ	0xFDF
  1584                           postinc2	equ	0xFDE
  1585                           plusw2	equ	0xFDB
  1586                           fsr2h	equ	0xFDA
  1587                           fsr2l	equ	0xFD9
  1588                           status	equ	0xFD8
  1589                           
  1590 ;; *************** function ___lwdiv *****************
  1591 ;; Defined at:
  1592 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  dividend        2    0[COMRAM] unsigned int 
  1595 ;;  divisor         2    2[COMRAM] unsigned int 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  quotient        2    4[COMRAM] unsigned int 
  1598 ;;  counter         1    6[COMRAM] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  2    0[COMRAM] unsigned int 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1608 ;;      Params:         4       0       0       0       0       0       0       0       0
  1609 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1611 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1612 ;;Total ram usage:        7 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_utoa
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text8
  1622  000D20                     __ptext8:
  1623                           	opt stack 0
  1624  000D20                     ___lwdiv:
  1625                           	opt stack 27
  1626                           
  1627                           ;incstack = 0
  1628  000D20  0E00               	movlw	0
  1629  000D22  6E06               	movwf	___lwdiv@quotient+1,c
  1630  000D24  0E00               	movlw	0
  1631  000D26  6E05               	movwf	___lwdiv@quotient,c
  1632  000D28  5003               	movf	___lwdiv@divisor,w,c
  1633  000D2A  1004               	iorwf	___lwdiv@divisor+1,w,c
  1634  000D2C  B4D8               	btfsc	status,2,c
  1635  000D2E  D01C               	goto	l666
  1636  000D30  0E01               	movlw	1
  1637  000D32  6E07               	movwf	___lwdiv@counter,c
  1638  000D34  D004               	goto	l1325
  1639  000D36                     l1323:
  1640  000D36  90D8               	bcf	status,0,c
  1641  000D38  3603               	rlcf	___lwdiv@divisor,f,c
  1642  000D3A  3604               	rlcf	___lwdiv@divisor+1,f,c
  1643  000D3C  2A07               	incf	___lwdiv@counter,f,c
  1644  000D3E                     l1325:
  1645  000D3E  AE04               	btfss	___lwdiv@divisor+1,7,c
  1646  000D40  D7FA               	goto	l1323
  1647  000D42                     l1327:
  1648  000D42  90D8               	bcf	status,0,c
  1649  000D44  3605               	rlcf	___lwdiv@quotient,f,c
  1650  000D46  3606               	rlcf	___lwdiv@quotient+1,f,c
  1651  000D48  5003               	movf	___lwdiv@divisor,w,c
  1652  000D4A  5C01               	subwf	___lwdiv@dividend,w,c
  1653  000D4C  5004               	movf	___lwdiv@divisor+1,w,c
  1654  000D4E  5802               	subwfb	___lwdiv@dividend+1,w,c
  1655  000D50  A0D8               	btfss	status,0,c
  1656  000D52  D005               	goto	l1335
  1657  000D54  5003               	movf	___lwdiv@divisor,w,c
  1658  000D56  5E01               	subwf	___lwdiv@dividend,f,c
  1659  000D58  5004               	movf	___lwdiv@divisor+1,w,c
  1660  000D5A  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1661  000D5C  8005               	bsf	___lwdiv@quotient,0,c
  1662  000D5E                     l1335:
  1663  000D5E  90D8               	bcf	status,0,c
  1664  000D60  3204               	rrcf	___lwdiv@divisor+1,f,c
  1665  000D62  3203               	rrcf	___lwdiv@divisor,f,c
  1666  000D64  2E07               	decfsz	___lwdiv@counter,f,c
  1667  000D66  D7ED               	goto	l1327
  1668  000D68                     l666:
  1669  000D68  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1670  000D6C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1671  000D70  0012               	return		;funcret
  1672  000D72                     __end_of___lwdiv:
  1673                           	opt stack 0
  1674                           tblptru	equ	0xFF8
  1675                           tblptrh	equ	0xFF7
  1676                           tblptrl	equ	0xFF6
  1677                           tablat	equ	0xFF5
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           postdec1	equ	0xFE5
  1681                           plusw1	equ	0xFE3
  1682                           fsr1l	equ	0xFE1
  1683                           indf2	equ	0xFDF
  1684                           postinc2	equ	0xFDE
  1685                           plusw2	equ	0xFDB
  1686                           fsr2h	equ	0xFDA
  1687                           fsr2l	equ	0xFD9
  1688                           status	equ	0xFD8
  1689                           
  1690 ;; *************** function _EscreveFraseRamLCD *****************
  1691 ;; Defined at:
  1692 ;;		line 438 in file "displayLCD.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  buffer          2    3[COMRAM] PTR unsigned char 
  1695 ;;		 -> main@Texto_5(17), main@Texto_4(17), main@Texto_1(17), main@Texto_0(17), 
  1696 ;;		 -> EscreveInteiroLCD@texto(7), 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1708 ;;      Params:         2       0       0       0       0       0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1711 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1712 ;;Total ram usage:        2 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    2
  1715 ;; This function calls:
  1716 ;;		_EscreveCaractereLCD
  1717 ;; This function is called by:
  1718 ;;		_EscreveInteiroLCD
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text9
  1724  000E68                     __ptext9:
  1725                           	opt stack 0
  1726  000E68                     _EscreveFraseRamLCD:
  1727                           	opt stack 27
  1728                           
  1729                           ;displayLCD.c: 440: while(*buffer)
  1730                           
  1731                           ;incstack = 0
  1732  000E68  D009               	goto	l1515
  1733  000E6A                     l1511:
  1734                           
  1735                           ;displayLCD.c: 441: {
  1736                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
  1737  000E6A  C004  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1738  000E6E  C005  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1739  000E72  50DF               	movf	indf2,w,c
  1740  000E74  ECF1  F005         	call	_EscreveCaractereLCD
  1741                           
  1742                           ;displayLCD.c: 443: buffer++;
  1743  000E78  4A04               	infsnz	EscreveFraseRamLCD@buffer,f,c
  1744  000E7A  2A05               	incf	EscreveFraseRamLCD@buffer+1,f,c
  1745  000E7C                     l1515:
  1746  000E7C  C004  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1747  000E80  C005  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1748  000E84  50DF               	movf	indf2,w,c
  1749  000E86  B4D8               	btfsc	status,2,c
  1750  000E88  0012               	return	
  1751  000E8A  D7EF               	goto	l1511
  1752  000E8C                     __end_of_EscreveFraseRamLCD:
  1753                           	opt stack 0
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           postinc0	equ	0xFEE
  1759                           wreg	equ	0xFE8
  1760                           postdec1	equ	0xFE5
  1761                           plusw1	equ	0xFE3
  1762                           fsr1l	equ	0xFE1
  1763                           indf2	equ	0xFDF
  1764                           postinc2	equ	0xFDE
  1765                           plusw2	equ	0xFDB
  1766                           fsr2h	equ	0xFDA
  1767                           fsr2l	equ	0xFD9
  1768                           status	equ	0xFD8
  1769                           
  1770 ;; *************** function _EscreveCaractereLCD *****************
  1771 ;; Defined at:
  1772 ;;		line 339 in file "displayLCD.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  data            1    wreg     unsigned char 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  data            1    2[COMRAM] unsigned char 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0
  1787 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1789 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1790 ;;Total ram usage:        1 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    1
  1793 ;; This function calls:
  1794 ;;		_Delay
  1795 ;; This function is called by:
  1796 ;;		_EscreveFraseRamLCD
  1797 ;;		_EscreveFloatLCD
  1798 ;;		_EscreveFraseLCD
  1799 ;;		_CriaCaractereLCD
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text10
  1804  000BE2                     __ptext10:
  1805                           	opt stack 0
  1806  000BE2                     _EscreveCaractereLCD:
  1807                           	opt stack 27
  1808                           
  1809                           ;incstack = 0
  1810                           ;EscreveCaractereLCD@data stored from wreg
  1811  000BE2  6E03               	movwf	EscreveCaractereLCD@data,c
  1812                           
  1813                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
  1814  000BE4  9483               	bcf	3971,2,c	;volatile
  1815                           
  1816                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
  1817  000BE6  8283               	bsf	3971,1,c	;volatile
  1818                           
  1819                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
  1820  000BE8  9083               	bcf	3971,0,c	;volatile
  1821                           
  1822                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
  1823  000BEA  A803               	btfss	EscreveCaractereLCD@data,4,c
  1824  000BEC  D002               	goto	l80
  1825  000BEE  8883               	bsf	3971,4,c	;volatile
  1826  000BF0  D001               	goto	l1361
  1827  000BF2                     l80:
  1828                           
  1829                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
  1830  000BF2  9883               	bcf	3971,4,c	;volatile
  1831  000BF4                     l1361:
  1832                           
  1833                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
  1834  000BF4  AA03               	btfss	EscreveCaractereLCD@data,5,c
  1835  000BF6  D002               	goto	l82
  1836  000BF8  8A83               	bsf	3971,5,c	;volatile
  1837  000BFA  D001               	goto	l1365
  1838  000BFC                     l82:
  1839                           
  1840                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
  1841  000BFC  9A83               	bcf	3971,5,c	;volatile
  1842  000BFE                     l1365:
  1843                           
  1844                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
  1845  000BFE  AC03               	btfss	EscreveCaractereLCD@data,6,c
  1846  000C00  D002               	goto	l84
  1847  000C02  8C83               	bsf	3971,6,c	;volatile
  1848  000C04  D001               	goto	l1369
  1849  000C06                     l84:
  1850                           
  1851                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
  1852  000C06  9C83               	bcf	3971,6,c	;volatile
  1853  000C08                     l1369:
  1854                           
  1855                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
  1856  000C08  AE03               	btfss	EscreveCaractereLCD@data,7,c
  1857  000C0A  D002               	goto	l86
  1858  000C0C  8E83               	bsf	3971,7,c	;volatile
  1859  000C0E  D001               	goto	l87
  1860  000C10                     l86:
  1861                           
  1862                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
  1863  000C10  9E83               	bcf	3971,7,c	;volatile
  1864  000C12                     l87:
  1865                           
  1866                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
  1867  000C12  8083               	bsf	3971,0,c	;volatile
  1868                           
  1869                           ;displayLCD.c: 358: Delay();
  1870  000C14  EC46  F007         	call	_Delay	;wreg free
  1871                           
  1872                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  1873  000C18  9083               	bcf	3971,0,c	;volatile
  1874                           
  1875                           ;displayLCD.c: 360: Delay();
  1876  000C1A  EC46  F007         	call	_Delay	;wreg free
  1877                           
  1878                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  1879  000C1E  A003               	btfss	EscreveCaractereLCD@data,0,c
  1880  000C20  D002               	goto	l88
  1881  000C22  8883               	bsf	3971,4,c	;volatile
  1882  000C24  D001               	goto	l89
  1883  000C26                     l88:
  1884                           
  1885                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  1886  000C26  9883               	bcf	3971,4,c	;volatile
  1887  000C28                     l89:
  1888                           
  1889                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  1890  000C28  A203               	btfss	EscreveCaractereLCD@data,1,c
  1891  000C2A  D002               	goto	l90
  1892  000C2C  8A83               	bsf	3971,5,c	;volatile
  1893  000C2E  D001               	goto	l91
  1894  000C30                     l90:
  1895                           
  1896                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  1897  000C30  9A83               	bcf	3971,5,c	;volatile
  1898  000C32                     l91:
  1899                           
  1900                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  1901  000C32  A403               	btfss	EscreveCaractereLCD@data,2,c
  1902  000C34  D002               	goto	l92
  1903  000C36  8C83               	bsf	3971,6,c	;volatile
  1904  000C38  D001               	goto	l93
  1905  000C3A                     l92:
  1906                           
  1907                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  1908  000C3A  9C83               	bcf	3971,6,c	;volatile
  1909  000C3C                     l93:
  1910                           
  1911                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  1912  000C3C  A603               	btfss	EscreveCaractereLCD@data,3,c
  1913  000C3E  D002               	goto	l94
  1914  000C40  8E83               	bsf	3971,7,c	;volatile
  1915  000C42  D001               	goto	l95
  1916  000C44                     l94:
  1917                           
  1918                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  1919  000C44  9E83               	bcf	3971,7,c	;volatile
  1920  000C46                     l95:
  1921                           
  1922                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  1923  000C46  8083               	bsf	3971,0,c	;volatile
  1924                           
  1925                           ;displayLCD.c: 375: Delay();
  1926  000C48  EC46  F007         	call	_Delay	;wreg free
  1927                           
  1928                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  1929  000C4C  9083               	bcf	3971,0,c	;volatile
  1930                           
  1931                           ;displayLCD.c: 377: Delay();
  1932  000C4E  EC46  F007         	call	_Delay	;wreg free
  1933  000C52  0012               	return		;funcret
  1934  000C54                     __end_of_EscreveCaractereLCD:
  1935                           	opt stack 0
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           postinc0	equ	0xFEE
  1941                           wreg	equ	0xFE8
  1942                           postdec1	equ	0xFE5
  1943                           plusw1	equ	0xFE3
  1944                           fsr1l	equ	0xFE1
  1945                           indf2	equ	0xFDF
  1946                           postinc2	equ	0xFDE
  1947                           plusw2	equ	0xFDB
  1948                           fsr2h	equ	0xFDA
  1949                           fsr2l	equ	0xFD9
  1950                           status	equ	0xFD8
  1951                           
  1952 ;; *************** function _ConfiguraLCD *****************
  1953 ;; Defined at:
  1954 ;;		line 80 in file "displayLCD.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1970 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1971 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1972 ;;Total ram usage:        1 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    2
  1975 ;; This function calls:
  1976 ;;		_Delay
  1977 ;;		_EscreveComandoLCD
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text11
  1984  000AB8                     __ptext11:
  1985                           	opt stack 0
  1986  000AB8                     _ConfiguraLCD:
  1987                           	opt stack 28
  1988                           
  1989                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  1990                           
  1991                           ;incstack = 0
  1992  000AB8  9495               	bcf	3989,2,c	;volatile
  1993                           
  1994                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  1995  000ABA  9295               	bcf	3989,1,c	;volatile
  1996                           
  1997                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  1998  000ABC  9095               	bcf	3989,0,c	;volatile
  1999                           
  2000                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  2001  000ABE  9895               	bcf	3989,4,c	;volatile
  2002                           
  2003                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  2004  000AC0  9A95               	bcf	3989,5,c	;volatile
  2005                           
  2006                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  2007  000AC2  9C95               	bcf	3989,6,c	;volatile
  2008                           
  2009                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  2010  000AC4  9E95               	bcf	3989,7,c	;volatile
  2011                           
  2012                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  2013  000AC6  9483               	bcf	3971,2,c	;volatile
  2014                           
  2015                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  2016  000AC8  9283               	bcf	3971,1,c	;volatile
  2017                           
  2018                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  2019  000ACA  9083               	bcf	3971,0,c	;volatile
  2020                           
  2021                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  2022  000ACC  9E83               	bcf	3971,7,c	;volatile
  2023                           
  2024                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  2025  000ACE  9C83               	bcf	3971,6,c	;volatile
  2026                           
  2027                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  2028  000AD0  8A83               	bsf	3971,5,c	;volatile
  2029                           
  2030                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  2031  000AD2  8883               	bsf	3971,4,c	;volatile
  2032                           
  2033                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  2034  000AD4  0EEA               	movlw	234
  2035  000AD6  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2036  000AD8  0EC3               	movlw	195
  2037  000ADA                     u1107:
  2038  000ADA  2EE8               	decfsz	wreg,f,c
  2039  000ADC  D7FE               	bra	u1107
  2040  000ADE  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2041  000AE0  D7FC               	bra	u1107
  2042  000AE2  F000               	nop	
  2043                           
  2044                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  2045  000AE4  8083               	bsf	3971,0,c	;volatile
  2046                           
  2047                           ;displayLCD.c: 117: Delay();
  2048  000AE6  EC46  F007         	call	_Delay	;wreg free
  2049                           
  2050                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  2051  000AEA  9083               	bcf	3971,0,c	;volatile
  2052                           
  2053                           ;displayLCD.c: 119: Delay();
  2054  000AEC  EC46  F007         	call	_Delay	;wreg free
  2055                           
  2056                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  2057  000AF0  0E4E               	movlw	78
  2058  000AF2  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2059  000AF4  0EEB               	movlw	235
  2060  000AF6                     u1117:
  2061  000AF6  2EE8               	decfsz	wreg,f,c
  2062  000AF8  D7FE               	bra	u1117
  2063  000AFA  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2064  000AFC  D7FC               	bra	u1117
  2065  000AFE  F000               	nop	
  2066                           
  2067                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  2068  000B00  8083               	bsf	3971,0,c	;volatile
  2069                           
  2070                           ;displayLCD.c: 128: Delay();
  2071  000B02  EC46  F007         	call	_Delay	;wreg free
  2072                           
  2073                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  2074  000B06  9083               	bcf	3971,0,c	;volatile
  2075                           
  2076                           ;displayLCD.c: 130: Delay();
  2077  000B08  EC46  F007         	call	_Delay	;wreg free
  2078                           
  2079                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  2080  000B0C  0E4E               	movlw	78
  2081  000B0E  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2082  000B10  0EEB               	movlw	235
  2083  000B12                     u1127:
  2084  000B12  2EE8               	decfsz	wreg,f,c
  2085  000B14  D7FE               	bra	u1127
  2086  000B16  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2087  000B18  D7FC               	bra	u1127
  2088  000B1A  F000               	nop	
  2089                           
  2090                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  2091  000B1C  8083               	bsf	3971,0,c	;volatile
  2092                           
  2093                           ;displayLCD.c: 139: Delay();
  2094  000B1E  EC46  F007         	call	_Delay	;wreg free
  2095                           
  2096                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  2097  000B22  9083               	bcf	3971,0,c	;volatile
  2098                           
  2099                           ;displayLCD.c: 141: Delay();
  2100  000B24  EC46  F007         	call	_Delay	;wreg free
  2101                           
  2102                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  2103  000B28  9E83               	bcf	3971,7,c	;volatile
  2104                           
  2105                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  2106  000B2A  9C83               	bcf	3971,6,c	;volatile
  2107                           
  2108                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  2109  000B2C  8A83               	bsf	3971,5,c	;volatile
  2110                           
  2111                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  2112  000B2E  9883               	bcf	3971,4,c	;volatile
  2113                           
  2114                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  2115  000B30  8083               	bsf	3971,0,c	;volatile
  2116                           
  2117                           ;displayLCD.c: 152: Delay();
  2118  000B32  EC46  F007         	call	_Delay	;wreg free
  2119                           
  2120                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  2121  000B36  9083               	bcf	3971,0,c	;volatile
  2122                           
  2123                           ;displayLCD.c: 154: Delay();
  2124  000B38  EC46  F007         	call	_Delay	;wreg free
  2125                           
  2126                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  2127  000B3C  0E28               	movlw	40
  2128  000B3E  ECAB  F005         	call	_EscreveComandoLCD
  2129                           
  2130                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  2131  000B42  0E06               	movlw	6
  2132  000B44  ECAB  F005         	call	_EscreveComandoLCD
  2133                           
  2134                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  2135  000B48  0E0E               	movlw	14
  2136  000B4A  ECAB  F005         	call	_EscreveComandoLCD
  2137                           
  2138                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  2139  000B4E  0E01               	movlw	1
  2140  000B50  ECAB  F005         	call	_EscreveComandoLCD
  2141  000B54  0012               	return		;funcret
  2142  000B56                     __end_of_ConfiguraLCD:
  2143                           	opt stack 0
  2144                           tblptru	equ	0xFF8
  2145                           tblptrh	equ	0xFF7
  2146                           tblptrl	equ	0xFF6
  2147                           tablat	equ	0xFF5
  2148                           postinc0	equ	0xFEE
  2149                           wreg	equ	0xFE8
  2150                           postdec1	equ	0xFE5
  2151                           plusw1	equ	0xFE3
  2152                           fsr1l	equ	0xFE1
  2153                           indf2	equ	0xFDF
  2154                           postinc2	equ	0xFDE
  2155                           plusw2	equ	0xFDB
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _EscreveComandoLCD *****************
  2161 ;; Defined at:
  2162 ;;		line 172 in file "displayLCD.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  cmd             1    wreg     unsigned char 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  cmd             1    2[COMRAM] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0
  2177 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2179 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2180 ;;Total ram usage:        1 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    1
  2183 ;; This function calls:
  2184 ;;		_Delay
  2185 ;; This function is called by:
  2186 ;;		_ConfiguraLCD
  2187 ;;		_main
  2188 ;;		_CriaCaractereLCD
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text12
  2193  000B56                     __ptext12:
  2194                           	opt stack 0
  2195  000B56                     _EscreveComandoLCD:
  2196                           	opt stack 29
  2197                           
  2198                           ;incstack = 0
  2199                           ;EscreveComandoLCD@cmd stored from wreg
  2200  000B56  6E03               	movwf	EscreveComandoLCD@cmd,c
  2201                           
  2202                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  2203  000B58  9483               	bcf	3971,2,c	;volatile
  2204                           
  2205                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  2206  000B5A  9283               	bcf	3971,1,c	;volatile
  2207                           
  2208                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  2209  000B5C  9083               	bcf	3971,0,c	;volatile
  2210                           
  2211                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  2212  000B5E  A803               	btfss	EscreveComandoLCD@cmd,4,c
  2213  000B60  D002               	goto	l29
  2214  000B62  8883               	bsf	3971,4,c	;volatile
  2215  000B64  D001               	goto	l1427
  2216  000B66                     l29:
  2217                           
  2218                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  2219  000B66  9883               	bcf	3971,4,c	;volatile
  2220  000B68                     l1427:
  2221                           
  2222                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  2223  000B68  AA03               	btfss	EscreveComandoLCD@cmd,5,c
  2224  000B6A  D002               	goto	l31
  2225  000B6C  8A83               	bsf	3971,5,c	;volatile
  2226  000B6E  D001               	goto	l1431
  2227  000B70                     l31:
  2228                           
  2229                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  2230  000B70  9A83               	bcf	3971,5,c	;volatile
  2231  000B72                     l1431:
  2232                           
  2233                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  2234  000B72  AC03               	btfss	EscreveComandoLCD@cmd,6,c
  2235  000B74  D002               	goto	l33
  2236  000B76  8C83               	bsf	3971,6,c	;volatile
  2237  000B78  D001               	goto	l1435
  2238  000B7A                     l33:
  2239                           
  2240                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  2241  000B7A  9C83               	bcf	3971,6,c	;volatile
  2242  000B7C                     l1435:
  2243                           
  2244                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  2245  000B7C  AE03               	btfss	EscreveComandoLCD@cmd,7,c
  2246  000B7E  D002               	goto	l35
  2247  000B80  8E83               	bsf	3971,7,c	;volatile
  2248  000B82  D001               	goto	l36
  2249  000B84                     l35:
  2250                           
  2251                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  2252  000B84  9E83               	bcf	3971,7,c	;volatile
  2253  000B86                     l36:
  2254                           
  2255                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  2256  000B86  8083               	bsf	3971,0,c	;volatile
  2257                           
  2258                           ;displayLCD.c: 191: Delay();
  2259  000B88  EC46  F007         	call	_Delay	;wreg free
  2260                           
  2261                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  2262  000B8C  9083               	bcf	3971,0,c	;volatile
  2263                           
  2264                           ;displayLCD.c: 193: Delay();
  2265  000B8E  EC46  F007         	call	_Delay	;wreg free
  2266                           
  2267                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  2268  000B92  A003               	btfss	EscreveComandoLCD@cmd,0,c
  2269  000B94  D002               	goto	l37
  2270  000B96  8883               	bsf	3971,4,c	;volatile
  2271  000B98  D001               	goto	l38
  2272  000B9A                     l37:
  2273                           
  2274                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  2275  000B9A  9883               	bcf	3971,4,c	;volatile
  2276  000B9C                     l38:
  2277                           
  2278                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  2279  000B9C  A203               	btfss	EscreveComandoLCD@cmd,1,c
  2280  000B9E  D002               	goto	l39
  2281  000BA0  8A83               	bsf	3971,5,c	;volatile
  2282  000BA2  D001               	goto	l40
  2283  000BA4                     l39:
  2284                           
  2285                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  2286  000BA4  9A83               	bcf	3971,5,c	;volatile
  2287  000BA6                     l40:
  2288                           
  2289                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  2290  000BA6  A403               	btfss	EscreveComandoLCD@cmd,2,c
  2291  000BA8  D002               	goto	l41
  2292  000BAA  8C83               	bsf	3971,6,c	;volatile
  2293  000BAC  D001               	goto	l42
  2294  000BAE                     l41:
  2295                           
  2296                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  2297  000BAE  9C83               	bcf	3971,6,c	;volatile
  2298  000BB0                     l42:
  2299                           
  2300                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  2301  000BB0  A603               	btfss	EscreveComandoLCD@cmd,3,c
  2302  000BB2  D002               	goto	l43
  2303  000BB4  8E83               	bsf	3971,7,c	;volatile
  2304  000BB6  D001               	goto	l44
  2305  000BB8                     l43:
  2306                           
  2307                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  2308  000BB8  9E83               	bcf	3971,7,c	;volatile
  2309  000BBA                     l44:
  2310                           
  2311                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  2312  000BBA  8083               	bsf	3971,0,c	;volatile
  2313                           
  2314                           ;displayLCD.c: 207: Delay();
  2315  000BBC  EC46  F007         	call	_Delay	;wreg free
  2316                           
  2317                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  2318  000BC0  9083               	bcf	3971,0,c	;volatile
  2319                           
  2320                           ;displayLCD.c: 209: Delay();
  2321  000BC2  EC46  F007         	call	_Delay	;wreg free
  2322                           
  2323                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  2324  000BC6  0403               	decf	EscreveComandoLCD@cmd,w,c
  2325  000BC8  B4D8               	btfsc	status,2,c
  2326  000BCA  D008               	goto	l1463
  2327  000BCC  0E02               	movlw	2
  2328  000BCE  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  2329  000BD0  B4D8               	btfsc	status,2,c
  2330  000BD2  D004               	goto	l1463
  2331  000BD4  0E03               	movlw	3
  2332  000BD6  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  2333  000BD8  A4D8               	btfss	status,2,c
  2334  000BDA  0012               	return	
  2335  000BDC                     l1463:
  2336                           
  2337                           ;displayLCD.c: 215: { Delay(); }
  2338  000BDC  EC46  F007         	call	_Delay	;wreg free
  2339  000BE0  0012               	return	
  2340  000BE2                     __end_of_EscreveComandoLCD:
  2341                           	opt stack 0
  2342                           tblptru	equ	0xFF8
  2343                           tblptrh	equ	0xFF7
  2344                           tblptrl	equ	0xFF6
  2345                           tablat	equ	0xFF5
  2346                           postinc0	equ	0xFEE
  2347                           wreg	equ	0xFE8
  2348                           postdec1	equ	0xFE5
  2349                           plusw1	equ	0xFE3
  2350                           fsr1l	equ	0xFE1
  2351                           indf2	equ	0xFDF
  2352                           postinc2	equ	0xFDE
  2353                           plusw2	equ	0xFDB
  2354                           fsr2h	equ	0xFDA
  2355                           fsr2l	equ	0xFD9
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _Delay *****************
  2359 ;; Defined at:
  2360 ;;		line 54 in file "displayLCD.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  Cnt2            1    1[COMRAM] unsigned char 
  2365 ;;  Cnt1            1    0[COMRAM] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0
  2376 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2378 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2379 ;;Total ram usage:        2 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_ConfiguraLCD
  2385 ;;		_EscreveComandoLCD
  2386 ;;		_EnderecoCursor
  2387 ;;		_EscreveCaractereLCD
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text13
  2392  000E8C                     __ptext13:
  2393                           	opt stack 0
  2394  000E8C                     _Delay:
  2395                           	opt stack 28
  2396                           
  2397                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  2398                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  2399                           
  2400                           ;incstack = 0
  2401  000E8C  0E00               	movlw	0
  2402  000E8E  6E01               	movwf	Delay@Cnt1,c
  2403  000E90                     l1299:
  2404  000E90  0E1D               	movlw	29
  2405  000E92  6401               	cpfsgt	Delay@Cnt1,c
  2406  000E94  D001               	goto	l19
  2407  000E96  0012               	return	
  2408  000E98                     l19:
  2409                           
  2410                           ;displayLCD.c: 59: {
  2411                           ;displayLCD.c: 60: __nop();
  2412  000E98  F000               	nop	
  2413                           
  2414                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  2415  000E9A  0E00               	movlw	0
  2416  000E9C  6E02               	movwf	Delay@Cnt2,c
  2417  000E9E                     l1305:
  2418  000E9E  0E1D               	movlw	29
  2419  000EA0  6402               	cpfsgt	Delay@Cnt2,c
  2420  000EA2  D001               	goto	l21
  2421  000EA4  D003               	goto	l1313
  2422  000EA6                     l21:
  2423                           
  2424                           ;displayLCD.c: 62: {
  2425                           ;displayLCD.c: 63: __nop();
  2426  000EA6  F000               	nop	
  2427  000EA8  2A02               	incf	Delay@Cnt2,f,c
  2428  000EAA  D7F9               	goto	l1305
  2429  000EAC                     l1313:
  2430  000EAC  2A01               	incf	Delay@Cnt1,f,c
  2431  000EAE  D7F0               	goto	l1299
  2432  000EB0                     __end_of_Delay:
  2433                           	opt stack 0
  2434                           tblptru	equ	0xFF8
  2435                           tblptrh	equ	0xFF7
  2436                           tblptrl	equ	0xFF6
  2437                           tablat	equ	0xFF5
  2438                           postinc0	equ	0xFEE
  2439                           wreg	equ	0xFE8
  2440                           postdec1	equ	0xFE5
  2441                           plusw1	equ	0xFE3
  2442                           fsr1l	equ	0xFE1
  2443                           indf2	equ	0xFDF
  2444                           postinc2	equ	0xFDE
  2445                           plusw2	equ	0xFDB
  2446                           fsr2h	equ	0xFDA
  2447                           fsr2l	equ	0xFD9
  2448                           status	equ	0xFD8
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           postinc0	equ	0xFEE
  2454                           wreg	equ	0xFE8
  2455                           postdec1	equ	0xFE5
  2456                           plusw1	equ	0xFE3
  2457                           fsr1l	equ	0xFE1
  2458                           indf2	equ	0xFDF
  2459                           postinc2	equ	0xFDE
  2460                           plusw2	equ	0xFDB
  2461                           fsr2h	equ	0xFDA
  2462                           fsr2l	equ	0xFD9
  2463                           status	equ	0xFD8
  2464                           
  2465                           	psect	rparam
  2466  0000                     tblptru	equ	0xFF8
  2467                           tblptrh	equ	0xFF7
  2468                           tblptrl	equ	0xFF6
  2469                           tablat	equ	0xFF5
  2470                           postinc0	equ	0xFEE
  2471                           wreg	equ	0xFE8
  2472                           postdec1	equ	0xFE5
  2473                           plusw1	equ	0xFE3
  2474                           fsr1l	equ	0xFE1
  2475                           indf2	equ	0xFDF
  2476                           postinc2	equ	0xFDE
  2477                           plusw2	equ	0xFDB
  2478                           fsr2h	equ	0xFDA
  2479                           fsr2l	equ	0xFD9
  2480                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    142
    Data        7
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      59
    BANK0           160    104     104
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@Texto_5(BANK0[17]), main@Texto_4(BANK0[17]), main@Texto_1(BANK0[17]), main@Texto_0(BANK0[17]), 
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_EscreveInteiroLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveInteiroLCD->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               106   106      0    5131
                                             33 COMRAM     2     2      0
                                              0 BANK0    104   104      0
                       _ConfiguraLCD
                  _EscreveComandoLCD
                 _EscreveFraseRamLCD
                  _EscreveInteiroLCD
                   _PosicaoCursorLCD
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2     150
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _PosicaoCursorLCD                                     3     2      1     836
                                              3 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (2) _EnderecoCursor                                       1     1      0     246
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _EscreveInteiroLCD                                    9     7      2    2454
                                             24 COMRAM     9     7      2
                 _EscreveFraseRamLCD
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1554
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1199
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EscreveFraseRamLCD                                   2     0      2     761
                                              3 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (3) _EscreveCaractereLCD                                  1     1      0     268
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     426
                                              3 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (1) _EscreveComandoLCD                                    1     1      0     334
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     2      0      92
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveComandoLCD
     _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _EscreveInteiroLCD
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      68       5       65.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      3B       1       62.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      20        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Oct 03 11:43:24 2020

                          l21 0EA6                            l31 0B70                            l40 0BA6  
                          l41 0BAE                            l33 0B7A                            l42 0BB0  
                          l19 0E98                            l43 0BB8                            l35 0B84  
                          l51 0C66                            l44 0BBA                            l36 0B86  
                          l60 0C9C                            l37 0B9A                            l29 0B66  
                          l61 0CA4                            l53 0C70                            l38 0B9C  
                          l62 0CA6                            l70 0CC8                            l39 0BA4  
                          l63 0CAE                            l55 0C7A                            l80 0BF2  
                          l64 0CB0                            l56 0C7C                            l57 0C90  
                          l90 0C30                            l82 0BFC                            l58 0C92  
                          l91 0C32                            l59 0C9A                            l92 0C3A  
                          l84 0C06                            l93 0C3C                            l94 0C44  
                          l86 0C10                            l95 0C46                            l87 0C12  
                          l88 0C26                            l89 0C28                           l177 09AA  
                         l666 0D68                           l587 0A94                           l676 0DEC  
                         u961 0E00                   main@Texto_0 0082                   main@Texto_1 00A4  
                 main@Texto_2 0060                   main@Texto_3 0071                   main@Texto_4 0093  
                 main@Texto_5 00B5                           wreg 000FE8                          l1313 0EAC  
                        l1305 0E9E                          l1323 0D36                          l1403 0A56  
                        l1325 0D3E                          l1431 0B72                          l1511 0E6A  
                        l1335 0D5E                          l1327 0D42                          l1351 0DE2  
                        l1343 0DC2                          l1361 0BF4                          l1345 0DCA  
                        l1505 0D96                          l1435 0B7C                          l1427 0B68  
                        l1515 0E7C                          l1347 0DCE                          l1603 0EB2  
                        l1365 0BFE                          l1605 0EC2                          l1463 0BDC  
                        l1471 0C68                          l1369 0C08                          l1393 0A1C  
                        l1299 0E90                          l1475 0C72                          l1583 0CF0  
                        l1575 0CD4                          l1591 0D04                          l1587 0CFE  
                        l1579 0CE2                          l1699 09A6                          STR_1 088F  
                        u1020 08AA                          u1030 08C2                          u1040 08DA  
                        u1050 08F2                          u1107 0ADA                          u1060 090A  
                        u1117 0AF6                          u1070 0922                          u1127 0B12  
                        u1097 0EB8                          _main 089C                          _itoa 0D72  
                        fsr2h 000FDA                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          _utoa 0A14                          start 0000  
                ___param_bank 000000    __end_of_EscreveFraseRamLCD 0E8C                         ?_main 0001  
                       ?_itoa 0011                         ?_utoa 0008               __end_of___lwdiv 0D72  
             __end_of___lwmod 0DF6                         _Delay 0E8C               __end_of_dpowers 0829  
                main@valorAN0 00C6          EscreveComandoLCD@cmd 0003                         tablat 000FF5  
                       plusw1 000FE3                         plusw2 000FDB                         utoa@c 0010  
                       utoa@v 000E                         status 000FD8               __initialization 0E32  
                __end_of_main 0A14                  __end_of_itoa 0DB4                  __end_of_utoa 0AB8  
                      ??_main 0022          __end_of_ConfiguraLCD 0B56                        ??_itoa 0017  
                      ??_utoa 000E                 __activetblptr 000002             _EscreveComandoLCD 0B56  
                      ?_Delay 0001            ?_EscreveComandoLCD 0001                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _ADRESH 000FC4  
                      _ADRESL 000FC3           ??_EscreveComandoLCD 0003              __end_of_delay_ms 0ED2  
           ?_PosicaoCursorLCD 0004                     ??___lwdiv 0005  __size_of_EscreveCaractereLCD 0072  
                   ??___lwmod 0005            ??_PosicaoCursorLCD 0005                        clear_0 0E58  
   __end_of_EscreveComandoLCD 0BE2                        itoa@cp 0017             _EscreveInteiroLCD 0DF6  
                __pdataCOMRAM 0035                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8            ?_EscreveInteiroLCD 0019  
     __size_of_EnderecoCursor 006A           ??_EscreveInteiroLCD 001B                    __accesstop 0060  
     __end_of__initialization 0E5E                 ___rparam_used 000001                 __end_of_Delay 0EB0  
              __pcstackCOMRAM 0001     __end_of_EscreveInteiroLCD 0E32                       ??_Delay 0001  
       __size_of_ConfiguraLCD 009E    __size_of_EscreveComandoLCD 008C            _EscreveFraseRamLCD 0E68  
                   ?_delay_ms 0001           ?_EscreveFraseRamLCD 0004                  _ConfiguraLCD 0AB8  
                     __Hparam 0000                       __Lparam 0000                       ___lwdiv 0D20  
                     ___lwmod 0DB4          ??_EscreveFraseRamLCD 0006                  __psmallconst 0800  
                     __pcinit 0E32                       __ramtop 0800    __size_of_EscreveInteiroLCD 003C  
                     __ptext0 089C                       __ptext1 0EB0                       __ptext2 0CBE  
                     __ptext3 0C54                       __ptext4 0DF6                       __ptext5 0D72  
                     __ptext6 0A14                       __ptext7 0DB4                       __ptext8 0D20  
                     __ptext9 0E68                       _dpowers 0801                    ??_delay_ms 0003  
              _EnderecoCursor 0C54                     Delay@Cnt1 0001                     Delay@Cnt2 0002  
         _EscreveCaractereLCD 0BE2          end_of_initialization 0E5E                       ftoa@buf 0024  
                     itoa@buf 0011                       itoa@val 0013                 __Lmediumconst 0000  
           __end_ofmain@F4001 085C             __end_ofmain@F4003 084B             __end_ofmain@F4005 083A  
           __end_ofmain@F3995 088F             __end_ofmain@F3997 087E             __end_ofmain@F3999 086D  
                     postdec1 000FE5                       postinc0 000FEE                       postinc2 000FDE  
        ?_EscreveCaractereLCD 0001                       utoa@buf 0008                       utoa@val 000A  
 PosicaoCursorLCD@EnderecoLCD 0006                     _PORTDbits 000F83        __end_of_EnderecoCursor 0CBE  
                   _TRISDbits 000F95     __size_of_PosicaoCursorLCD 0062         ??_EscreveCaractereLCD 0003  
               __pidataCOMRAM 0ED2               ?_EnderecoCursor 0001           start_initialization 0E32  
    EscreveFraseRamLCD@buffer 0004                   __pbssCOMRAM 0024                 __pcstackBANK0 0060  
           __size_of_delay_ms 0022              ___lwdiv@dividend 0001                      ?___lwdiv 0001  
                    ?___lwmod 0001        EscreveInteiroLCD@F4004 0035                   __smallconst 0800  
              __size_of_Delay 0024              _PosicaoCursorLCD 0CBE              ___lwdiv@quotient 0005  
      EscreveInteiroLCD@valor 0019        EscreveInteiroLCD@texto 001B        EnderecoCursor@endereco 0003  
     EscreveCaractereLCD@data 0003                     main@F4001 084B                     main@F4003 083A  
                   main@F4005 0829                     main@F3995 087E                     main@F3997 086D  
                   main@F3999 085C   __size_of_EscreveFraseRamLCD 0024                    _ADCON0bits 000FC2  
                   copy_data0 0E46         delay_ms@tempodeatraso 0001                      __Hrparam 0000  
                    __Lrparam 0000              ??_EnderecoCursor 0003              __size_of___lwdiv 0052  
            __size_of___lwmod 0042                      _delay_ms 0EB0               ___lwdiv@divisor 0003  
             ___lwdiv@counter 0007                      __ptext10 0BE2                      __ptext11 0AB8  
                    __ptext12 0B56                      __ptext13 0E8C                 __size_of_main 0178  
               __size_of_itoa 0042                 __size_of_utoa 00A4   __end_of_EscreveCaractereLCD 0C54  
                    itoa@base 0015              ___lwmod@dividend 0001                 ?_ConfiguraLCD 0001  
    __end_of_PosicaoCursorLCD 0D20        PosicaoCursorLCD@coluna 0004                      utoa@base 000C  
             ___lwmod@divisor 0003               ___lwmod@counter 0005         PosicaoCursorLCD@linha 0005  
              ??_ConfiguraLCD 0004  
