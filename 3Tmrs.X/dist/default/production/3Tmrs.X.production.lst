

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Nov 05 15:57:34 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 1.41
    31                           ; Generated 25/01/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  000FD2                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for EscreveInteiroLCD@F4004
    70  000FD2  30                 	db	48
    71  000FD3  30                 	db	48
    72  000FD4  30                 	db	48
    73  000FD5  30                 	db	48
    74  000FD6  30                 	db	48
    75  000FD7  30                 	db	48
    76  000FD8  00                 	db	0
    77                           
    78                           	psect	smallconst
    79  000800                     __psmallconst:
    80                           	opt stack 0
    81  000800  00                 	db	0
    82  000801  0001               	dw	1
    83  000803  0000               	dw	0
    84  000805  000A               	dw	10
    85  000807  0000               	dw	0
    86  000809  0064               	dw	100
    87  00080B  0000               	dw	0
    88  00080D  03E8               	dw	1000
    89  00080F  0000               	dw	0
    90  000811  2710               	dw	10000
    91  000813  0000               	dw	0
    92  000815  86A0               	dw	34464
    93  000817  0001               	dw	1
    94  000819  4240               	dw	16960
    95  00081B  000F               	dw	15
    96  00081D  9680               	dw	38528
    97  00081F  0098               	dw	152
    98  000821  E100               	dw	57600
    99  000823  05F5               	dw	1525
   100  000825  CA00               	dw	51712
   101  000827  3B9A               	dw	15258
   102  000829                     __end_of_dpowers:
   103                           	opt stack 0
   104  000829                     main@F3943:
   105                           	opt stack 0
   106  000829  20                 	db	32
   107  00082A  20                 	db	32
   108  00082B  20                 	db	32
   109  00082C  20                 	db	32
   110  00082D  20                 	db	32
   111  00082E  20                 	db	32
   112  00082F  20                 	db	32
   113  000830  20                 	db	32
   114  000831  20                 	db	32
   115  000832  20                 	db	32
   116  000833  20                 	db	32
   117  000834  20                 	db	32
   118  000835  20                 	db	32
   119  000836  20                 	db	32
   120  000837  20                 	db	32
   121  000838  20                 	db	32
   122  000839  00                 	db	0
   123  00083A                     __end_ofmain@F3943:
   124                           	opt stack 0
   125  00083A                     main@F3941:
   126                           	opt stack 0
   127  00083A  2D                 	db	45
   128  00083B  2D                 	db	45
   129  00083C  2D                 	db	45
   130  00083D  20                 	db	32
   131  00083E  30                 	db	48
   132  00083F  30                 	db	48
   133  000840  3A                 	db	58
   134  000841  30                 	db	48
   135  000842  30                 	db	48
   136  000843  3A                 	db	58
   137  000844  30                 	db	48
   138  000845  30                 	db	48
   139  000846  20                 	db	32
   140  000847  2D                 	db	45
   141  000848  2D                 	db	45
   142  000849  2D                 	db	45
   143  00084A  00                 	db	0
   144  00084B                     __end_ofmain@F3941:
   145                           	opt stack 0
   146  00084B                     main@F3939:
   147                           	opt stack 0
   148  00084B  52                 	db	82
   149  00084C  45                 	db	69
   150  00084D  4C                 	db	76
   151  00084E  4F                 	db	79
   152  00084F  47                 	db	71
   153  000850  49                 	db	73
   154  000851  4F                 	db	79
   155  000852  20                 	db	32
   156  000853  33                 	db	51
   157  000854  20                 	db	32
   158  000855  54                 	db	84
   159  000856  49                 	db	73
   160  000857  4D                 	db	77
   161  000858  45                 	db	69
   162  000859  52                 	db	82
   163  00085A  53                 	db	83
   164  00085B  00                 	db	0
   165  00085C                     __end_ofmain@F3939:
   166                           	opt stack 0
   167  00085C                     main@F3937:
   168                           	opt stack 0
   169  00085C  46                 	db	70
   170  00085D  41                 	db	65
   171  00085E  54                 	db	84
   172  00085F  45                 	db	69
   173  000860  43                 	db	67
   174  000861  20                 	db	32
   175  000862  53                 	db	83
   176  000863  54                 	db	84
   177  000864  4F                 	db	79
   178  000865  2E                 	db	46
   179  000866  20                 	db	32
   180  000867  41                 	db	65
   181  000868  4E                 	db	78
   182  000869  44                 	db	68
   183  00086A  52                 	db	82
   184  00086B  45                 	db	69
   185  00086C  00                 	db	0
   186  00086D                     __end_ofmain@F3937:
   187                           	opt stack 0
   188  0000                     _TMR3	set	4018
   189  0000                     _TMR1	set	4046
   190  0000                     _TMR0	set	4054
   191  0000                     _PORTBbits	set	3969
   192  0000                     _PORTB	set	3969
   193  0000                     _TRISB	set	3987
   194  0000                     _ADCON1	set	4033
   195  0000                     _T3CON	set	4017
   196  0000                     _T1CON	set	4045
   197  0000                     _T0CON	set	4053
   198  0000                     _PORTDbits	set	3971
   199  0000                     _TRISDbits	set	3989
   200  0000                     _TMR3IF	set	32009
   201  0000                     _TMR1IF	set	31984
   202  0000                     _TMR0IF	set	32658
   203  00086D  25                 	db	37
   204  00086E  6C                 	db	108	;'l'
   205  00086F  75                 	db	117	;'u'
   206  000870  2E                 	db	46
   207  000871  25                 	db	37
   208  000872  36                 	db	54	;'6'
   209  000873  2E                 	db	46
   210  000874  36                 	db	54	;'6'
   211  000875  6C                 	db	108	;'l'
   212  000876  75                 	db	117	;'u'
   213  000877  00                 	db	0
   214  000878  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219  000F32                     __pcinit:
   220                           	opt stack 0
   221  000F32                     start_initialization:
   222                           	opt stack 0
   223  000F32                     __initialization:
   224                           	opt stack 0
   225                           
   226                           ; Initialize objects allocated to COMRAM (7 bytes)
   227                           ; load TBLPTR registers with __pidataCOMRAM
   228  000F32  0ED2               	movlw	low __pidataCOMRAM
   229  000F34  6EF6               	movwf	tblptrl,c
   230  000F36  0E0F               	movlw	high __pidataCOMRAM
   231  000F38  6EF7               	movwf	tblptrh,c
   232  000F3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   233  000F3C  6EF8               	movwf	tblptru,c
   234  000F3E  EE00  F036         	lfsr	0,__pdataCOMRAM
   235  000F42  EE10 F007          	lfsr	1,7
   236  000F46                     copy_data0:
   237  000F46  0009               	tblrd		*+
   238  000F48  CFF5 FFEE          	movff	tablat,postinc0
   239  000F4C  50E5               	movf	postdec1,w,c
   240  000F4E  50E1               	movf	fsr1l,w,c
   241  000F50  E1FA               	bnz	copy_data0
   242                           
   243                           ; Clear objects allocated to COMRAM (17 bytes)
   244  000F52  EE00  F025         	lfsr	0,__pbssCOMRAM
   245  000F56  0E11               	movlw	17
   246  000F58                     clear_0:
   247  000F58  6AEE               	clrf	postinc0,c
   248  000F5A  06E8               	decf	wreg,f,c
   249  000F5C  E1FD               	bnz	clear_0
   250  000F5E                     end_of_initialization:
   251                           	opt stack 0
   252  000F5E                     __end_of__initialization:
   253                           	opt stack 0
   254  000F5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255  000F60  6EF8               	movwf	tblptru,c
   256  000F62  0100               	movlb	0
   257  000F64  EF3D  F004         	goto	_main	;jump to C main() function
   258                           tblptru	equ	0xFF8
   259                           tblptrh	equ	0xFF7
   260                           tblptrl	equ	0xFF6
   261                           tablat	equ	0xFF5
   262                           postinc0	equ	0xFEE
   263                           wreg	equ	0xFE8
   264                           postdec1	equ	0xFE5
   265                           fsr1l	equ	0xFE1
   266                           
   267                           	psect	bssCOMRAM
   268  000025                     __pbssCOMRAM:
   269                           	opt stack 0
   270  000025                     ftoa@buf:
   271                           	opt stack 0
   272  000025                     	ds	17
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	dataCOMRAM
   283  000036                     __pdataCOMRAM:
   284                           	opt stack 0
   285  000036                     EscreveInteiroLCD@F4004:
   286                           	opt stack 0
   287  000036                     	ds	7
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           postdec1	equ	0xFE5
   295                           fsr1l	equ	0xFE1
   296                           
   297                           	psect	cstackBANK0
   298  000060                     __pcstackBANK0:
   299                           	opt stack 0
   300  000060                     main@Texto_3:
   301                           	opt stack 0
   302                           
   303                           ; 17 bytes @ 0x0
   304  000060                     	ds	17
   305  000071                     main@Texto_0:
   306                           	opt stack 0
   307                           
   308                           ; 17 bytes @ 0x11
   309  000071                     	ds	17
   310  000082                     main@Texto_2:
   311                           	opt stack 0
   312                           
   313                           ; 17 bytes @ 0x22
   314  000082                     	ds	17
   315  000093                     main@Texto_1:
   316                           	opt stack 0
   317                           
   318                           ; 17 bytes @ 0x33
   319  000093                     	ds	17
   320  0000A4                     main@milisegundos:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x44
   324  0000A4                     	ds	2
   325  0000A6                     main@segundos:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x46
   329  0000A6                     	ds	1
   330  0000A7                     main@minutos:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x47
   334  0000A7                     	ds	1
   335  0000A8                     main@horas:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x48
   339  0000A8                     	ds	1
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           postdec1	equ	0xFE5
   347                           fsr1l	equ	0xFE1
   348                           
   349                           	psect	cstackCOMRAM
   350  000001                     __pcstackCOMRAM:
   351                           	opt stack 0
   352  000001                     ?___lwdiv:
   353                           	opt stack 0
   354  000001                     ?___lwmod:
   355                           	opt stack 0
   356  000001                     Delay@Cnt1:
   357                           	opt stack 0
   358  000001                     delay_ms@tempodeatraso:
   359                           	opt stack 0
   360  000001                     ___lwdiv@dividend:
   361                           	opt stack 0
   362  000001                     ___lwmod@dividend:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x0
   366  000001                     	ds	1
   367  000002                     Delay@Cnt2:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x1
   371  000002                     	ds	1
   372  000003                     ??_delay_ms:
   373  000003                     EscreveComandoLCD@cmd:
   374                           	opt stack 0
   375  000003                     EnderecoCursor@endereco:
   376                           	opt stack 0
   377  000003                     EscreveCaractereLCD@data:
   378                           	opt stack 0
   379  000003                     ___lwdiv@divisor:
   380                           	opt stack 0
   381  000003                     ___lwmod@divisor:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x2
   385  000003                     	ds	1
   386  000004                     ??_ConfiguraLCD:
   387  000004                     PosicaoCursorLCD@coluna:
   388                           	opt stack 0
   389  000004                     EscreveFraseRamLCD@buffer:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x3
   393  000004                     	ds	1
   394  000005                     PosicaoCursorLCD@linha:
   395                           	opt stack 0
   396  000005                     ___lwmod@counter:
   397                           	opt stack 0
   398  000005                     ___lwdiv@quotient:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x4
   402  000005                     	ds	1
   403  000006                     PosicaoCursorLCD@EnderecoLCD:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x5
   407  000006                     	ds	1
   408  000007                     ___lwdiv@counter:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x6
   412  000007                     	ds	1
   413  000008                     utoa@buf:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x7
   417  000008                     	ds	2
   418  00000A                     utoa@val:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x9
   422  00000A                     	ds	2
   423  00000C                     utoa@base:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0xB
   427  00000C                     	ds	2
   428  00000E                     utoa@v:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0xD
   432  00000E                     	ds	2
   433  000010                     utoa@c:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0xF
   437  000010                     	ds	1
   438  000011                     itoa@buf:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x10
   442  000011                     	ds	2
   443  000013                     itoa@val:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x12
   447  000013                     	ds	2
   448  000015                     itoa@base:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x14
   452  000015                     	ds	2
   453  000017                     itoa@cp:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x16
   457  000017                     	ds	2
   458  000019                     EscreveInteiroLCD@valor:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x18
   462  000019                     	ds	2
   463  00001B                     EscreveInteiroLCD@texto:
   464                           	opt stack 0
   465                           
   466                           ; 7 bytes @ 0x1A
   467  00001B                     	ds	7
   468  000022                     pos_numero@casa:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x21
   472  000022                     	ds	1
   473  000023                     pos_numero@valor:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x22
   477  000023                     	ds	1
   478  000024                     ??_main:
   479                           
   480                           ; 1 bytes @ 0x23
   481  000024                     	ds	1
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 44 in file "relogio-3t.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  Texto_1        17   51[BANK0 ] const unsigned char [17]
   501 ;;  Texto_2        17   34[BANK0 ] const unsigned char [17]
   502 ;;  Texto_0        17   17[BANK0 ] const unsigned char [17]
   503 ;;  Texto_3        17    0[BANK0 ] const unsigned char [17]
   504 ;;  milisegundos    2   68[BANK0 ] unsigned int 
   505 ;;  contador        2    0        unsigned int 
   506 ;;  horas           1   72[BANK0 ] unsigned char 
   507 ;;  minutos         1   71[BANK0 ] unsigned char 
   508 ;;  segundos        1   70[BANK0 ] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   518 ;;      Params:         0       0       0       0       0       0       0       0       0
   519 ;;      Locals:         0      73       0       0       0       0       0       0       0
   520 ;;      Temps:          1       0       0       0       0       0       0       0       0
   521 ;;      Totals:         1      73       0       0       0       0       0       0       0
   522 ;;Total ram usage:       74 bytes
   523 ;; Hardware stack levels required when called:    5
   524 ;; This function calls:
   525 ;;		_ConfiguraLCD
   526 ;;		_EscreveComandoLCD
   527 ;;		_EscreveFraseRamLCD
   528 ;;		_EscreveInteiroLCD
   529 ;;		_PosicaoCursorLCD
   530 ;;		_delay_ms
   531 ;;		_pos_numero
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text0
   538  00087A                     __ptext0:
   539                           	opt stack 0
   540  00087A                     _main:
   541                           	opt stack 26
   542                           
   543                           ;relogio-3t.c: 46: const unsigned char Texto_0[]="FATEC STO. ANDRE";
   544                           
   545                           ;incstack = 0
   546  00087A  0E5C               	movlw	low main@F3937
   547  00087C  6EF6               	movwf	tblptrl,c
   548  00087E                     	if	1	;There is more than 1 active tblptr byte
   549  00087E  0E08               	movlw	high main@F3937
   550  000880  6EF7               	movwf	tblptrh,c
   551  000882                     	endif
   552  000882                     	if	0	;There are less than 3 active tblptr bytes
   553  000882                     	endif
   554  000882  EE20  F071         	lfsr	2,main@Texto_0
   555  000886  0E10               	movlw	16
   556  000888                     u1160:
   557  000888  0009               	tblrd		*+
   558  00088A  CFF5 FFDE          	movff	tablat,postinc2
   559  00088E  06E8               	decf	wreg,f,c
   560  000890  E2FB               	bc	u1160
   561                           
   562                           ;relogio-3t.c: 47: const unsigned char Texto_1[]="RELOGIO 3 TIMERS";
   563  000892  0E4B               	movlw	low main@F3939
   564  000894  6EF6               	movwf	tblptrl,c
   565  000896                     	if	1	;There is more than 1 active tblptr byte
   566  000896  0E08               	movlw	high main@F3939
   567  000898  6EF7               	movwf	tblptrh,c
   568  00089A                     	endif
   569  00089A                     	if	0	;There are less than 3 active tblptr bytes
   570  00089A                     	endif
   571  00089A  EE20  F093         	lfsr	2,main@Texto_1
   572  00089E  0E10               	movlw	16
   573  0008A0                     u1170:
   574  0008A0  0009               	tblrd		*+
   575  0008A2  CFF5 FFDE          	movff	tablat,postinc2
   576  0008A6  06E8               	decf	wreg,f,c
   577  0008A8  E2FB               	bc	u1170
   578                           
   579                           ;relogio-3t.c: 48: const unsigned char Texto_2[]="--- 00:00:00 ---";
   580  0008AA  0E3A               	movlw	low main@F3941
   581  0008AC  6EF6               	movwf	tblptrl,c
   582  0008AE                     	if	1	;There is more than 1 active tblptr byte
   583  0008AE  0E08               	movlw	high main@F3941
   584  0008B0  6EF7               	movwf	tblptrh,c
   585  0008B2                     	endif
   586  0008B2                     	if	0	;There are less than 3 active tblptr bytes
   587  0008B2                     	endif
   588  0008B2  EE20  F082         	lfsr	2,main@Texto_2
   589  0008B6  0E10               	movlw	16
   590  0008B8                     u1180:
   591  0008B8  0009               	tblrd		*+
   592  0008BA  CFF5 FFDE          	movff	tablat,postinc2
   593  0008BE  06E8               	decf	wreg,f,c
   594  0008C0  E2FB               	bc	u1180
   595                           
   596                           ;relogio-3t.c: 49: const unsigned char Texto_3[]="                ";
   597  0008C2  0E29               	movlw	low main@F3943
   598  0008C4  6EF6               	movwf	tblptrl,c
   599  0008C6                     	if	1	;There is more than 1 active tblptr byte
   600  0008C6  0E08               	movlw	high main@F3943
   601  0008C8  6EF7               	movwf	tblptrh,c
   602  0008CA                     	endif
   603  0008CA                     	if	0	;There are less than 3 active tblptr bytes
   604  0008CA                     	endif
   605  0008CA  EE20  F060         	lfsr	2,main@Texto_3
   606  0008CE  0E10               	movlw	16
   607  0008D0                     u1190:
   608  0008D0  0009               	tblrd		*+
   609  0008D2  CFF5 FFDE          	movff	tablat,postinc2
   610  0008D6  06E8               	decf	wreg,f,c
   611  0008D8  E2FB               	bc	u1190
   612                           
   613                           ;relogio-3t.c: 52: T0CON = 0b10000011;
   614  0008DA  0E83               	movlw	131
   615  0008DC  6ED5               	movwf	4053,c	;volatile
   616                           
   617                           ;relogio-3t.c: 62: TMR0 = 0x6D84;
   618  0008DE  0E6D               	movlw	109
   619  0008E0  6ED7               	movwf	4055,c	;volatile
   620  0008E2  0E84               	movlw	132
   621  0008E4  6ED6               	movwf	4054,c	;volatile
   622                           
   623                           ;relogio-3t.c: 67: T1CON = 0b10000111;
   624  0008E6  0E87               	movlw	135
   625  0008E8  6ECD               	movwf	4045,c	;volatile
   626                           
   627                           ;relogio-3t.c: 78: TMR1 = 0xFFF6;
   628  0008EA  0EFF               	movlw	255
   629  0008EC  6ECF               	movwf	4047,c	;volatile
   630  0008EE  0EF6               	movlw	246
   631  0008F0  6ECE               	movwf	4046,c	;volatile
   632                           
   633                           ;relogio-3t.c: 83: T3CON = 0b00000111;
   634  0008F2  0E07               	movlw	7
   635  0008F4  6EB1               	movwf	4017,c	;volatile
   636                           
   637                           ;relogio-3t.c: 84: TMR3 = 0xFDA8;
   638  0008F6  0EFD               	movlw	253
   639  0008F8  6EB3               	movwf	4019,c	;volatile
   640  0008FA  0EA8               	movlw	168
   641  0008FC  6EB2               	movwf	4018,c	;volatile
   642                           
   643                           ;relogio-3t.c: 87: ADCON1 = 0X0F;
   644  0008FE  0E0F               	movlw	15
   645  000900  6EC1               	movwf	4033,c	;volatile
   646                           
   647                           ;relogio-3t.c: 89: TRISB = 0X00;
   648  000902  0E00               	movlw	0
   649  000904  6E93               	movwf	3987,c	;volatile
   650                           
   651                           ;relogio-3t.c: 90: PORTB = 0b11111111;
   652  000906  6881               	setf	3969,c	;volatile
   653                           
   654                           ;relogio-3t.c: 92: unsigned int milisegundos = 0;
   655  000908  0E00               	movlw	0
   656  00090A  0100               	movlb	0	; () banked
   657  00090C  6FA5               	movwf	(main@milisegundos+1)& (0+255),b
   658  00090E  0E00               	movlw	0
   659  000910  6FA4               	movwf	main@milisegundos& (0+255),b
   660                           
   661                           ; BSR set to: 0
   662                           ;relogio-3t.c: 93: unsigned char segundos = 0;
   663  000912  0E00               	movlw	0
   664  000914  0100               	movlb	0	; () banked
   665  000916  6FA6               	movwf	main@segundos& (0+255),b
   666                           
   667                           ; BSR set to: 0
   668                           ;relogio-3t.c: 94: unsigned char minutos = 0;
   669  000918  0E00               	movlw	0
   670  00091A  0100               	movlb	0	; () banked
   671  00091C  6FA7               	movwf	main@minutos& (0+255),b
   672                           
   673                           ; BSR set to: 0
   674                           ;relogio-3t.c: 95: unsigned char horas = 0;
   675  00091E  0E00               	movlw	0
   676  000920  0100               	movlb	0	; () banked
   677  000922  6FA8               	movwf	main@horas& (0+255),b
   678                           
   679                           ; BSR set to: 0
   680                           ;relogio-3t.c: 96: unsigned int contador;
   681                           ;relogio-3t.c: 99: ConfiguraLCD();
   682  000924  EC93  F005         	call	_ConfiguraLCD	;wreg free
   683                           
   684                           ;relogio-3t.c: 100: EscreveComandoLCD(0b00001100);
   685  000928  0E0C               	movlw	12
   686  00092A  EC2B  F006         	call	_EscreveComandoLCD
   687                           
   688                           ;relogio-3t.c: 101: EscreveFraseRamLCD(Texto_0);
   689  00092E  0E71               	movlw	low main@Texto_0
   690  000930  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   691  000932  0E00               	movlw	high main@Texto_0
   692  000934  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   693  000936  ECB4  F007         	call	_EscreveFraseRamLCD	;wreg free
   694                           
   695                           ;relogio-3t.c: 102: PosicaoCursorLCD(2,1);
   696  00093A  0E01               	movlw	1
   697  00093C  6E04               	movwf	PosicaoCursorLCD@coluna,c
   698  00093E  0E02               	movlw	2
   699  000940  ECDF  F006         	call	_PosicaoCursorLCD
   700                           
   701                           ;relogio-3t.c: 103: EscreveFraseRamLCD(Texto_1);
   702  000944  0E93               	movlw	low main@Texto_1
   703  000946  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   704  000948  0E00               	movlw	high main@Texto_1
   705  00094A  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   706  00094C  ECB4  F007         	call	_EscreveFraseRamLCD	;wreg free
   707                           
   708                           ;relogio-3t.c: 105: delay_ms(2000);
   709  000950  0E07               	movlw	7
   710  000952  6E02               	movwf	delay_ms@tempodeatraso+1,c
   711  000954  0ED0               	movlw	208
   712  000956  6E01               	movwf	delay_ms@tempodeatraso,c
   713  000958  ECD8  F007         	call	_delay_ms	;wreg free
   714                           
   715                           ;relogio-3t.c: 107: PosicaoCursorLCD(1,1);
   716  00095C  0E01               	movlw	1
   717  00095E  6E04               	movwf	PosicaoCursorLCD@coluna,c
   718  000960  0E01               	movlw	1
   719  000962  ECDF  F006         	call	_PosicaoCursorLCD
   720                           
   721                           ;relogio-3t.c: 108: EscreveFraseRamLCD(Texto_1);
   722  000966  0E93               	movlw	low main@Texto_1
   723  000968  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   724  00096A  0E00               	movlw	high main@Texto_1
   725  00096C  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   726  00096E  ECB4  F007         	call	_EscreveFraseRamLCD	;wreg free
   727                           
   728                           ;relogio-3t.c: 109: PosicaoCursorLCD(2,1);
   729  000972  0E01               	movlw	1
   730  000974  6E04               	movwf	PosicaoCursorLCD@coluna,c
   731  000976  0E02               	movlw	2
   732  000978  ECDF  F006         	call	_PosicaoCursorLCD
   733                           
   734                           ;relogio-3t.c: 110: EscreveFraseRamLCD(Texto_2);
   735  00097C  0E82               	movlw	low main@Texto_2
   736  00097E  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   737  000980  0E00               	movlw	high main@Texto_2
   738  000982  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   739  000984  ECB4  F007         	call	_EscreveFraseRamLCD	;wreg free
   740  000988                     l1857:
   741                           
   742                           ;relogio-3t.c: 115: {
   743                           ;relogio-3t.c: 117: if(TMR0IF == 1)
   744  000988  A4F2               	btfss	intcon,2,c	;volatile
   745  00098A  D012               	goto	l1865
   746                           
   747                           ;relogio-3t.c: 118: {
   748                           ;relogio-3t.c: 119: PORTBbits.RB7 = !PORTBbits.RB7;
   749  00098C  BE81               	btfsc	3969,7,c	;volatile
   750  00098E  D003               	goto	u1210
   751  000990  6A24               	clrf	??_main& (0+255),c
   752  000992  2A24               	incf	??_main& (0+255),f,c
   753  000994  D001               	goto	u1228
   754  000996                     u1210:
   755  000996  6A24               	clrf	??_main& (0+255),c
   756  000998                     u1228:
   757  000998  3224               	rrcf	??_main,f,c
   758  00099A  3224               	rrcf	??_main,f,c
   759  00099C  5081               	movf	3969,w,c	;volatile
   760  00099E  1824               	xorwf	??_main,w,c
   761  0009A0  0B7F               	andlw	-129
   762  0009A2  1824               	xorwf	??_main,w,c
   763  0009A4  6E81               	movwf	3969,c	;volatile
   764                           
   765                           ;relogio-3t.c: 120: TMR0 = 0x6D84;
   766  0009A6  0E6D               	movlw	109
   767  0009A8  6ED7               	movwf	4055,c	;volatile
   768  0009AA  0E84               	movlw	132
   769  0009AC  6ED6               	movwf	4054,c	;volatile
   770                           
   771                           ;relogio-3t.c: 123: TMR0IF = 0;
   772  0009AE  94F2               	bcf	intcon,2,c	;volatile
   773  0009B0                     l1865:
   774                           
   775                           ;relogio-3t.c: 124: }
   776                           ;relogio-3t.c: 125: if(TMR1IF == 1)
   777  0009B0  A09E               	btfss	3998,0,c	;volatile
   778  0009B2  D01B               	goto	l1877
   779                           
   780                           ;relogio-3t.c: 126: {
   781                           ;relogio-3t.c: 127: PORTBbits.RB6 = !PORTBbits.RB6;
   782  0009B4  BC81               	btfsc	3969,6,c	;volatile
   783  0009B6  D003               	goto	u1240
   784  0009B8  6A24               	clrf	??_main& (0+255),c
   785  0009BA  2A24               	incf	??_main& (0+255),f,c
   786  0009BC  D001               	goto	u1258
   787  0009BE                     u1240:
   788  0009BE  6A24               	clrf	??_main& (0+255),c
   789  0009C0                     u1258:
   790  0009C0  3A24               	swapf	??_main,f,c
   791  0009C2  4624               	rlncf	??_main,f,c
   792  0009C4  4624               	rlncf	??_main,f,c
   793  0009C6  5081               	movf	3969,w,c	;volatile
   794  0009C8  1824               	xorwf	??_main,w,c
   795  0009CA  0BBF               	andlw	-65
   796  0009CC  1824               	xorwf	??_main,w,c
   797  0009CE  6E81               	movwf	3969,c	;volatile
   798                           
   799                           ;relogio-3t.c: 128: TMR1 = 0xFFF6;
   800  0009D0  0EFF               	movlw	255
   801  0009D2  6ECF               	movwf	4047,c	;volatile
   802  0009D4  0EF6               	movlw	246
   803  0009D6  6ECE               	movwf	4046,c	;volatile
   804                           
   805                           ;relogio-3t.c: 131: TMR1IF = 0;
   806  0009D8  909E               	bcf	3998,0,c	;volatile
   807                           
   808                           ;relogio-3t.c: 132: segundos++;
   809  0009DA  0100               	movlb	0	; () banked
   810  0009DC  2BA6               	incf	main@segundos& (0+255),f,b
   811                           
   812                           ; BSR set to: 0
   813                           ;relogio-3t.c: 136: pos_numero(segundos, 3);
   814  0009DE  0E03               	movlw	3
   815  0009E0  6E22               	movwf	pos_numero@casa,c
   816  0009E2  0100               	movlb	0	; () banked
   817  0009E4  51A6               	movf	main@segundos& (0+255),w,b
   818  0009E6  ECE2  F005         	call	_pos_numero
   819  0009EA                     l1877:
   820                           
   821                           ;relogio-3t.c: 139: }
   822                           ;relogio-3t.c: 140: if(TMR3IF == 1)
   823  0009EA  A2A1               	btfss	4001,1,c	;volatile
   824  0009EC  D028               	goto	l1895
   825                           
   826                           ;relogio-3t.c: 141: {
   827                           ;relogio-3t.c: 142: PORTBbits.RB5 = !PORTBbits.RB5;
   828  0009EE  BA81               	btfsc	3969,5,c	;volatile
   829  0009F0  D003               	goto	u1270
   830  0009F2  6A24               	clrf	??_main& (0+255),c
   831  0009F4  2A24               	incf	??_main& (0+255),f,c
   832  0009F6  D001               	goto	u1288
   833  0009F8                     u1270:
   834  0009F8  6A24               	clrf	??_main& (0+255),c
   835  0009FA                     u1288:
   836  0009FA  3A24               	swapf	??_main,f,c
   837  0009FC  4624               	rlncf	??_main,f,c
   838  0009FE  5081               	movf	3969,w,c	;volatile
   839  000A00  1824               	xorwf	??_main,w,c
   840  000A02  0BDF               	andlw	-33
   841  000A04  1824               	xorwf	??_main,w,c
   842  000A06  6E81               	movwf	3969,c	;volatile
   843                           
   844                           ;relogio-3t.c: 143: TMR3 = 0xFDA8;
   845  000A08  0EFD               	movlw	253
   846  000A0A  6EB3               	movwf	4019,c	;volatile
   847  000A0C  0EA8               	movlw	168
   848  000A0E  6EB2               	movwf	4018,c	;volatile
   849                           
   850                           ;relogio-3t.c: 144: TMR3IF = 0;
   851  000A10  92A1               	bcf	4001,1,c	;volatile
   852                           
   853                           ;relogio-3t.c: 145: minutos++;
   854  000A12  0100               	movlb	0	; () banked
   855  000A14  2BA7               	incf	main@minutos& (0+255),f,b
   856                           
   857                           ; BSR set to: 0
   858                           ;relogio-3t.c: 147: segundos = 0;
   859  000A16  0E00               	movlw	0
   860  000A18  0100               	movlb	0	; () banked
   861  000A1A  6FA6               	movwf	main@segundos& (0+255),b
   862                           
   863                           ; BSR set to: 0
   864                           ;relogio-3t.c: 148: PosicaoCursorLCD(2,11);
   865  000A1C  0E0B               	movlw	11
   866  000A1E  6E04               	movwf	PosicaoCursorLCD@coluna,c
   867  000A20  0E02               	movlw	2
   868  000A22  ECDF  F006         	call	_PosicaoCursorLCD
   869                           
   870                           ;relogio-3t.c: 149: EscreveInteiroLCD(0);
   871  000A26  0E00               	movlw	0
   872  000A28  6E1A               	movwf	EscreveInteiroLCD@valor+1,c
   873  000A2A  0E00               	movlw	0
   874  000A2C  6E19               	movwf	EscreveInteiroLCD@valor,c
   875  000A2E  EC7B  F007         	call	_EscreveInteiroLCD	;wreg free
   876                           
   877                           ;relogio-3t.c: 151: pos_numero(minutos, 2);
   878  000A32  0E02               	movlw	2
   879  000A34  6E22               	movwf	pos_numero@casa,c
   880  000A36  0100               	movlb	0	; () banked
   881  000A38  51A7               	movf	main@minutos& (0+255),w,b
   882  000A3A  ECE2  F005         	call	_pos_numero
   883  000A3E                     l1895:
   884                           
   885                           ;relogio-3t.c: 157: }
   886                           ;relogio-3t.c: 158: if(minutos >= 60 )
   887  000A3E  0E3B               	movlw	59
   888  000A40  0100               	movlb	0	; () banked
   889  000A42  65A7               	cpfsgt	main@minutos& (0+255),b
   890  000A44  D7A1               	goto	l1857
   891                           
   892                           ; BSR set to: 0
   893                           ;relogio-3t.c: 159: {
   894                           ;relogio-3t.c: 161: horas++;
   895  000A46  0100               	movlb	0	; () banked
   896  000A48  2BA8               	incf	main@horas& (0+255),f,b
   897                           
   898                           ; BSR set to: 0
   899                           ;relogio-3t.c: 162: if(horas > 23){
   900  000A4A  0E17               	movlw	23
   901  000A4C  0100               	movlb	0	; () banked
   902  000A4E  65A8               	cpfsgt	main@horas& (0+255),b
   903  000A50  D003               	goto	l193
   904                           
   905                           ; BSR set to: 0
   906                           ;relogio-3t.c: 163: horas = 0;
   907  000A52  0E00               	movlw	0
   908  000A54  0100               	movlb	0	; () banked
   909  000A56  6FA8               	movwf	main@horas& (0+255),b
   910  000A58                     l193:
   911                           
   912                           ; BSR set to: 0
   913                           ;relogio-3t.c: 164: }
   914                           ;relogio-3t.c: 166: minutos = 0;
   915  000A58  0E00               	movlw	0
   916  000A5A  0100               	movlb	0	; () banked
   917  000A5C  6FA7               	movwf	main@minutos& (0+255),b
   918                           
   919                           ; BSR set to: 0
   920                           ;relogio-3t.c: 167: PosicaoCursorLCD(2,8);
   921  000A5E  0E08               	movlw	8
   922  000A60  6E04               	movwf	PosicaoCursorLCD@coluna,c
   923  000A62  0E02               	movlw	2
   924  000A64  ECDF  F006         	call	_PosicaoCursorLCD
   925                           
   926                           ;relogio-3t.c: 168: EscreveInteiroLCD(0);
   927  000A68  0E00               	movlw	0
   928  000A6A  6E1A               	movwf	EscreveInteiroLCD@valor+1,c
   929  000A6C  0E00               	movlw	0
   930  000A6E  6E19               	movwf	EscreveInteiroLCD@valor,c
   931  000A70  EC7B  F007         	call	_EscreveInteiroLCD	;wreg free
   932                           
   933                           ;relogio-3t.c: 169: pos_numero(horas, 1);
   934  000A74  0E01               	movlw	1
   935  000A76  6E22               	movwf	pos_numero@casa,c
   936  000A78  0100               	movlb	0	; () banked
   937  000A7A  51A8               	movf	main@horas& (0+255),w,b
   938  000A7C  ECE2  F005         	call	_pos_numero
   939  000A80  D783               	goto	l1857
   940  000A82                     __end_of_main:
   941                           	opt stack 0
   942                           tblptru	equ	0xFF8
   943                           tblptrh	equ	0xFF7
   944                           tblptrl	equ	0xFF6
   945                           tablat	equ	0xFF5
   946                           intcon	equ	0xFF2
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           postdec1	equ	0xFE5
   950                           fsr1l	equ	0xFE1
   951                           postinc2	equ	0xFDE
   952                           
   953 ;; *************** function _pos_numero *****************
   954 ;; Defined at:
   955 ;;		line 197 in file "relogio-3t.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  valor           1    wreg     unsigned char 
   958 ;;  casa            1   33[COMRAM] unsigned char 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  valor           1   34[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   970 ;;      Params:         1       0       0       0       0       0       0       0       0
   971 ;;      Locals:         1       0       0       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0       0       0
   973 ;;      Totals:         2       0       0       0       0       0       0       0       0
   974 ;;Total ram usage:        2 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    4
   977 ;; This function calls:
   978 ;;		_EscreveInteiroLCD
   979 ;;		_PosicaoCursorLCD
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text1
   986  000BC4                     __ptext1:
   987                           	opt stack 0
   988  000BC4                     _pos_numero:
   989                           	opt stack 26
   990                           
   991                           ;incstack = 0
   992                           ;pos_numero@valor stored from wreg
   993  000BC4  6E23               	movwf	pos_numero@valor,c
   994                           
   995                           ;relogio-3t.c: 199: switch(casa){
   996  000BC6  D03C               	goto	l1745
   997  000BC8                     l1719:
   998                           
   999                           ;relogio-3t.c: 201: if(valor <10){
  1000  000BC8  0E0A               	movlw	10
  1001  000BCA  6023               	cpfslt	pos_numero@valor,c
  1002  000BCC  D006               	goto	l1723
  1003                           
  1004                           ;relogio-3t.c: 202: PosicaoCursorLCD(2,12);
  1005  000BCE  0E0C               	movlw	12
  1006  000BD0  6E04               	movwf	PosicaoCursorLCD@coluna,c
  1007  000BD2  0E02               	movlw	2
  1008  000BD4  ECDF  F006         	call	_PosicaoCursorLCD
  1009                           
  1010                           ;relogio-3t.c: 203: }else{
  1011  000BD8  D005               	goto	l1725
  1012  000BDA                     l1723:
  1013                           
  1014                           ;relogio-3t.c: 204: PosicaoCursorLCD(2,11);
  1015  000BDA  0E0B               	movlw	11
  1016  000BDC  6E04               	movwf	PosicaoCursorLCD@coluna,c
  1017  000BDE  0E02               	movlw	2
  1018  000BE0  ECDF  F006         	call	_PosicaoCursorLCD
  1019  000BE4                     l1725:
  1020                           
  1021                           ;relogio-3t.c: 205: }
  1022                           ;relogio-3t.c: 206: EscreveInteiroLCD(valor);
  1023  000BE4  C023  F019         	movff	pos_numero@valor,EscreveInteiroLCD@valor
  1024  000BE8  6A1A               	clrf	EscreveInteiroLCD@valor+1,c
  1025  000BEA  EC7B  F007         	call	_EscreveInteiroLCD	;wreg free
  1026                           
  1027                           ;relogio-3t.c: 207: break;
  1028  000BEE  0012               	return	
  1029  000BF0                     l1727:
  1030                           
  1031                           ;relogio-3t.c: 209: if(valor <10){
  1032  000BF0  0E0A               	movlw	10
  1033  000BF2  6023               	cpfslt	pos_numero@valor,c
  1034  000BF4  D006               	goto	l1731
  1035                           
  1036                           ;relogio-3t.c: 210: PosicaoCursorLCD(2,9);
  1037  000BF6  0E09               	movlw	9
  1038  000BF8  6E04               	movwf	PosicaoCursorLCD@coluna,c
  1039  000BFA  0E02               	movlw	2
  1040  000BFC  ECDF  F006         	call	_PosicaoCursorLCD
  1041                           
  1042                           ;relogio-3t.c: 211: }else{
  1043  000C00  D005               	goto	l1733
  1044  000C02                     l1731:
  1045                           
  1046                           ;relogio-3t.c: 212: PosicaoCursorLCD(2,8);
  1047  000C02  0E08               	movlw	8
  1048  000C04  6E04               	movwf	PosicaoCursorLCD@coluna,c
  1049  000C06  0E02               	movlw	2
  1050  000C08  ECDF  F006         	call	_PosicaoCursorLCD
  1051  000C0C                     l1733:
  1052                           
  1053                           ;relogio-3t.c: 213: }
  1054                           ;relogio-3t.c: 214: EscreveInteiroLCD(valor);
  1055  000C0C  C023  F019         	movff	pos_numero@valor,EscreveInteiroLCD@valor
  1056  000C10  6A1A               	clrf	EscreveInteiroLCD@valor+1,c
  1057  000C12  EC7B  F007         	call	_EscreveInteiroLCD	;wreg free
  1058                           
  1059                           ;relogio-3t.c: 215: break;
  1060  000C16  0012               	return	
  1061  000C18                     l1735:
  1062                           
  1063                           ;relogio-3t.c: 217: if(valor <10){
  1064  000C18  0E0A               	movlw	10
  1065  000C1A  6023               	cpfslt	pos_numero@valor,c
  1066  000C1C  D006               	goto	l1739
  1067                           
  1068                           ;relogio-3t.c: 218: PosicaoCursorLCD(2,6);
  1069  000C1E  0E06               	movlw	6
  1070  000C20  6E04               	movwf	PosicaoCursorLCD@coluna,c
  1071  000C22  0E02               	movlw	2
  1072  000C24  ECDF  F006         	call	_PosicaoCursorLCD
  1073                           
  1074                           ;relogio-3t.c: 219: }else{
  1075  000C28  D005               	goto	l1741
  1076  000C2A                     l1739:
  1077                           
  1078                           ;relogio-3t.c: 220: PosicaoCursorLCD(2,5);
  1079  000C2A  0E05               	movlw	5
  1080  000C2C  6E04               	movwf	PosicaoCursorLCD@coluna,c
  1081  000C2E  0E02               	movlw	2
  1082  000C30  ECDF  F006         	call	_PosicaoCursorLCD
  1083  000C34                     l1741:
  1084                           
  1085                           ;relogio-3t.c: 221: }
  1086                           ;relogio-3t.c: 222: EscreveInteiroLCD(valor);
  1087  000C34  C023  F019         	movff	pos_numero@valor,EscreveInteiroLCD@valor
  1088  000C38  6A1A               	clrf	EscreveInteiroLCD@valor+1,c
  1089  000C3A  EC7B  F007         	call	_EscreveInteiroLCD	;wreg free
  1090                           
  1091                           ;relogio-3t.c: 224: }
  1092                           
  1093                           ;relogio-3t.c: 223: break;
  1094  000C3E  0012               	return	
  1095  000C40                     l1745:
  1096  000C40  5022               	movf	pos_numero@casa,w,c
  1097                           
  1098                           ; Switch size 1, requested type "space"
  1099                           ; Number of cases is 3, Range of values is 1 to 3
  1100                           ; switch strategies available:
  1101                           ; Name         Instructions Cycles
  1102                           ; simple_byte           10     6 (average)
  1103                           ;	Chosen strategy is simple_byte
  1104  000C42  0A01               	xorlw	1	; case 1
  1105  000C44  B4D8               	btfsc	status,2,c
  1106  000C46  D7E8               	goto	l1735
  1107  000C48  0A03               	xorlw	3	; case 2
  1108  000C4A  B4D8               	btfsc	status,2,c
  1109  000C4C  D7D1               	goto	l1727
  1110  000C4E  0A01               	xorlw	1	; case 3
  1111  000C50  A4D8               	btfss	status,2,c
  1112  000C52  0012               	return	
  1113  000C54  D7B9               	goto	l1719
  1114  000C56                     __end_of_pos_numero:
  1115                           	opt stack 0
  1116                           tblptru	equ	0xFF8
  1117                           tblptrh	equ	0xFF7
  1118                           tblptrl	equ	0xFF6
  1119                           tablat	equ	0xFF5
  1120                           intcon	equ	0xFF2
  1121                           postinc0	equ	0xFEE
  1122                           wreg	equ	0xFE8
  1123                           postdec1	equ	0xFE5
  1124                           fsr1l	equ	0xFE1
  1125                           postinc2	equ	0xFDE
  1126                           status	equ	0xFD8
  1127                           
  1128 ;; *************** function _PosicaoCursorLCD *****************
  1129 ;; Defined at:
  1130 ;;		line 280 in file "displayLCD.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  linha           1    wreg     unsigned char 
  1133 ;;  coluna          1    3[COMRAM] unsigned char 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  linha           1    4[COMRAM] unsigned char 
  1136 ;;  EnderecoLCD     1    5[COMRAM] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1146 ;;      Params:         1       0       0       0       0       0       0       0       0
  1147 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1149 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1150 ;;Total ram usage:        3 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    2
  1153 ;; This function calls:
  1154 ;;		_EnderecoCursor
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;;		_pos_numero
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text2
  1162  000DBE                     __ptext2:
  1163                           	opt stack 0
  1164  000DBE                     _PosicaoCursorLCD:
  1165                           	opt stack 27
  1166                           
  1167                           ;incstack = 0
  1168                           ;PosicaoCursorLCD@linha stored from wreg
  1169  000DBE  6E05               	movwf	PosicaoCursorLCD@linha,c
  1170                           
  1171                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
  1172  000DC0  0E00               	movlw	0
  1173  000DC2  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1174                           
  1175                           ;displayLCD.c: 292: if (coluna >= 0)
  1176  000DC4  0604               	decf	PosicaoCursorLCD@coluna,f,c
  1177                           
  1178                           ;displayLCD.c: 293: {
  1179                           ;displayLCD.c: 296: switch (linha)
  1180  000DC6  D01E               	goto	l1649
  1181  000DC8                     l70:
  1182                           
  1183                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
  1184  000DC8  C004  F006         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
  1185                           
  1186                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
  1187  000DCC  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1188  000DCE  ECAA  F006         	call	_EnderecoCursor
  1189                           
  1190                           ;displayLCD.c: 301: break;
  1191  000DD2  0012               	return	
  1192  000DD4                     l1633:
  1193                           
  1194                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
  1195  000DD4  5004               	movf	PosicaoCursorLCD@coluna,w,c
  1196  000DD6  0F40               	addlw	64
  1197  000DD8  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1198                           
  1199                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
  1200  000DDA  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1201  000DDC  ECAA  F006         	call	_EnderecoCursor
  1202                           
  1203                           ;displayLCD.c: 306: break;
  1204  000DE0  0012               	return	
  1205  000DE2                     l1637:
  1206                           
  1207                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
  1208  000DE2  5004               	movf	PosicaoCursorLCD@coluna,w,c
  1209  000DE4  0F14               	addlw	20
  1210  000DE6  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1211                           
  1212                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
  1213  000DE8  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1214  000DEA  ECAA  F006         	call	_EnderecoCursor
  1215                           
  1216                           ;displayLCD.c: 311: break;
  1217  000DEE  0012               	return	
  1218  000DF0                     l1641:
  1219                           
  1220                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
  1221  000DF0  5004               	movf	PosicaoCursorLCD@coluna,w,c
  1222  000DF2  0F54               	addlw	84
  1223  000DF4  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1224                           
  1225                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
  1226  000DF6  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1227  000DF8  ECAA  F006         	call	_EnderecoCursor
  1228                           
  1229                           ;displayLCD.c: 316: break;
  1230  000DFC  0012               	return	
  1231  000DFE                     l1645:
  1232                           
  1233                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
  1234  000DFE  0E00               	movlw	0
  1235  000E00  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1236                           
  1237                           ;displayLCD.c: 321: }
  1238                           
  1239                           ;displayLCD.c: 320: break;
  1240  000E02  0012               	return	
  1241  000E04                     l1649:
  1242  000E04  5005               	movf	PosicaoCursorLCD@linha,w,c
  1243                           
  1244                           ; Switch size 1, requested type "space"
  1245                           ; Number of cases is 4, Range of values is 1 to 4
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte           13     7 (average)
  1249                           ;	Chosen strategy is simple_byte
  1250  000E06  0A01               	xorlw	1	; case 1
  1251  000E08  B4D8               	btfsc	status,2,c
  1252  000E0A  D7DE               	goto	l70
  1253  000E0C  0A03               	xorlw	3	; case 2
  1254  000E0E  B4D8               	btfsc	status,2,c
  1255  000E10  D7E1               	goto	l1633
  1256  000E12  0A01               	xorlw	1	; case 3
  1257  000E14  B4D8               	btfsc	status,2,c
  1258  000E16  D7E5               	goto	l1637
  1259  000E18  0A07               	xorlw	7	; case 4
  1260  000E1A  B4D8               	btfsc	status,2,c
  1261  000E1C  D7E9               	goto	l1641
  1262  000E1E  D7EF               	goto	l1645
  1263  000E20                     __end_of_PosicaoCursorLCD:
  1264                           	opt stack 0
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           intcon	equ	0xFF2
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           postinc2	equ	0xFDE
  1275                           status	equ	0xFD8
  1276                           
  1277 ;; *************** function _EnderecoCursor *****************
  1278 ;; Defined at:
  1279 ;;		line 229 in file "displayLCD.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  endereco        1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  endereco        1    2[COMRAM] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0
  1294 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        1 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    1
  1300 ;; This function calls:
  1301 ;;		_Delay
  1302 ;; This function is called by:
  1303 ;;		_PosicaoCursorLCD
  1304 ;;		_CriaCaractereLCD
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text3
  1309  000D54                     __ptext3:
  1310                           	opt stack 0
  1311  000D54                     _EnderecoCursor:
  1312                           	opt stack 27
  1313                           
  1314                           ;incstack = 0
  1315                           ;EnderecoCursor@endereco stored from wreg
  1316  000D54  6E03               	movwf	EnderecoCursor@endereco,c
  1317                           
  1318                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
  1319  000D56  9483               	bcf	3971,2,c	;volatile
  1320                           
  1321                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
  1322  000D58  9283               	bcf	3971,1,c	;volatile
  1323                           
  1324                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
  1325  000D5A  9083               	bcf	3971,0,c	;volatile
  1326                           
  1327                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
  1328  000D5C  8E83               	bsf	3971,7,c	;volatile
  1329                           
  1330                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1331  000D5E  A803               	btfss	EnderecoCursor@endereco,4,c
  1332  000D60  D002               	goto	l51
  1333  000D62  8883               	bsf	3971,4,c	;volatile
  1334  000D64  D001               	goto	l1537
  1335  000D66                     l51:
  1336                           
  1337                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
  1338  000D66  9883               	bcf	3971,4,c	;volatile
  1339  000D68                     l1537:
  1340                           
  1341                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1342  000D68  AA03               	btfss	EnderecoCursor@endereco,5,c
  1343  000D6A  D002               	goto	l53
  1344  000D6C  8A83               	bsf	3971,5,c	;volatile
  1345  000D6E  D001               	goto	l1541
  1346  000D70                     l53:
  1347                           
  1348                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
  1349  000D70  9A83               	bcf	3971,5,c	;volatile
  1350  000D72                     l1541:
  1351                           
  1352                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1353  000D72  AC03               	btfss	EnderecoCursor@endereco,6,c
  1354  000D74  D002               	goto	l55
  1355  000D76  8C83               	bsf	3971,6,c	;volatile
  1356  000D78  D001               	goto	l56
  1357  000D7A                     l55:
  1358                           
  1359                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
  1360  000D7A  9C83               	bcf	3971,6,c	;volatile
  1361  000D7C                     l56:
  1362                           
  1363                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
  1364  000D7C  8083               	bsf	3971,0,c	;volatile
  1365                           
  1366                           ;displayLCD.c: 247: Delay();
  1367  000D7E  ECC6  F007         	call	_Delay	;wreg free
  1368                           
  1369                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
  1370  000D82  9083               	bcf	3971,0,c	;volatile
  1371                           
  1372                           ;displayLCD.c: 249: Delay();
  1373  000D84  ECC6  F007         	call	_Delay	;wreg free
  1374                           
  1375                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1376  000D88  A003               	btfss	EnderecoCursor@endereco,0,c
  1377  000D8A  D002               	goto	l57
  1378  000D8C  8883               	bsf	3971,4,c	;volatile
  1379  000D8E  D001               	goto	l58
  1380  000D90                     l57:
  1381                           
  1382                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
  1383  000D90  9883               	bcf	3971,4,c	;volatile
  1384  000D92                     l58:
  1385                           
  1386                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1387  000D92  A203               	btfss	EnderecoCursor@endereco,1,c
  1388  000D94  D002               	goto	l59
  1389  000D96  8A83               	bsf	3971,5,c	;volatile
  1390  000D98  D001               	goto	l60
  1391  000D9A                     l59:
  1392                           
  1393                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
  1394  000D9A  9A83               	bcf	3971,5,c	;volatile
  1395  000D9C                     l60:
  1396                           
  1397                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1398  000D9C  A403               	btfss	EnderecoCursor@endereco,2,c
  1399  000D9E  D002               	goto	l61
  1400  000DA0  8C83               	bsf	3971,6,c	;volatile
  1401  000DA2  D001               	goto	l62
  1402  000DA4                     l61:
  1403                           
  1404                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
  1405  000DA4  9C83               	bcf	3971,6,c	;volatile
  1406  000DA6                     l62:
  1407                           
  1408                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1409  000DA6  A603               	btfss	EnderecoCursor@endereco,3,c
  1410  000DA8  D002               	goto	l63
  1411  000DAA  8E83               	bsf	3971,7,c	;volatile
  1412  000DAC  D001               	goto	l64
  1413  000DAE                     l63:
  1414                           
  1415                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
  1416  000DAE  9E83               	bcf	3971,7,c	;volatile
  1417  000DB0                     l64:
  1418                           
  1419                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
  1420  000DB0  8083               	bsf	3971,0,c	;volatile
  1421                           
  1422                           ;displayLCD.c: 263: Delay();
  1423  000DB2  ECC6  F007         	call	_Delay	;wreg free
  1424                           
  1425                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
  1426  000DB6  9083               	bcf	3971,0,c	;volatile
  1427                           
  1428                           ;displayLCD.c: 265: Delay();
  1429  000DB8  ECC6  F007         	call	_Delay	;wreg free
  1430  000DBC  0012               	return		;funcret
  1431  000DBE                     __end_of_EnderecoCursor:
  1432                           	opt stack 0
  1433                           tblptru	equ	0xFF8
  1434                           tblptrh	equ	0xFF7
  1435                           tblptrl	equ	0xFF6
  1436                           tablat	equ	0xFF5
  1437                           intcon	equ	0xFF2
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           postdec1	equ	0xFE5
  1441                           fsr1l	equ	0xFE1
  1442                           postinc2	equ	0xFDE
  1443                           status	equ	0xFD8
  1444                           
  1445 ;; *************** function _EscreveInteiroLCD *****************
  1446 ;; Defined at:
  1447 ;;		line 391 in file "displayLCD.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  valor           2   24[COMRAM] int 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  texto           7   26[COMRAM] unsigned char [7]
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1461 ;;      Params:         2       0       0       0       0       0       0       0       0
  1462 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1464 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1465 ;;Total ram usage:        9 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    3
  1468 ;; This function calls:
  1469 ;;		_EscreveFraseRamLCD
  1470 ;;		_itoa
  1471 ;; This function is called by:
  1472 ;;		_main
  1473 ;;		_pos_numero
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text4
  1478  000EF6                     __ptext4:
  1479                           	opt stack 0
  1480  000EF6                     _EscreveInteiroLCD:
  1481                           	opt stack 26
  1482                           
  1483                           ;displayLCD.c: 393: char texto[7] = "000000";
  1484                           
  1485                           ;incstack = 0
  1486  000EF6  EE20  F036         	lfsr	2,EscreveInteiroLCD@F4004
  1487  000EFA  EE10  F01B         	lfsr	1,EscreveInteiroLCD@texto
  1488  000EFE  0E06               	movlw	6
  1489  000F00                     u1071:
  1490  000F00  CFDB FFE3          	movff	plusw2,plusw1
  1491  000F04  06E8               	decf	wreg,f,c
  1492  000F06  E2FC               	bc	u1071
  1493                           
  1494                           ;displayLCD.c: 394: itoa(texto,valor, 10);
  1495  000F08  0E1B               	movlw	low EscreveInteiroLCD@texto
  1496  000F0A  6E11               	movwf	itoa@buf,c
  1497  000F0C  0E00               	movlw	high EscreveInteiroLCD@texto
  1498  000F0E  6E12               	movwf	itoa@buf+1,c
  1499  000F10  C019  F013         	movff	EscreveInteiroLCD@valor,itoa@val
  1500  000F14  C01A  F014         	movff	EscreveInteiroLCD@valor+1,itoa@val+1
  1501  000F18  0E00               	movlw	0
  1502  000F1A  6E16               	movwf	itoa@base+1,c
  1503  000F1C  0E0A               	movlw	10
  1504  000F1E  6E15               	movwf	itoa@base,c
  1505  000F20  EC39  F007         	call	_itoa	;wreg free
  1506                           
  1507                           ;displayLCD.c: 395: EscreveFraseRamLCD(texto);
  1508  000F24  0E1B               	movlw	low EscreveInteiroLCD@texto
  1509  000F26  6E04               	movwf	EscreveFraseRamLCD@buffer,c
  1510  000F28  0E00               	movlw	high EscreveInteiroLCD@texto
  1511  000F2A  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
  1512  000F2C  ECB4  F007         	call	_EscreveFraseRamLCD	;wreg free
  1513  000F30  0012               	return		;funcret
  1514  000F32                     __end_of_EscreveInteiroLCD:
  1515                           	opt stack 0
  1516                           tblptru	equ	0xFF8
  1517                           tblptrh	equ	0xFF7
  1518                           tblptrl	equ	0xFF6
  1519                           tablat	equ	0xFF5
  1520                           intcon	equ	0xFF2
  1521                           postinc0	equ	0xFEE
  1522                           wreg	equ	0xFE8
  1523                           postdec1	equ	0xFE5
  1524                           plusw1	equ	0xFE3
  1525                           fsr1l	equ	0xFE1
  1526                           postinc2	equ	0xFDE
  1527                           plusw2	equ	0xFDB
  1528                           status	equ	0xFD8
  1529                           
  1530 ;; *************** function _itoa *****************
  1531 ;; Defined at:
  1532 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  buf             2   16[COMRAM] PTR unsigned char 
  1535 ;;		 -> EscreveInteiroLCD@texto(7), 
  1536 ;;  val             2   18[COMRAM] int 
  1537 ;;  base            2   20[COMRAM] int 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  cp              2   22[COMRAM] PTR unsigned char 
  1540 ;;		 -> EscreveInteiroLCD@texto(7), 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2   16[COMRAM] PTR unsigned char 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1550 ;;      Params:         6       0       0       0       0       0       0       0       0
  1551 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1553 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1554 ;;Total ram usage:        8 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    2
  1557 ;; This function calls:
  1558 ;;		_utoa
  1559 ;; This function is called by:
  1560 ;;		_EscreveInteiroLCD
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text5
  1565  000E72                     __ptext5:
  1566                           	opt stack 0
  1567  000E72                     _itoa:
  1568                           	opt stack 26
  1569                           
  1570                           ;incstack = 0
  1571  000E72  C011  F017         	movff	itoa@buf,itoa@cp
  1572  000E76  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  1573  000E7A  AE14               	btfss	itoa@val+1,7,c
  1574  000E7C  D00C               	goto	l1571
  1575  000E7E  C011  FFD9         	movff	itoa@buf,fsr2l
  1576  000E82  C012  FFDA         	movff	itoa@buf+1,fsr2h
  1577  000E86  0E2D               	movlw	45
  1578  000E88  6EDF               	movwf	indf2,c
  1579  000E8A  4A11               	infsnz	itoa@buf,f,c
  1580  000E8C  2A12               	incf	itoa@buf+1,f,c
  1581  000E8E  6C13               	negf	itoa@val,c
  1582  000E90  1E14               	comf	itoa@val+1,f,c
  1583  000E92  B0D8               	btfsc	status,0,c
  1584  000E94  2A14               	incf	itoa@val+1,f,c
  1585  000E96                     l1571:
  1586  000E96  C011  F008         	movff	itoa@buf,utoa@buf
  1587  000E9A  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  1588  000E9E  C013  F00A         	movff	itoa@val,utoa@val
  1589  000EA2  C014  F00B         	movff	itoa@val+1,utoa@val+1
  1590  000EA6  C015  F00C         	movff	itoa@base,utoa@base
  1591  000EAA  C016  F00D         	movff	itoa@base+1,utoa@base+1
  1592  000EAE  EC41  F005         	call	_utoa	;wreg free
  1593  000EB2  0012               	return	
  1594  000EB4                     __end_of_itoa:
  1595                           	opt stack 0
  1596                           tblptru	equ	0xFF8
  1597                           tblptrh	equ	0xFF7
  1598                           tblptrl	equ	0xFF6
  1599                           tablat	equ	0xFF5
  1600                           intcon	equ	0xFF2
  1601                           postinc0	equ	0xFEE
  1602                           wreg	equ	0xFE8
  1603                           postdec1	equ	0xFE5
  1604                           plusw1	equ	0xFE3
  1605                           fsr1l	equ	0xFE1
  1606                           indf2	equ	0xFDF
  1607                           postinc2	equ	0xFDE
  1608                           plusw2	equ	0xFDB
  1609                           fsr2h	equ	0xFDA
  1610                           fsr2l	equ	0xFD9
  1611                           status	equ	0xFD8
  1612                           
  1613 ;; *************** function _utoa *****************
  1614 ;; Defined at:
  1615 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  buf             2    7[COMRAM] PTR unsigned char 
  1618 ;;		 -> EscreveInteiroLCD@texto(7), 
  1619 ;;  val             2    9[COMRAM] unsigned int 
  1620 ;;  base            2   11[COMRAM] int 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  v               2   13[COMRAM] unsigned int 
  1623 ;;  c               1   15[COMRAM] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  2    7[COMRAM] PTR unsigned char 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1633 ;;      Params:         6       0       0       0       0       0       0       0       0
  1634 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1636 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1637 ;;Total ram usage:        9 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    1
  1640 ;; This function calls:
  1641 ;;		___lwdiv
  1642 ;;		___lwmod
  1643 ;; This function is called by:
  1644 ;;		_itoa
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text6
  1649  000A82                     __ptext6:
  1650                           	opt stack 0
  1651  000A82                     _utoa:
  1652                           	opt stack 26
  1653                           
  1654                           ;incstack = 0
  1655  000A82  C00A  F00E         	movff	utoa@val,utoa@v
  1656  000A86  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  1657  000A8A                     l1503:
  1658  000A8A  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  1659  000A8E  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  1660  000A92  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1661  000A96  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1662  000A9A  EC10  F007         	call	___lwdiv	;wreg free
  1663  000A9E  C001  F00E         	movff	?___lwdiv,utoa@v
  1664  000AA2  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  1665  000AA6  4A08               	infsnz	utoa@buf,f,c
  1666  000AA8  2A09               	incf	utoa@buf+1,f,c
  1667  000AAA  500E               	movf	utoa@v,w,c
  1668  000AAC  100F               	iorwf	utoa@v+1,w,c
  1669  000AAE  A4D8               	btfss	status,2,c
  1670  000AB0  D7EC               	goto	l1503
  1671  000AB2  C008  FFD9         	movff	utoa@buf,fsr2l
  1672  000AB6  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1673  000ABA  0E00               	movlw	0
  1674  000ABC  6EDF               	movwf	indf2,c
  1675  000ABE  0608               	decf	utoa@buf,f,c
  1676  000AC0  A0D8               	btfss	status,0,c
  1677  000AC2  0609               	decf	utoa@buf+1,f,c
  1678  000AC4                     l1513:
  1679  000AC4  C00A  F001         	movff	utoa@val,___lwmod@dividend
  1680  000AC8  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  1681  000ACC  C00C  F003         	movff	utoa@base,___lwmod@divisor
  1682  000AD0  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  1683  000AD4  EC5A  F007         	call	___lwmod	;wreg free
  1684  000AD8  5001               	movf	?___lwmod,w,c
  1685  000ADA  6E10               	movwf	utoa@c,c
  1686  000ADC  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  1687  000AE0  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  1688  000AE4  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1689  000AE8  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1690  000AEC  EC10  F007         	call	___lwdiv	;wreg free
  1691  000AF0  C001  F00A         	movff	?___lwdiv,utoa@val
  1692  000AF4  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  1693  000AF8  0E09               	movlw	9
  1694  000AFA  6410               	cpfsgt	utoa@c,c
  1695  000AFC  D002               	goto	l615
  1696  000AFE  0E07               	movlw	7
  1697  000B00  2610               	addwf	utoa@c,f,c
  1698  000B02                     l615:
  1699  000B02  0E30               	movlw	48
  1700  000B04  2610               	addwf	utoa@c,f,c
  1701  000B06  C008  FFD9         	movff	utoa@buf,fsr2l
  1702  000B0A  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1703  000B0E  C010  FFDF         	movff	utoa@c,indf2
  1704  000B12  0608               	decf	utoa@buf,f,c
  1705  000B14  A0D8               	btfss	status,0,c
  1706  000B16  0609               	decf	utoa@buf+1,f,c
  1707  000B18  500A               	movf	utoa@val,w,c
  1708  000B1A  100B               	iorwf	utoa@val+1,w,c
  1709  000B1C  A4D8               	btfss	status,2,c
  1710  000B1E  D7D2               	goto	l1513
  1711                           
  1712                           ;	Return value of _utoa is never used
  1713  000B20  4A08               	infsnz	utoa@buf,f,c
  1714  000B22  2A09               	incf	utoa@buf+1,f,c
  1715  000B24  0012               	return	
  1716  000B26                     __end_of_utoa:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           intcon	equ	0xFF2
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           postdec1	equ	0xFE5
  1726                           plusw1	equ	0xFE3
  1727                           fsr1l	equ	0xFE1
  1728                           indf2	equ	0xFDF
  1729                           postinc2	equ	0xFDE
  1730                           plusw2	equ	0xFDB
  1731                           fsr2h	equ	0xFDA
  1732                           fsr2l	equ	0xFD9
  1733                           status	equ	0xFD8
  1734                           
  1735 ;; *************** function ___lwmod *****************
  1736 ;; Defined at:
  1737 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  dividend        2    0[COMRAM] unsigned int 
  1740 ;;  divisor         2    2[COMRAM] unsigned int 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  counter         1    4[COMRAM] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2    0[COMRAM] unsigned int 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1752 ;;      Params:         4       0       0       0       0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1755 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1756 ;;Total ram usage:        5 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_utoa
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text7
  1766  000EB4                     __ptext7:
  1767                           	opt stack 0
  1768  000EB4                     ___lwmod:
  1769                           	opt stack 26
  1770                           
  1771                           ;incstack = 0
  1772  000EB4  5003               	movf	___lwmod@divisor,w,c
  1773  000EB6  1004               	iorwf	___lwmod@divisor+1,w,c
  1774  000EB8  B4D8               	btfsc	status,2,c
  1775  000EBA  D018               	goto	l704
  1776  000EBC  0E01               	movlw	1
  1777  000EBE  6E05               	movwf	___lwmod@counter,c
  1778  000EC0  D004               	goto	l1455
  1779  000EC2                     l1453:
  1780  000EC2  90D8               	bcf	status,0,c
  1781  000EC4  3603               	rlcf	___lwmod@divisor,f,c
  1782  000EC6  3604               	rlcf	___lwmod@divisor+1,f,c
  1783  000EC8  2A05               	incf	___lwmod@counter,f,c
  1784  000ECA                     l1455:
  1785  000ECA  AE04               	btfss	___lwmod@divisor+1,7,c
  1786  000ECC  D7FA               	goto	l1453
  1787  000ECE                     l1457:
  1788  000ECE  5003               	movf	___lwmod@divisor,w,c
  1789  000ED0  5C01               	subwf	___lwmod@dividend,w,c
  1790  000ED2  5004               	movf	___lwmod@divisor+1,w,c
  1791  000ED4  5802               	subwfb	___lwmod@dividend+1,w,c
  1792  000ED6  A0D8               	btfss	status,0,c
  1793  000ED8  D004               	goto	l1461
  1794  000EDA  5003               	movf	___lwmod@divisor,w,c
  1795  000EDC  5E01               	subwf	___lwmod@dividend,f,c
  1796  000EDE  5004               	movf	___lwmod@divisor+1,w,c
  1797  000EE0  5A02               	subwfb	___lwmod@dividend+1,f,c
  1798  000EE2                     l1461:
  1799  000EE2  90D8               	bcf	status,0,c
  1800  000EE4  3204               	rrcf	___lwmod@divisor+1,f,c
  1801  000EE6  3203               	rrcf	___lwmod@divisor,f,c
  1802  000EE8  2E05               	decfsz	___lwmod@counter,f,c
  1803  000EEA  D7F1               	goto	l1457
  1804  000EEC                     l704:
  1805  000EEC  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1806  000EF0  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1807  000EF4  0012               	return		;funcret
  1808  000EF6                     __end_of___lwmod:
  1809                           	opt stack 0
  1810                           tblptru	equ	0xFF8
  1811                           tblptrh	equ	0xFF7
  1812                           tblptrl	equ	0xFF6
  1813                           tablat	equ	0xFF5
  1814                           intcon	equ	0xFF2
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           postdec1	equ	0xFE5
  1818                           plusw1	equ	0xFE3
  1819                           fsr1l	equ	0xFE1
  1820                           indf2	equ	0xFDF
  1821                           postinc2	equ	0xFDE
  1822                           plusw2	equ	0xFDB
  1823                           fsr2h	equ	0xFDA
  1824                           fsr2l	equ	0xFD9
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function ___lwdiv *****************
  1828 ;; Defined at:
  1829 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  dividend        2    0[COMRAM] unsigned int 
  1832 ;;  divisor         2    2[COMRAM] unsigned int 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  quotient        2    4[COMRAM] unsigned int 
  1835 ;;  counter         1    6[COMRAM] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  2    0[COMRAM] unsigned int 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1845 ;;      Params:         4       0       0       0       0       0       0       0       0
  1846 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1848 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1849 ;;Total ram usage:        7 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_utoa
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text8
  1859  000E20                     __ptext8:
  1860                           	opt stack 0
  1861  000E20                     ___lwdiv:
  1862                           	opt stack 26
  1863                           
  1864                           ;incstack = 0
  1865  000E20  0E00               	movlw	0
  1866  000E22  6E06               	movwf	___lwdiv@quotient+1,c
  1867  000E24  0E00               	movlw	0
  1868  000E26  6E05               	movwf	___lwdiv@quotient,c
  1869  000E28  5003               	movf	___lwdiv@divisor,w,c
  1870  000E2A  1004               	iorwf	___lwdiv@divisor+1,w,c
  1871  000E2C  B4D8               	btfsc	status,2,c
  1872  000E2E  D01C               	goto	l694
  1873  000E30  0E01               	movlw	1
  1874  000E32  6E07               	movwf	___lwdiv@counter,c
  1875  000E34  D004               	goto	l1435
  1876  000E36                     l1433:
  1877  000E36  90D8               	bcf	status,0,c
  1878  000E38  3603               	rlcf	___lwdiv@divisor,f,c
  1879  000E3A  3604               	rlcf	___lwdiv@divisor+1,f,c
  1880  000E3C  2A07               	incf	___lwdiv@counter,f,c
  1881  000E3E                     l1435:
  1882  000E3E  AE04               	btfss	___lwdiv@divisor+1,7,c
  1883  000E40  D7FA               	goto	l1433
  1884  000E42                     l1437:
  1885  000E42  90D8               	bcf	status,0,c
  1886  000E44  3605               	rlcf	___lwdiv@quotient,f,c
  1887  000E46  3606               	rlcf	___lwdiv@quotient+1,f,c
  1888  000E48  5003               	movf	___lwdiv@divisor,w,c
  1889  000E4A  5C01               	subwf	___lwdiv@dividend,w,c
  1890  000E4C  5004               	movf	___lwdiv@divisor+1,w,c
  1891  000E4E  5802               	subwfb	___lwdiv@dividend+1,w,c
  1892  000E50  A0D8               	btfss	status,0,c
  1893  000E52  D005               	goto	l1445
  1894  000E54  5003               	movf	___lwdiv@divisor,w,c
  1895  000E56  5E01               	subwf	___lwdiv@dividend,f,c
  1896  000E58  5004               	movf	___lwdiv@divisor+1,w,c
  1897  000E5A  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1898  000E5C  8005               	bsf	___lwdiv@quotient,0,c
  1899  000E5E                     l1445:
  1900  000E5E  90D8               	bcf	status,0,c
  1901  000E60  3204               	rrcf	___lwdiv@divisor+1,f,c
  1902  000E62  3203               	rrcf	___lwdiv@divisor,f,c
  1903  000E64  2E07               	decfsz	___lwdiv@counter,f,c
  1904  000E66  D7ED               	goto	l1437
  1905  000E68                     l694:
  1906  000E68  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1907  000E6C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1908  000E70  0012               	return		;funcret
  1909  000E72                     __end_of___lwdiv:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           intcon	equ	0xFF2
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           postdec1	equ	0xFE5
  1919                           plusw1	equ	0xFE3
  1920                           fsr1l	equ	0xFE1
  1921                           indf2	equ	0xFDF
  1922                           postinc2	equ	0xFDE
  1923                           plusw2	equ	0xFDB
  1924                           fsr2h	equ	0xFDA
  1925                           fsr2l	equ	0xFD9
  1926                           status	equ	0xFD8
  1927                           
  1928 ;; *************** function _EscreveFraseRamLCD *****************
  1929 ;; Defined at:
  1930 ;;		line 438 in file "displayLCD.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  buffer          2    3[COMRAM] PTR unsigned char 
  1933 ;;		 -> main@Texto_2(17), main@Texto_1(17), main@Texto_0(17), EscreveInteiroLCD@texto(7), 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1945 ;;      Params:         2       0       0       0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1948 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1949 ;;Total ram usage:        2 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    2
  1952 ;; This function calls:
  1953 ;;		_EscreveCaractereLCD
  1954 ;; This function is called by:
  1955 ;;		_EscreveInteiroLCD
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text9
  1961  000F68                     __ptext9:
  1962                           	opt stack 0
  1963  000F68                     _EscreveFraseRamLCD:
  1964                           	opt stack 26
  1965                           
  1966                           ;displayLCD.c: 440: while(*buffer)
  1967                           
  1968                           ;incstack = 0
  1969  000F68  D009               	goto	l1581
  1970  000F6A                     l1577:
  1971                           
  1972                           ;displayLCD.c: 441: {
  1973                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
  1974  000F6A  C004  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1975  000F6E  C005  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1976  000F72  50DF               	movf	indf2,w,c
  1977  000F74  EC71  F006         	call	_EscreveCaractereLCD
  1978                           
  1979                           ;displayLCD.c: 443: buffer++;
  1980  000F78  4A04               	infsnz	EscreveFraseRamLCD@buffer,f,c
  1981  000F7A  2A05               	incf	EscreveFraseRamLCD@buffer+1,f,c
  1982  000F7C                     l1581:
  1983  000F7C  C004  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1984  000F80  C005  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1985  000F84  50DF               	movf	indf2,w,c
  1986  000F86  B4D8               	btfsc	status,2,c
  1987  000F88  0012               	return	
  1988  000F8A  D7EF               	goto	l1577
  1989  000F8C                     __end_of_EscreveFraseRamLCD:
  1990                           	opt stack 0
  1991                           tblptru	equ	0xFF8
  1992                           tblptrh	equ	0xFF7
  1993                           tblptrl	equ	0xFF6
  1994                           tablat	equ	0xFF5
  1995                           intcon	equ	0xFF2
  1996                           postinc0	equ	0xFEE
  1997                           wreg	equ	0xFE8
  1998                           postdec1	equ	0xFE5
  1999                           plusw1	equ	0xFE3
  2000                           fsr1l	equ	0xFE1
  2001                           indf2	equ	0xFDF
  2002                           postinc2	equ	0xFDE
  2003                           plusw2	equ	0xFDB
  2004                           fsr2h	equ	0xFDA
  2005                           fsr2l	equ	0xFD9
  2006                           status	equ	0xFD8
  2007                           
  2008 ;; *************** function _EscreveCaractereLCD *****************
  2009 ;; Defined at:
  2010 ;;		line 339 in file "displayLCD.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  data            1    wreg     unsigned char 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  data            1    2[COMRAM] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0
  2025 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2027 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2028 ;;Total ram usage:        1 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    1
  2031 ;; This function calls:
  2032 ;;		_Delay
  2033 ;; This function is called by:
  2034 ;;		_EscreveFraseRamLCD
  2035 ;;		_EscreveFloatLCD
  2036 ;;		_EscreveFraseLCD
  2037 ;;		_CriaCaractereLCD
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text10
  2042  000CE2                     __ptext10:
  2043                           	opt stack 0
  2044  000CE2                     _EscreveCaractereLCD:
  2045                           	opt stack 26
  2046                           
  2047                           ;incstack = 0
  2048                           ;EscreveCaractereLCD@data stored from wreg
  2049  000CE2  6E03               	movwf	EscreveCaractereLCD@data,c
  2050                           
  2051                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
  2052  000CE4  9483               	bcf	3971,2,c	;volatile
  2053                           
  2054                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
  2055  000CE6  8283               	bsf	3971,1,c	;volatile
  2056                           
  2057                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
  2058  000CE8  9083               	bcf	3971,0,c	;volatile
  2059                           
  2060                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
  2061  000CEA  A803               	btfss	EscreveCaractereLCD@data,4,c
  2062  000CEC  D002               	goto	l80
  2063  000CEE  8883               	bsf	3971,4,c	;volatile
  2064  000CF0  D001               	goto	l1471
  2065  000CF2                     l80:
  2066                           
  2067                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
  2068  000CF2  9883               	bcf	3971,4,c	;volatile
  2069  000CF4                     l1471:
  2070                           
  2071                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
  2072  000CF4  AA03               	btfss	EscreveCaractereLCD@data,5,c
  2073  000CF6  D002               	goto	l82
  2074  000CF8  8A83               	bsf	3971,5,c	;volatile
  2075  000CFA  D001               	goto	l1475
  2076  000CFC                     l82:
  2077                           
  2078                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
  2079  000CFC  9A83               	bcf	3971,5,c	;volatile
  2080  000CFE                     l1475:
  2081                           
  2082                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
  2083  000CFE  AC03               	btfss	EscreveCaractereLCD@data,6,c
  2084  000D00  D002               	goto	l84
  2085  000D02  8C83               	bsf	3971,6,c	;volatile
  2086  000D04  D001               	goto	l1479
  2087  000D06                     l84:
  2088                           
  2089                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
  2090  000D06  9C83               	bcf	3971,6,c	;volatile
  2091  000D08                     l1479:
  2092                           
  2093                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
  2094  000D08  AE03               	btfss	EscreveCaractereLCD@data,7,c
  2095  000D0A  D002               	goto	l86
  2096  000D0C  8E83               	bsf	3971,7,c	;volatile
  2097  000D0E  D001               	goto	l87
  2098  000D10                     l86:
  2099                           
  2100                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
  2101  000D10  9E83               	bcf	3971,7,c	;volatile
  2102  000D12                     l87:
  2103                           
  2104                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
  2105  000D12  8083               	bsf	3971,0,c	;volatile
  2106                           
  2107                           ;displayLCD.c: 358: Delay();
  2108  000D14  ECC6  F007         	call	_Delay	;wreg free
  2109                           
  2110                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  2111  000D18  9083               	bcf	3971,0,c	;volatile
  2112                           
  2113                           ;displayLCD.c: 360: Delay();
  2114  000D1A  ECC6  F007         	call	_Delay	;wreg free
  2115                           
  2116                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  2117  000D1E  A003               	btfss	EscreveCaractereLCD@data,0,c
  2118  000D20  D002               	goto	l88
  2119  000D22  8883               	bsf	3971,4,c	;volatile
  2120  000D24  D001               	goto	l89
  2121  000D26                     l88:
  2122                           
  2123                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  2124  000D26  9883               	bcf	3971,4,c	;volatile
  2125  000D28                     l89:
  2126                           
  2127                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  2128  000D28  A203               	btfss	EscreveCaractereLCD@data,1,c
  2129  000D2A  D002               	goto	l90
  2130  000D2C  8A83               	bsf	3971,5,c	;volatile
  2131  000D2E  D001               	goto	l91
  2132  000D30                     l90:
  2133                           
  2134                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  2135  000D30  9A83               	bcf	3971,5,c	;volatile
  2136  000D32                     l91:
  2137                           
  2138                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  2139  000D32  A403               	btfss	EscreveCaractereLCD@data,2,c
  2140  000D34  D002               	goto	l92
  2141  000D36  8C83               	bsf	3971,6,c	;volatile
  2142  000D38  D001               	goto	l93
  2143  000D3A                     l92:
  2144                           
  2145                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  2146  000D3A  9C83               	bcf	3971,6,c	;volatile
  2147  000D3C                     l93:
  2148                           
  2149                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  2150  000D3C  A603               	btfss	EscreveCaractereLCD@data,3,c
  2151  000D3E  D002               	goto	l94
  2152  000D40  8E83               	bsf	3971,7,c	;volatile
  2153  000D42  D001               	goto	l95
  2154  000D44                     l94:
  2155                           
  2156                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  2157  000D44  9E83               	bcf	3971,7,c	;volatile
  2158  000D46                     l95:
  2159                           
  2160                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  2161  000D46  8083               	bsf	3971,0,c	;volatile
  2162                           
  2163                           ;displayLCD.c: 375: Delay();
  2164  000D48  ECC6  F007         	call	_Delay	;wreg free
  2165                           
  2166                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  2167  000D4C  9083               	bcf	3971,0,c	;volatile
  2168                           
  2169                           ;displayLCD.c: 377: Delay();
  2170  000D4E  ECC6  F007         	call	_Delay	;wreg free
  2171  000D52  0012               	return		;funcret
  2172  000D54                     __end_of_EscreveCaractereLCD:
  2173                           	opt stack 0
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           intcon	equ	0xFF2
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           postdec1	equ	0xFE5
  2182                           plusw1	equ	0xFE3
  2183                           fsr1l	equ	0xFE1
  2184                           indf2	equ	0xFDF
  2185                           postinc2	equ	0xFDE
  2186                           plusw2	equ	0xFDB
  2187                           fsr2h	equ	0xFDA
  2188                           fsr2l	equ	0xFD9
  2189                           status	equ	0xFD8
  2190                           
  2191 ;; *************** function _delay_ms *****************
  2192 ;; Defined at:
  2193 ;;		line 190 in file "relogio-3t.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  tempodeatras    2    0[COMRAM] unsigned int 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2207 ;;      Params:         2       0       0       0       0       0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2209 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2210 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2211 ;;Total ram usage:        3 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_main
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text11
  2221  000FB0                     __ptext11:
  2222                           	opt stack 0
  2223  000FB0                     _delay_ms:
  2224                           	opt stack 30
  2225                           
  2226                           ;relogio-3t.c: 192: while(--tempodeatraso){
  2227                           
  2228                           ;incstack = 0
  2229  000FB0  D008               	goto	l1715
  2230  000FB2                     l1713:
  2231                           
  2232                           ;relogio-3t.c: 193: _delay((unsigned long)((1)*(48000000/4000.0)));
  2233  000FB2  0E10               	movlw	16
  2234  000FB4  6E03               	movwf	??_delay_ms& (0+255),c
  2235  000FB6  0E94               	movlw	148
  2236  000FB8                     u1317:
  2237  000FB8  2EE8               	decfsz	wreg,f,c
  2238  000FBA  D7FE               	bra	u1317
  2239  000FBC  2E03               	decfsz	??_delay_ms& (0+255),f,c
  2240  000FBE  D7FC               	bra	u1317
  2241  000FC0  D000               	nop2	
  2242  000FC2                     l1715:
  2243  000FC2  0601               	decf	delay_ms@tempodeatraso,f,c
  2244  000FC4  A0D8               	btfss	status,0,c
  2245  000FC6  0602               	decf	delay_ms@tempodeatraso+1,f,c
  2246  000FC8  5001               	movf	delay_ms@tempodeatraso,w,c
  2247  000FCA  1002               	iorwf	delay_ms@tempodeatraso+1,w,c
  2248  000FCC  B4D8               	btfsc	status,2,c
  2249  000FCE  0012               	return	
  2250  000FD0  D7F0               	goto	l1713
  2251  000FD2                     __end_of_delay_ms:
  2252                           	opt stack 0
  2253                           tblptru	equ	0xFF8
  2254                           tblptrh	equ	0xFF7
  2255                           tblptrl	equ	0xFF6
  2256                           tablat	equ	0xFF5
  2257                           intcon	equ	0xFF2
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           postdec1	equ	0xFE5
  2261                           plusw1	equ	0xFE3
  2262                           fsr1l	equ	0xFE1
  2263                           indf2	equ	0xFDF
  2264                           postinc2	equ	0xFDE
  2265                           plusw2	equ	0xFDB
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _ConfiguraLCD *****************
  2271 ;; Defined at:
  2272 ;;		line 80 in file "displayLCD.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2288 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2289 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2290 ;;Total ram usage:        1 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    2
  2293 ;; This function calls:
  2294 ;;		_Delay
  2295 ;;		_EscreveComandoLCD
  2296 ;; This function is called by:
  2297 ;;		_main
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text12
  2302  000B26                     __ptext12:
  2303                           	opt stack 0
  2304  000B26                     _ConfiguraLCD:
  2305                           	opt stack 28
  2306                           
  2307                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  2308                           
  2309                           ;incstack = 0
  2310  000B26  9495               	bcf	3989,2,c	;volatile
  2311                           
  2312                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  2313  000B28  9295               	bcf	3989,1,c	;volatile
  2314                           
  2315                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  2316  000B2A  9095               	bcf	3989,0,c	;volatile
  2317                           
  2318                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  2319  000B2C  9895               	bcf	3989,4,c	;volatile
  2320                           
  2321                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  2322  000B2E  9A95               	bcf	3989,5,c	;volatile
  2323                           
  2324                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  2325  000B30  9C95               	bcf	3989,6,c	;volatile
  2326                           
  2327                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  2328  000B32  9E95               	bcf	3989,7,c	;volatile
  2329                           
  2330                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  2331  000B34  9483               	bcf	3971,2,c	;volatile
  2332                           
  2333                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  2334  000B36  9283               	bcf	3971,1,c	;volatile
  2335                           
  2336                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  2337  000B38  9083               	bcf	3971,0,c	;volatile
  2338                           
  2339                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  2340  000B3A  9E83               	bcf	3971,7,c	;volatile
  2341                           
  2342                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  2343  000B3C  9C83               	bcf	3971,6,c	;volatile
  2344                           
  2345                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  2346  000B3E  8A83               	bsf	3971,5,c	;volatile
  2347                           
  2348                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  2349  000B40  8883               	bsf	3971,4,c	;volatile
  2350                           
  2351                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  2352  000B42  0EEA               	movlw	234
  2353  000B44  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2354  000B46  0EC3               	movlw	195
  2355  000B48                     u1327:
  2356  000B48  2EE8               	decfsz	wreg,f,c
  2357  000B4A  D7FE               	bra	u1327
  2358  000B4C  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2359  000B4E  D7FC               	bra	u1327
  2360  000B50  F000               	nop	
  2361                           
  2362                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  2363  000B52  8083               	bsf	3971,0,c	;volatile
  2364                           
  2365                           ;displayLCD.c: 117: Delay();
  2366  000B54  ECC6  F007         	call	_Delay	;wreg free
  2367                           
  2368                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  2369  000B58  9083               	bcf	3971,0,c	;volatile
  2370                           
  2371                           ;displayLCD.c: 119: Delay();
  2372  000B5A  ECC6  F007         	call	_Delay	;wreg free
  2373                           
  2374                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  2375  000B5E  0E4E               	movlw	78
  2376  000B60  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2377  000B62  0EEB               	movlw	235
  2378  000B64                     u1337:
  2379  000B64  2EE8               	decfsz	wreg,f,c
  2380  000B66  D7FE               	bra	u1337
  2381  000B68  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2382  000B6A  D7FC               	bra	u1337
  2383  000B6C  F000               	nop	
  2384                           
  2385                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  2386  000B6E  8083               	bsf	3971,0,c	;volatile
  2387                           
  2388                           ;displayLCD.c: 128: Delay();
  2389  000B70  ECC6  F007         	call	_Delay	;wreg free
  2390                           
  2391                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  2392  000B74  9083               	bcf	3971,0,c	;volatile
  2393                           
  2394                           ;displayLCD.c: 130: Delay();
  2395  000B76  ECC6  F007         	call	_Delay	;wreg free
  2396                           
  2397                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  2398  000B7A  0E4E               	movlw	78
  2399  000B7C  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2400  000B7E  0EEB               	movlw	235
  2401  000B80                     u1347:
  2402  000B80  2EE8               	decfsz	wreg,f,c
  2403  000B82  D7FE               	bra	u1347
  2404  000B84  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2405  000B86  D7FC               	bra	u1347
  2406  000B88  F000               	nop	
  2407                           
  2408                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  2409  000B8A  8083               	bsf	3971,0,c	;volatile
  2410                           
  2411                           ;displayLCD.c: 139: Delay();
  2412  000B8C  ECC6  F007         	call	_Delay	;wreg free
  2413                           
  2414                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  2415  000B90  9083               	bcf	3971,0,c	;volatile
  2416                           
  2417                           ;displayLCD.c: 141: Delay();
  2418  000B92  ECC6  F007         	call	_Delay	;wreg free
  2419                           
  2420                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  2421  000B96  9E83               	bcf	3971,7,c	;volatile
  2422                           
  2423                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  2424  000B98  9C83               	bcf	3971,6,c	;volatile
  2425                           
  2426                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  2427  000B9A  8A83               	bsf	3971,5,c	;volatile
  2428                           
  2429                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  2430  000B9C  9883               	bcf	3971,4,c	;volatile
  2431                           
  2432                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  2433  000B9E  8083               	bsf	3971,0,c	;volatile
  2434                           
  2435                           ;displayLCD.c: 152: Delay();
  2436  000BA0  ECC6  F007         	call	_Delay	;wreg free
  2437                           
  2438                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  2439  000BA4  9083               	bcf	3971,0,c	;volatile
  2440                           
  2441                           ;displayLCD.c: 154: Delay();
  2442  000BA6  ECC6  F007         	call	_Delay	;wreg free
  2443                           
  2444                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  2445  000BAA  0E28               	movlw	40
  2446  000BAC  EC2B  F006         	call	_EscreveComandoLCD
  2447                           
  2448                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  2449  000BB0  0E06               	movlw	6
  2450  000BB2  EC2B  F006         	call	_EscreveComandoLCD
  2451                           
  2452                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  2453  000BB6  0E0E               	movlw	14
  2454  000BB8  EC2B  F006         	call	_EscreveComandoLCD
  2455                           
  2456                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  2457  000BBC  0E01               	movlw	1
  2458  000BBE  EC2B  F006         	call	_EscreveComandoLCD
  2459  000BC2  0012               	return		;funcret
  2460  000BC4                     __end_of_ConfiguraLCD:
  2461                           	opt stack 0
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           intcon	equ	0xFF2
  2467                           postinc0	equ	0xFEE
  2468                           wreg	equ	0xFE8
  2469                           postdec1	equ	0xFE5
  2470                           plusw1	equ	0xFE3
  2471                           fsr1l	equ	0xFE1
  2472                           indf2	equ	0xFDF
  2473                           postinc2	equ	0xFDE
  2474                           plusw2	equ	0xFDB
  2475                           fsr2h	equ	0xFDA
  2476                           fsr2l	equ	0xFD9
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function _EscreveComandoLCD *****************
  2480 ;; Defined at:
  2481 ;;		line 172 in file "displayLCD.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  cmd             1    wreg     unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  cmd             1    2[COMRAM] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0
  2496 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2498 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2499 ;;Total ram usage:        1 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    1
  2502 ;; This function calls:
  2503 ;;		_Delay
  2504 ;; This function is called by:
  2505 ;;		_ConfiguraLCD
  2506 ;;		_main
  2507 ;;		_CriaCaractereLCD
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text13
  2512  000C56                     __ptext13:
  2513                           	opt stack 0
  2514  000C56                     _EscreveComandoLCD:
  2515                           	opt stack 29
  2516                           
  2517                           ;incstack = 0
  2518                           ;EscreveComandoLCD@cmd stored from wreg
  2519  000C56  6E03               	movwf	EscreveComandoLCD@cmd,c
  2520                           
  2521                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  2522  000C58  9483               	bcf	3971,2,c	;volatile
  2523                           
  2524                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  2525  000C5A  9283               	bcf	3971,1,c	;volatile
  2526                           
  2527                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  2528  000C5C  9083               	bcf	3971,0,c	;volatile
  2529                           
  2530                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  2531  000C5E  A803               	btfss	EscreveComandoLCD@cmd,4,c
  2532  000C60  D002               	goto	l29
  2533  000C62  8883               	bsf	3971,4,c	;volatile
  2534  000C64  D001               	goto	l1589
  2535  000C66                     l29:
  2536                           
  2537                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  2538  000C66  9883               	bcf	3971,4,c	;volatile
  2539  000C68                     l1589:
  2540                           
  2541                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  2542  000C68  AA03               	btfss	EscreveComandoLCD@cmd,5,c
  2543  000C6A  D002               	goto	l31
  2544  000C6C  8A83               	bsf	3971,5,c	;volatile
  2545  000C6E  D001               	goto	l1593
  2546  000C70                     l31:
  2547                           
  2548                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  2549  000C70  9A83               	bcf	3971,5,c	;volatile
  2550  000C72                     l1593:
  2551                           
  2552                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  2553  000C72  AC03               	btfss	EscreveComandoLCD@cmd,6,c
  2554  000C74  D002               	goto	l33
  2555  000C76  8C83               	bsf	3971,6,c	;volatile
  2556  000C78  D001               	goto	l1597
  2557  000C7A                     l33:
  2558                           
  2559                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  2560  000C7A  9C83               	bcf	3971,6,c	;volatile
  2561  000C7C                     l1597:
  2562                           
  2563                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  2564  000C7C  AE03               	btfss	EscreveComandoLCD@cmd,7,c
  2565  000C7E  D002               	goto	l35
  2566  000C80  8E83               	bsf	3971,7,c	;volatile
  2567  000C82  D001               	goto	l36
  2568  000C84                     l35:
  2569                           
  2570                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  2571  000C84  9E83               	bcf	3971,7,c	;volatile
  2572  000C86                     l36:
  2573                           
  2574                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  2575  000C86  8083               	bsf	3971,0,c	;volatile
  2576                           
  2577                           ;displayLCD.c: 191: Delay();
  2578  000C88  ECC6  F007         	call	_Delay	;wreg free
  2579                           
  2580                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  2581  000C8C  9083               	bcf	3971,0,c	;volatile
  2582                           
  2583                           ;displayLCD.c: 193: Delay();
  2584  000C8E  ECC6  F007         	call	_Delay	;wreg free
  2585                           
  2586                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  2587  000C92  A003               	btfss	EscreveComandoLCD@cmd,0,c
  2588  000C94  D002               	goto	l37
  2589  000C96  8883               	bsf	3971,4,c	;volatile
  2590  000C98  D001               	goto	l38
  2591  000C9A                     l37:
  2592                           
  2593                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  2594  000C9A  9883               	bcf	3971,4,c	;volatile
  2595  000C9C                     l38:
  2596                           
  2597                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  2598  000C9C  A203               	btfss	EscreveComandoLCD@cmd,1,c
  2599  000C9E  D002               	goto	l39
  2600  000CA0  8A83               	bsf	3971,5,c	;volatile
  2601  000CA2  D001               	goto	l40
  2602  000CA4                     l39:
  2603                           
  2604                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  2605  000CA4  9A83               	bcf	3971,5,c	;volatile
  2606  000CA6                     l40:
  2607                           
  2608                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  2609  000CA6  A403               	btfss	EscreveComandoLCD@cmd,2,c
  2610  000CA8  D002               	goto	l41
  2611  000CAA  8C83               	bsf	3971,6,c	;volatile
  2612  000CAC  D001               	goto	l42
  2613  000CAE                     l41:
  2614                           
  2615                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  2616  000CAE  9C83               	bcf	3971,6,c	;volatile
  2617  000CB0                     l42:
  2618                           
  2619                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  2620  000CB0  A603               	btfss	EscreveComandoLCD@cmd,3,c
  2621  000CB2  D002               	goto	l43
  2622  000CB4  8E83               	bsf	3971,7,c	;volatile
  2623  000CB6  D001               	goto	l44
  2624  000CB8                     l43:
  2625                           
  2626                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  2627  000CB8  9E83               	bcf	3971,7,c	;volatile
  2628  000CBA                     l44:
  2629                           
  2630                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  2631  000CBA  8083               	bsf	3971,0,c	;volatile
  2632                           
  2633                           ;displayLCD.c: 207: Delay();
  2634  000CBC  ECC6  F007         	call	_Delay	;wreg free
  2635                           
  2636                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  2637  000CC0  9083               	bcf	3971,0,c	;volatile
  2638                           
  2639                           ;displayLCD.c: 209: Delay();
  2640  000CC2  ECC6  F007         	call	_Delay	;wreg free
  2641                           
  2642                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  2643  000CC6  0403               	decf	EscreveComandoLCD@cmd,w,c
  2644  000CC8  B4D8               	btfsc	status,2,c
  2645  000CCA  D008               	goto	l1625
  2646  000CCC  0E02               	movlw	2
  2647  000CCE  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  2648  000CD0  B4D8               	btfsc	status,2,c
  2649  000CD2  D004               	goto	l1625
  2650  000CD4  0E03               	movlw	3
  2651  000CD6  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  2652  000CD8  A4D8               	btfss	status,2,c
  2653  000CDA  0012               	return	
  2654  000CDC                     l1625:
  2655                           
  2656                           ;displayLCD.c: 215: { Delay(); }
  2657  000CDC  ECC6  F007         	call	_Delay	;wreg free
  2658  000CE0  0012               	return	
  2659  000CE2                     __end_of_EscreveComandoLCD:
  2660                           	opt stack 0
  2661                           tblptru	equ	0xFF8
  2662                           tblptrh	equ	0xFF7
  2663                           tblptrl	equ	0xFF6
  2664                           tablat	equ	0xFF5
  2665                           intcon	equ	0xFF2
  2666                           postinc0	equ	0xFEE
  2667                           wreg	equ	0xFE8
  2668                           postdec1	equ	0xFE5
  2669                           plusw1	equ	0xFE3
  2670                           fsr1l	equ	0xFE1
  2671                           indf2	equ	0xFDF
  2672                           postinc2	equ	0xFDE
  2673                           plusw2	equ	0xFDB
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _Delay *****************
  2679 ;; Defined at:
  2680 ;;		line 54 in file "displayLCD.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  Cnt2            1    1[COMRAM] unsigned char 
  2685 ;;  Cnt1            1    0[COMRAM] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0
  2696 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2698 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2699 ;;Total ram usage:        2 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_ConfiguraLCD
  2705 ;;		_EscreveComandoLCD
  2706 ;;		_EnderecoCursor
  2707 ;;		_EscreveCaractereLCD
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text14
  2712  000F8C                     __ptext14:
  2713                           	opt stack 0
  2714  000F8C                     _Delay:
  2715                           	opt stack 27
  2716                           
  2717                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  2718                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  2719                           
  2720                           ;incstack = 0
  2721  000F8C  0E00               	movlw	0
  2722  000F8E  6E01               	movwf	Delay@Cnt1,c
  2723  000F90                     l1409:
  2724  000F90  0E1D               	movlw	29
  2725  000F92  6401               	cpfsgt	Delay@Cnt1,c
  2726  000F94  D001               	goto	l19
  2727  000F96  0012               	return	
  2728  000F98                     l19:
  2729                           
  2730                           ;displayLCD.c: 59: {
  2731                           ;displayLCD.c: 60: __nop();
  2732  000F98  F000               	nop	
  2733                           
  2734                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  2735  000F9A  0E00               	movlw	0
  2736  000F9C  6E02               	movwf	Delay@Cnt2,c
  2737  000F9E                     l1415:
  2738  000F9E  0E1D               	movlw	29
  2739  000FA0  6402               	cpfsgt	Delay@Cnt2,c
  2740  000FA2  D001               	goto	l21
  2741  000FA4  D003               	goto	l1423
  2742  000FA6                     l21:
  2743                           
  2744                           ;displayLCD.c: 62: {
  2745                           ;displayLCD.c: 63: __nop();
  2746  000FA6  F000               	nop	
  2747  000FA8  2A02               	incf	Delay@Cnt2,f,c
  2748  000FAA  D7F9               	goto	l1415
  2749  000FAC                     l1423:
  2750  000FAC  2A01               	incf	Delay@Cnt1,f,c
  2751  000FAE  D7F0               	goto	l1409
  2752  000FB0                     __end_of_Delay:
  2753                           	opt stack 0
  2754                           tblptru	equ	0xFF8
  2755                           tblptrh	equ	0xFF7
  2756                           tblptrl	equ	0xFF6
  2757                           tablat	equ	0xFF5
  2758                           intcon	equ	0xFF2
  2759                           postinc0	equ	0xFEE
  2760                           wreg	equ	0xFE8
  2761                           postdec1	equ	0xFE5
  2762                           plusw1	equ	0xFE3
  2763                           fsr1l	equ	0xFE1
  2764                           indf2	equ	0xFDF
  2765                           postinc2	equ	0xFDE
  2766                           plusw2	equ	0xFDB
  2767                           fsr2h	equ	0xFDA
  2768                           fsr2l	equ	0xFD9
  2769                           status	equ	0xFD8
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           intcon	equ	0xFF2
  2775                           postinc0	equ	0xFEE
  2776                           wreg	equ	0xFE8
  2777                           postdec1	equ	0xFE5
  2778                           plusw1	equ	0xFE3
  2779                           fsr1l	equ	0xFE1
  2780                           indf2	equ	0xFDF
  2781                           postinc2	equ	0xFDE
  2782                           plusw2	equ	0xFDB
  2783                           fsr2h	equ	0xFDA
  2784                           fsr2l	equ	0xFD9
  2785                           status	equ	0xFD8
  2786                           
  2787                           	psect	rparam
  2788  0000                     tblptru	equ	0xFF8
  2789                           tblptrh	equ	0xFF7
  2790                           tblptrl	equ	0xFF6
  2791                           tablat	equ	0xFF5
  2792                           intcon	equ	0xFF2
  2793                           postinc0	equ	0xFEE
  2794                           wreg	equ	0xFE8
  2795                           postdec1	equ	0xFE5
  2796                           plusw1	equ	0xFE3
  2797                           fsr1l	equ	0xFE1
  2798                           indf2	equ	0xFDF
  2799                           postinc2	equ	0xFDE
  2800                           plusw2	equ	0xFDB
  2801                           fsr2h	equ	0xFDA
  2802                           fsr2l	equ	0xFD9
  2803                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    108
    Data        7
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      60
    BANK0           160     73      73
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@Texto_2(BANK0[17]), main@Texto_1(BANK0[17]), main@Texto_0(BANK0[17]), EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_pos_numero
    _pos_numero->_EscreveInteiroLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveInteiroLCD->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                76    76      0    9519
                                             35 COMRAM     1     1      0
                                              0 BANK0     73    73      0
                       _ConfiguraLCD
                  _EscreveComandoLCD
                 _EscreveFraseRamLCD
                  _EscreveInteiroLCD
                   _PosicaoCursorLCD
                           _delay_ms
                         _pos_numero
 ---------------------------------------------------------------------------------
 (1) _pos_numero                                           2     1      1    4084
                                             33 COMRAM     2     1      1
                  _EscreveInteiroLCD
                   _PosicaoCursorLCD
 ---------------------------------------------------------------------------------
 (2) _PosicaoCursorLCD                                     3     2      1    1156
                                              3 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (3) _EnderecoCursor                                       1     1      0     246
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (2) _EscreveInteiroLCD                                    9     7      2    2582
                                             24 COMRAM     9     7      2
                 _EscreveFraseRamLCD
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _EscreveFraseRamLCD                                   2     0      2     633
                                              3 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (4) _EscreveCaractereLCD                                  1     1      0     268
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2      86
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     426
                                              3 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (1) _EscreveComandoLCD                                    1     1      0     334
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (4) _Delay                                                2     2      0      92
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveComandoLCD
     _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _EscreveInteiroLCD
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   _delay_ms
   _pos_numero
     _EscreveInteiroLCD
       _EscreveFraseRamLCD
         _EscreveCaractereLCD
           _Delay
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _PosicaoCursorLCD
       _EnderecoCursor
         _Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      49       5       45.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      3C       1       63.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      85      20        0.0%
DATA                 0      0      85       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Nov 05 15:57:34 2020

                          l21 0FA6                            l31 0C70                            l40 0CA6  
                          l41 0CAE                            l33 0C7A                            l42 0CB0  
                          l19 0F98                            l43 0CB8                            l35 0C84  
                          l51 0D66                            l44 0CBA                            l36 0C86  
                          l60 0D9C                            l37 0C9A                            l29 0C66  
                          l61 0DA4                            l53 0D70                            l38 0C9C  
                          l62 0DA6                            l70 0DC8                            l39 0CA4  
                          l63 0DAE                            l55 0D7A                            l80 0CF2  
                          l64 0DB0                            l56 0D7C                            l57 0D90  
                          l90 0D30                            l82 0CFC                            l58 0D92  
                          l91 0D32                            l59 0D9A                            l92 0D3A  
                          l84 0D06                            l93 0D3C                            l94 0D44  
                          l86 0D10                            l95 0D46                            l87 0D12  
                          l88 0D26                            l89 0D28                           l193 0A58  
                         l615 0B02                           l704 0EEC                           l694 0E68  
                 main@Texto_0 0071                   main@Texto_1 0093                   main@Texto_2 0082  
                 main@Texto_3 0060                           wreg 000FE8                          l1423 0FAC  
                        l1415 0F9E                          l1503 0A8A                          l1409 0F90  
                        l1433 0E36                          l1513 0AC4                          l1435 0E3E  
                        l1445 0E5E                          l1437 0E42                          l1461 0EE2  
                        l1453 0EC2                          l1541 0D72                          l1471 0CF4  
                        l1455 0ECA                          l1625 0CDC                          l1713 0FB2  
                        l1457 0ECE                          l1537 0D68                          l1641 0DF0  
                        l1633 0DD4                          l1715 0FC2                          l1475 0CFE  
                        l1571 0E96                          l1731 0C02                          l1723 0BDA  
                        l1581 0F7C                          l1645 0DFE                          l1637 0DE2  
                        l1741 0C34                          l1733 0C0C                          l1725 0BE4  
                        l1479 0D08                          l1735 0C18                          l1727 0BF0  
                        l1719 0BC8                          l1593 0C72                          l1577 0F6A  
                        l1649 0E04                          l1745 0C40                          l1739 0C2A  
                        l1597 0C7C                          l1589 0C68                          l1865 09B0  
                        l1857 0988                          l1877 09EA                          l1895 0A3E  
                        STR_1 086D                          u1210 0996                          u1071 0F00  
                        u1240 09BE                          u1160 0888                          u1170 08A0  
                        u1228 0998                          u1180 08B8                          u1317 0FB8  
                        u1270 09F8                          u1190 08D0                          u1327 0B48  
                        u1337 0B64                          u1258 09C0                          u1347 0B80  
                        u1288 09FA                          _TMR0 000FD6                          _TMR1 000FCE  
                        _TMR3 000FB2                   main@minutos 00A7                          _main 087A  
                        _itoa 0E72                          fsr2h 000FDA                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          _utoa 0A82  
                        start 0000                  ___param_bank 000000    __end_of_EscreveFraseRamLCD 0F8C  
                       ?_main 0001                         ?_itoa 0011                         ?_utoa 0008  
                       _T0CON 000FD5                         _T1CON 000FCD                         _T3CON 000FB1  
             __end_of___lwdiv 0E72               __end_of___lwmod 0EF6                         _PORTB 000F81  
                       _TRISB 000F93                         _Delay 0F8C               __end_of_dpowers 0829  
                main@segundos 00A6          EscreveComandoLCD@cmd 0003                         tablat 000FF5  
                       plusw1 000FE3                         plusw2 000FDB                pos_numero@casa 0022  
                       utoa@c 0010                         utoa@v 000E                         status 000FD8  
             __initialization 0F32                  __end_of_main 0A82                  __end_of_itoa 0EB4  
                __end_of_utoa 0B26                        ??_main 0024          __end_of_ConfiguraLCD 0BC4  
                      ??_itoa 0017                        ??_utoa 000E                 __activetblptr 000002  
           _EscreveComandoLCD 0C56                        ?_Delay 0001            ?_EscreveComandoLCD 0001  
                      _ADCON1 000FC1           ??_EscreveComandoLCD 0003                        _TMR0IF 007F92  
                      _TMR1IF 007CF0                        _TMR3IF 007D09              __end_of_delay_ms 0FD2  
           ?_PosicaoCursorLCD 0004                     ??___lwdiv 0005  __size_of_EscreveCaractereLCD 0072  
                   ??___lwmod 0005            ??_PosicaoCursorLCD 0005                        clear_0 0F58  
   __end_of_EscreveComandoLCD 0CE2                        itoa@cp 0017             _EscreveInteiroLCD 0EF6  
                __pdataCOMRAM 0036                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8            ?_EscreveInteiroLCD 0019  
     __size_of_EnderecoCursor 006A               pos_numero@valor 0023           ??_EscreveInteiroLCD 001B  
                  __accesstop 0060       __end_of__initialization 0F5E                 ___rparam_used 000001  
               __end_of_Delay 0FB0                __pcstackCOMRAM 0001     __end_of_EscreveInteiroLCD 0F32  
                     ??_Delay 0001         __size_of_ConfiguraLCD 009E    __size_of_EscreveComandoLCD 008C  
          _EscreveFraseRamLCD 0F68                     ?_delay_ms 0001           ?_EscreveFraseRamLCD 0004  
                _ConfiguraLCD 0B26                       __Hparam 0000                       __Lparam 0000  
                     ___lwdiv 0E20                       ___lwmod 0EB4          ??_EscreveFraseRamLCD 0006  
                __psmallconst 0800                       __pcinit 0F32                       __ramtop 0800  
  __size_of_EscreveInteiroLCD 003C                       __ptext0 087A                       __ptext1 0BC4  
                     __ptext2 0DBE                       __ptext3 0D54                       __ptext4 0EF6  
                     __ptext5 0E72                       __ptext6 0A82                       __ptext7 0EB4  
                     __ptext8 0E20                       __ptext9 0F68                       _dpowers 0801  
                  ??_delay_ms 0003                _EnderecoCursor 0D54                     Delay@Cnt1 0001  
                   Delay@Cnt2 0002           _EscreveCaractereLCD 0CE2          end_of_initialization 0F5E  
                     ftoa@buf 0025                       itoa@buf 0011                       itoa@val 0013  
               __Lmediumconst 0000             __end_ofmain@F3941 084B             __end_ofmain@F3943 083A  
           __end_ofmain@F3937 086D             __end_ofmain@F3939 085C                       postdec1 000FE5  
                     postinc0 000FEE                       postinc2 000FDE          ?_EscreveCaractereLCD 0001  
                     utoa@buf 0008                       utoa@val 000A   PosicaoCursorLCD@EnderecoLCD 0006  
                   _PORTBbits 000F81                     _PORTDbits 000F83                    _pos_numero 0BC4  
      __end_of_EnderecoCursor 0DBE                     _TRISDbits 000F95     __size_of_PosicaoCursorLCD 0062  
       ??_EscreveCaractereLCD 0003                 __pidataCOMRAM 0FD2               ?_EnderecoCursor 0001  
         start_initialization 0F32      EscreveFraseRamLCD@buffer 0004              main@milisegundos 00A4  
                 ?_pos_numero 0022                   __pbssCOMRAM 0025                 __pcstackBANK0 0060  
           __size_of_delay_ms 0022              ___lwdiv@dividend 0001                      ?___lwdiv 0001  
                    ?___lwmod 0001        EscreveInteiroLCD@F4004 0036                   __smallconst 0800  
              __size_of_Delay 0024              _PosicaoCursorLCD 0DBE              ___lwdiv@quotient 0005  
      EscreveInteiroLCD@valor 0019        EscreveInteiroLCD@texto 001B        EnderecoCursor@endereco 0003  
         __size_of_pos_numero 0092       EscreveCaractereLCD@data 0003                     main@F3941 083A  
                   main@F3943 0829                     main@F3937 085C                     main@F3939 084B  
 __size_of_EscreveFraseRamLCD 0024                     main@horas 00A8                     copy_data0 0F46  
       delay_ms@tempodeatraso 0001                      __Hrparam 0000                      __Lrparam 0000  
            ??_EnderecoCursor 0003              __size_of___lwdiv 0052              __size_of___lwmod 0042  
                    _delay_ms 0FB0               ___lwdiv@divisor 0003               ___lwdiv@counter 0007  
                    __ptext10 0CE2                      __ptext11 0FB0                      __ptext12 0B26  
                    __ptext13 0C56                      __ptext14 0F8C                 __size_of_main 0208  
               __size_of_itoa 0042                 __size_of_utoa 00A4   __end_of_EscreveCaractereLCD 0D54  
                ??_pos_numero 0023                      itoa@base 0015              ___lwmod@dividend 0001  
               ?_ConfiguraLCD 0001            __end_of_pos_numero 0C56      __end_of_PosicaoCursorLCD 0E20  
      PosicaoCursorLCD@coluna 0004                      utoa@base 000C               ___lwmod@divisor 0003  
             ___lwmod@counter 0005         PosicaoCursorLCD@linha 0005                ??_ConfiguraLCD 0004  
