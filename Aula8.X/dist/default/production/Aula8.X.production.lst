

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Nov 12 16:19:12 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.41
    34                           ; Generated 25/01/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  000F50                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for EscreveInteiroLCD@F4004
    73  000F50  30                 	db	48
    74  000F51  30                 	db	48
    75  000F52  30                 	db	48
    76  000F53  30                 	db	48
    77  000F54  30                 	db	48
    78  000F55  30                 	db	48
    79  000F56  00                 	db	0
    80                           
    81                           	psect	smallconst
    82  000800                     __psmallconst:
    83                           	opt stack 0
    84  000800  00                 	db	0
    85  000801  0001               	dw	1
    86  000803  0000               	dw	0
    87  000805  000A               	dw	10
    88  000807  0000               	dw	0
    89  000809  0064               	dw	100
    90  00080B  0000               	dw	0
    91  00080D  03E8               	dw	1000
    92  00080F  0000               	dw	0
    93  000811  2710               	dw	10000
    94  000813  0000               	dw	0
    95  000815  86A0               	dw	34464
    96  000817  0001               	dw	1
    97  000819  4240               	dw	16960
    98  00081B  000F               	dw	15
    99  00081D  9680               	dw	38528
   100  00081F  0098               	dw	152
   101  000821  E100               	dw	57600
   102  000823  05F5               	dw	1525
   103  000825  CA00               	dw	51712
   104  000827  3B9A               	dw	15258
   105  000829                     __end_of_dpowers:
   106                           	opt stack 0
   107  000829                     main@F4005:
   108                           	opt stack 0
   109  000829  20                 	db	32
   110  00082A  20                 	db	32
   111  00082B  20                 	db	32
   112  00082C  20                 	db	32
   113  00082D  20                 	db	32
   114  00082E  20                 	db	32
   115  00082F  20                 	db	32
   116  000830  20                 	db	32
   117  000831  20                 	db	32
   118  000832  20                 	db	32
   119  000833  20                 	db	32
   120  000834  20                 	db	32
   121  000835  20                 	db	32
   122  000836  20                 	db	32
   123  000837  20                 	db	32
   124  000838  20                 	db	32
   125  000839  00                 	db	0
   126  00083A                     __end_ofmain@F4005:
   127                           	opt stack 0
   128  00083A                     main@F4003:
   129                           	opt stack 0
   130  00083A  43                 	db	67
   131  00083B  4F                 	db	79
   132  00083C  4E                 	db	78
   133  00083D  54                 	db	84
   134  00083E  41                 	db	65
   135  00083F  44                 	db	68
   136  000840  4F                 	db	79
   137  000841  52                 	db	82
   138  000842  20                 	db	32
   139  000843  3D                 	db	61
   140  000844  20                 	db	32
   141  000845  20                 	db	32
   142  000846  20                 	db	32
   143  000847  20                 	db	32
   144  000848  20                 	db	32
   145  000849  20                 	db	32
   146  00084A  00                 	db	0
   147  00084B                     __end_ofmain@F4003:
   148                           	opt stack 0
   149  00084B                     main@F4001:
   150                           	opt stack 0
   151  00084B  20                 	db	32
   152  00084C  20                 	db	32
   153  00084D  49                 	db	73
   154  00084E  4E                 	db	78
   155  00084F  54                 	db	84
   156  000850  45                 	db	69
   157  000851  52                 	db	82
   158  000852  52                 	db	82
   159  000853  55                 	db	85
   160  000854  50                 	db	80
   161  000855  43                 	db	67
   162  000856  4F                 	db	79
   163  000857  45                 	db	69
   164  000858  53                 	db	83
   165  000859  20                 	db	32
   166  00085A  20                 	db	32
   167  00085B  00                 	db	0
   168  00085C                     __end_ofmain@F4001:
   169                           	opt stack 0
   170  00085C                     main@F3999:
   171                           	opt stack 0
   172  00085C  46                 	db	70
   173  00085D  41                 	db	65
   174  00085E  54                 	db	84
   175  00085F  45                 	db	69
   176  000860  43                 	db	67
   177  000861  20                 	db	32
   178  000862  53                 	db	83
   179  000863  54                 	db	84
   180  000864  4F                 	db	79
   181  000865  2E                 	db	46
   182  000866  20                 	db	32
   183  000867  41                 	db	65
   184  000868  4E                 	db	78
   185  000869  44                 	db	68
   186  00086A  52                 	db	82
   187  00086B  45                 	db	69
   188  00086C  00                 	db	0
   189  00086D                     __end_ofmain@F3999:
   190                           	opt stack 0
   191  0000                     _PORTBbits	set	3969
   192  0000                     _PORTEbits	set	3972
   193  0000                     _INTCON2bits	set	4081
   194  0000                     _INTCON3bits	set	4080
   195  0000                     _INTCONbits	set	4082
   196  0000                     _LATB	set	3978
   197  0000                     _TRISE	set	3990
   198  0000                     _TRISB	set	3987
   199  0000                     _ADCON1	set	4033
   200  0000                     _PORTDbits	set	3971
   201  0000                     _TRISDbits	set	3989
   202  0000                     _INT1IF	set	32640
   203  0000                     _INT1IE	set	32643
   204  0000                     _INT0IF	set	32657
   205  0000                     _INT0IE	set	32660
   206  0000                     _IPEN	set	32391
   207  00086D  25                 	db	37
   208  00086E  6C                 	db	108	;'l'
   209  00086F  75                 	db	117	;'u'
   210  000870  2E                 	db	46
   211  000871  25                 	db	37
   212  000872  36                 	db	54	;'6'
   213  000873  2E                 	db	46
   214  000874  36                 	db	54	;'6'
   215  000875  6C                 	db	108	;'l'
   216  000876  75                 	db	117	;'u'
   217  000877  00                 	db	0
   218  000878                     STR_1:
   219  000878  30                 	db	48	;'0'
   220  000879  20                 	db	32
   221  00087A  20                 	db	32
   222  00087B  00                 	db	0
   223  00087C  00                 	db	0	; dummy byte at the end
   224  0000                     
   225                           ; #config settings
   226                           
   227                           	psect	cinit
   228  000E90                     __pcinit:
   229                           	opt stack 0
   230  000E90                     start_initialization:
   231                           	opt stack 0
   232  000E90                     __initialization:
   233                           	opt stack 0
   234                           
   235                           ; Initialize objects allocated to COMRAM (7 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237  000E90  0E50               	movlw	low __pidataCOMRAM
   238  000E92  6EF6               	movwf	tblptrl,c
   239  000E94  0E0F               	movlw	high __pidataCOMRAM
   240  000E96  6EF7               	movwf	tblptrh,c
   241  000E98  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242  000E9A  6EF8               	movwf	tblptru,c
   243  000E9C  EE00  F042         	lfsr	0,__pdataCOMRAM
   244  000EA0  EE10 F007          	lfsr	1,7
   245  000EA4                     copy_data0:
   246  000EA4  0009               	tblrd		*+
   247  000EA6  CFF5 FFEE          	movff	tablat,postinc0
   248  000EAA  50E5               	movf	postdec1,w,c
   249  000EAC  50E1               	movf	fsr1l,w,c
   250  000EAE  E1FA               	bnz	copy_data0
   251                           
   252                           ; Clear objects allocated to BANK0 (1 bytes)
   253  000EB0  0100               	movlb	0
   254  000EB2  6BA4               	clrf	__pbssBANK0& (0+255),b
   255                           
   256                           ; Clear objects allocated to COMRAM (17 bytes)
   257  000EB4  EE00  F031         	lfsr	0,__pbssCOMRAM
   258  000EB8  0E11               	movlw	17
   259  000EBA                     clear_0:
   260  000EBA  6AEE               	clrf	postinc0,c
   261  000EBC  06E8               	decf	wreg,f,c
   262  000EBE  E1FD               	bnz	clear_0
   263  000EC0                     end_of_initialization:
   264                           	opt stack 0
   265  000EC0                     __end_of__initialization:
   266                           	opt stack 0
   267  000EC0  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   268  000EC2  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269  000EC4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   270  000EC6  6EF8               	movwf	tblptru,c
   271  000EC8  0100               	movlb	0
   272  000ECA  EF3F  F004         	goto	_main	;jump to C main() function
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	bssCOMRAM
   283  000031                     __pbssCOMRAM:
   284                           	opt stack 0
   285  000031                     ftoa@buf:
   286                           	opt stack 0
   287  000031                     	ds	17
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           postdec1	equ	0xFE5
   295                           fsr1l	equ	0xFE1
   296                           
   297                           	psect	dataCOMRAM
   298  000042                     __pdataCOMRAM:
   299                           	opt stack 0
   300  000042                     EscreveInteiroLCD@F4004:
   301                           	opt stack 0
   302  000042                     	ds	7
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	bssBANK0
   313  0000A4                     __pbssBANK0:
   314                           	opt stack 0
   315  0000A4                     _contador:
   316                           	opt stack 0
   317  0000A4                     	ds	1
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	cstackBANK0
   328  000060                     __pcstackBANK0:
   329                           	opt stack 0
   330  000060                     main@Texto_3:
   331                           	opt stack 0
   332                           
   333                           ; 17 bytes @ 0x0
   334  000060                     	ds	17
   335  000071                     main@Texto_0:
   336                           	opt stack 0
   337                           
   338                           ; 17 bytes @ 0x11
   339  000071                     	ds	17
   340  000082                     main@Texto_2:
   341                           	opt stack 0
   342                           
   343                           ; 17 bytes @ 0x22
   344  000082                     	ds	17
   345  000093                     main@Texto_1:
   346                           	opt stack 0
   347                           
   348                           ; 17 bytes @ 0x33
   349  000093                     	ds	17
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           postdec1	equ	0xFE5
   357                           fsr1l	equ	0xFE1
   358                           
   359                           	psect	cstackCOMRAM
   360  000001                     __pcstackCOMRAM:
   361                           	opt stack 0
   362  000001                     ??_InterrupcoesAlta:
   363                           
   364                           ; 1 bytes @ 0x0
   365  000001                     	ds	15
   366  000010                     ?___lwdiv:
   367                           	opt stack 0
   368  000010                     ?___lwmod:
   369                           	opt stack 0
   370  000010                     Delay@Cnt1:
   371                           	opt stack 0
   372  000010                     delay_ms@tempodeatraso:
   373                           	opt stack 0
   374  000010                     ___lwdiv@dividend:
   375                           	opt stack 0
   376  000010                     ___lwmod@dividend:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0xF
   380  000010                     	ds	1
   381  000011                     Delay@Cnt2:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x10
   385  000011                     	ds	1
   386  000012                     ??_delay_ms:
   387  000012                     EscreveComandoLCD@cmd:
   388                           	opt stack 0
   389  000012                     EnderecoCursor@endereco:
   390                           	opt stack 0
   391  000012                     EscreveCaractereLCD@data:
   392                           	opt stack 0
   393  000012                     ___lwdiv@divisor:
   394                           	opt stack 0
   395  000012                     ___lwmod@divisor:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x11
   399  000012                     	ds	1
   400  000013                     ??_ConfiguraLCD:
   401  000013                     PosicaoCursorLCD@coluna:
   402                           	opt stack 0
   403  000013                     EscreveFraseRamLCD@buffer:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x12
   407  000013                     	ds	1
   408  000014                     PosicaoCursorLCD@linha:
   409                           	opt stack 0
   410  000014                     ___lwmod@counter:
   411                           	opt stack 0
   412  000014                     ___lwdiv@quotient:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x13
   416  000014                     	ds	1
   417  000015                     PosicaoCursorLCD@EnderecoLCD:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x14
   421  000015                     	ds	1
   422  000016                     ___lwdiv@counter:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x15
   426  000016                     	ds	1
   427  000017                     utoa@buf:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x16
   431  000017                     	ds	2
   432  000019                     utoa@val:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x18
   436  000019                     	ds	2
   437  00001B                     utoa@base:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x1A
   441  00001B                     	ds	2
   442  00001D                     utoa@v:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x1C
   446  00001D                     	ds	2
   447  00001F                     utoa@c:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x1E
   451  00001F                     	ds	1
   452  000020                     itoa@buf:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x1F
   456  000020                     	ds	2
   457  000022                     itoa@val:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x21
   461  000022                     	ds	2
   462  000024                     itoa@base:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x23
   466  000024                     	ds	2
   467  000026                     itoa@cp:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x25
   471  000026                     	ds	2
   472  000028                     EscreveInteiroLCD@valor:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x27
   476  000028                     	ds	2
   477  00002A                     EscreveInteiroLCD@texto:
   478                           	opt stack 0
   479                           
   480                           ; 7 bytes @ 0x29
   481  00002A                     	ds	7
   482  000031                     tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491                           ; 1 bytes @ 0x30
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 46 in file "intext.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  Texto_1        17   51[BANK0 ] const unsigned char [17]
   502 ;;  Texto_2        17   34[BANK0 ] const unsigned char [17]
   503 ;;  Texto_0        17   17[BANK0 ] const unsigned char [17]
   504 ;;  Texto_3        17    0[BANK0 ] const unsigned char [17]
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   514 ;;      Params:         0       0       0       0       0       0       0       0       0
   515 ;;      Locals:         0      68       0       0       0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0       0       0       0       0
   517 ;;      Totals:         0      68       0       0       0       0       0       0       0
   518 ;;Total ram usage:       68 bytes
   519 ;; Hardware stack levels required when called:    5
   520 ;; This function calls:
   521 ;;		_ConfiguraLCD
   522 ;;		_EscreveComandoLCD
   523 ;;		_EscreveFraseRamLCD
   524 ;;		_EscreveInteiroLCD
   525 ;;		_PosicaoCursorLCD
   526 ;;		_delay_ms
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text0
   533  00087E                     __ptext0:
   534                           	opt stack 0
   535  00087E                     _main:
   536                           	opt stack 26
   537                           
   538                           ;intext.c: 48: const unsigned char Texto_0[]="FATEC STO. ANDRE";
   539                           
   540                           ;incstack = 0
   541  00087E  0E5C               	movlw	low main@F3999
   542  000880  6EF6               	movwf	tblptrl,c
   543  000882                     	if	1	;There is more than 1 active tblptr byte
   544  000882  0E08               	movlw	high main@F3999
   545  000884  6EF7               	movwf	tblptrh,c
   546  000886                     	endif
   547  000886                     	if	0	;There are less than 3 active tblptr bytes
   548  000886                     	endif
   549  000886  EE20  F071         	lfsr	2,main@Texto_0
   550  00088A  0E10               	movlw	16
   551  00088C                     u1130:
   552  00088C  0009               	tblrd		*+
   553  00088E  CFF5 FFDE          	movff	tablat,postinc2
   554  000892  06E8               	decf	wreg,f,c
   555  000894  E2FB               	bc	u1130
   556                           
   557                           ;intext.c: 49: const unsigned char Texto_1[]="  INTERRUPCOES  ";
   558  000896  0E4B               	movlw	low main@F4001
   559  000898  6EF6               	movwf	tblptrl,c
   560  00089A                     	if	1	;There is more than 1 active tblptr byte
   561  00089A  0E08               	movlw	high main@F4001
   562  00089C  6EF7               	movwf	tblptrh,c
   563  00089E                     	endif
   564  00089E                     	if	0	;There are less than 3 active tblptr bytes
   565  00089E                     	endif
   566  00089E  EE20  F093         	lfsr	2,main@Texto_1
   567  0008A2  0E10               	movlw	16
   568  0008A4                     u1140:
   569  0008A4  0009               	tblrd		*+
   570  0008A6  CFF5 FFDE          	movff	tablat,postinc2
   571  0008AA  06E8               	decf	wreg,f,c
   572  0008AC  E2FB               	bc	u1140
   573                           
   574                           ;intext.c: 50: const unsigned char Texto_2[]="CONTADOR =      ";
   575  0008AE  0E3A               	movlw	low main@F4003
   576  0008B0  6EF6               	movwf	tblptrl,c
   577  0008B2                     	if	1	;There is more than 1 active tblptr byte
   578  0008B2  0E08               	movlw	high main@F4003
   579  0008B4  6EF7               	movwf	tblptrh,c
   580  0008B6                     	endif
   581  0008B6                     	if	0	;There are less than 3 active tblptr bytes
   582  0008B6                     	endif
   583  0008B6  EE20  F082         	lfsr	2,main@Texto_2
   584  0008BA  0E10               	movlw	16
   585  0008BC                     u1150:
   586  0008BC  0009               	tblrd		*+
   587  0008BE  CFF5 FFDE          	movff	tablat,postinc2
   588  0008C2  06E8               	decf	wreg,f,c
   589  0008C4  E2FB               	bc	u1150
   590                           
   591                           ;intext.c: 51: const unsigned char Texto_3[]="                ";
   592  0008C6  0E29               	movlw	low main@F4005
   593  0008C8  6EF6               	movwf	tblptrl,c
   594  0008CA                     	if	1	;There is more than 1 active tblptr byte
   595  0008CA  0E08               	movlw	high main@F4005
   596  0008CC  6EF7               	movwf	tblptrh,c
   597  0008CE                     	endif
   598  0008CE                     	if	0	;There are less than 3 active tblptr bytes
   599  0008CE                     	endif
   600  0008CE  EE20  F060         	lfsr	2,main@Texto_3
   601  0008D2  0E10               	movlw	16
   602  0008D4                     u1160:
   603  0008D4  0009               	tblrd		*+
   604  0008D6  CFF5 FFDE          	movff	tablat,postinc2
   605  0008DA  06E8               	decf	wreg,f,c
   606  0008DC  E2FB               	bc	u1160
   607                           
   608                           ;intext.c: 53: ADCON1 = 0XFF;
   609  0008DE  68C1               	setf	4033,c	;volatile
   610                           
   611                           ;intext.c: 54: TRISB = 0X03;
   612  0008E0  0E03               	movlw	3
   613  0008E2  6E93               	movwf	3987,c	;volatile
   614                           
   615                           ;intext.c: 55: TRISE = 0XFF;
   616  0008E4  6896               	setf	3990,c	;volatile
   617                           
   618                           ;intext.c: 56: LATB = 0XFF;
   619  0008E6  688A               	setf	3978,c	;volatile
   620                           
   621                           ;intext.c: 61: INTCONbits.RBIE = 0;
   622  0008E8  96F2               	bcf	intcon,3,c	;volatile
   623                           
   624                           ;intext.c: 62: INTCONbits.INT0IE = 1;
   625  0008EA  88F2               	bsf	intcon,4,c	;volatile
   626                           
   627                           ;intext.c: 63: INTCON3bits.INT1IE = 1;
   628  0008EC  86F0               	bsf	intcon3,3,c	;volatile
   629                           
   630                           ;intext.c: 65: INTCONbits.GIE = 1;
   631  0008EE  8EF2               	bsf	intcon,7,c	;volatile
   632                           
   633                           ;intext.c: 66: INTCONbits.GIEH = 1;
   634  0008F0  8EF2               	bsf	intcon,7,c	;volatile
   635                           
   636                           ;intext.c: 68: IPEN = 0;
   637  0008F2  9ED0               	bcf	4048,7,c	;volatile
   638                           
   639                           ;intext.c: 69: INTCON2bits.INTEDG0 = 0;
   640  0008F4  9CF1               	bcf	intcon2,6,c	;volatile
   641                           
   642                           ;intext.c: 71: ConfiguraLCD();
   643  0008F6  EC80  F005         	call	_ConfiguraLCD	;wreg free
   644                           
   645                           ;intext.c: 72: EscreveComandoLCD(0b00001100);
   646  0008FA  0E0C               	movlw	12
   647  0008FC  ECCF  F005         	call	_EscreveComandoLCD
   648                           
   649                           ;intext.c: 73: EscreveFraseRamLCD(Texto_0);
   650  000900  0E71               	movlw	low main@Texto_0
   651  000902  6E13               	movwf	EscreveFraseRamLCD@buffer,c
   652  000904  0E00               	movlw	high main@Texto_0
   653  000906  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
   654  000908  ECDD  F006         	call	_EscreveFraseRamLCD	;wreg free
   655                           
   656                           ;intext.c: 74: PosicaoCursorLCD(2,1);
   657  00090C  0E01               	movlw	1
   658  00090E  6E13               	movwf	PosicaoCursorLCD@coluna,c
   659  000910  0E02               	movlw	2
   660  000912  EC83  F006         	call	_PosicaoCursorLCD
   661                           
   662                           ;intext.c: 75: EscreveFraseRamLCD(Texto_1);
   663  000916  0E93               	movlw	low main@Texto_1
   664  000918  6E13               	movwf	EscreveFraseRamLCD@buffer,c
   665  00091A  0E00               	movlw	high main@Texto_1
   666  00091C  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
   667  00091E  ECDD  F006         	call	_EscreveFraseRamLCD	;wreg free
   668                           
   669                           ;intext.c: 77: delay_ms(3000);
   670  000922  0E0B               	movlw	11
   671  000924  6E11               	movwf	delay_ms@tempodeatraso+1,c
   672  000926  0EB8               	movlw	184
   673  000928  6E10               	movwf	delay_ms@tempodeatraso,c
   674  00092A  EC97  F007         	call	_delay_ms	;wreg free
   675                           
   676                           ;intext.c: 79: PosicaoCursorLCD(1,1);
   677  00092E  0E01               	movlw	1
   678  000930  6E13               	movwf	PosicaoCursorLCD@coluna,c
   679  000932  0E01               	movlw	1
   680  000934  EC83  F006         	call	_PosicaoCursorLCD
   681                           
   682                           ;intext.c: 80: EscreveFraseRamLCD(Texto_2);
   683  000938  0E82               	movlw	low main@Texto_2
   684  00093A  6E13               	movwf	EscreveFraseRamLCD@buffer,c
   685  00093C  0E00               	movlw	high main@Texto_2
   686  00093E  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
   687  000940  ECDD  F006         	call	_EscreveFraseRamLCD	;wreg free
   688                           
   689                           ;intext.c: 81: PosicaoCursorLCD(2,1);
   690  000944  0E01               	movlw	1
   691  000946  6E13               	movwf	PosicaoCursorLCD@coluna,c
   692  000948  0E02               	movlw	2
   693  00094A  EC83  F006         	call	_PosicaoCursorLCD
   694                           
   695                           ;intext.c: 82: EscreveFraseRamLCD(Texto_1);
   696  00094E  0E93               	movlw	low main@Texto_1
   697  000950  6E13               	movwf	EscreveFraseRamLCD@buffer,c
   698  000952  0E00               	movlw	high main@Texto_1
   699  000954  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
   700  000956  ECDD  F006         	call	_EscreveFraseRamLCD	;wreg free
   701  00095A                     l1761:
   702                           
   703                           ;intext.c: 87: PosicaoCursorLCD(1, 12);
   704  00095A  0E0C               	movlw	12
   705  00095C  6E13               	movwf	PosicaoCursorLCD@coluna,c
   706  00095E  0E01               	movlw	1
   707  000960  EC83  F006         	call	_PosicaoCursorLCD
   708                           
   709                           ;intext.c: 88: EscreveInteiroLCD(contador);
   710  000964  C0A4  F028         	movff	_contador,EscreveInteiroLCD@valor
   711  000968  6A29               	clrf	EscreveInteiroLCD@valor+1,c
   712  00096A  EC67  F007         	call	_EscreveInteiroLCD	;wreg free
   713                           
   714                           ;intext.c: 89: if(PORTEbits.RE2 == 0){
   715  00096E  B484               	btfsc	3972,2,c	;volatile
   716  000970  D7F4               	goto	l1761
   717                           
   718                           ;intext.c: 90: contador = 0;
   719  000972  0E00               	movlw	0
   720  000974  0100               	movlb	0	; () banked
   721  000976  6FA4               	movwf	_contador& (0+255),b
   722                           
   723                           ; BSR set to: 0
   724                           ;intext.c: 91: PosicaoCursorLCD(1,12);
   725  000978  0E0C               	movlw	12
   726  00097A  6E13               	movwf	PosicaoCursorLCD@coluna,c
   727  00097C  0E01               	movlw	1
   728  00097E  EC83  F006         	call	_PosicaoCursorLCD
   729                           
   730                           ;intext.c: 92: EscreveFraseRamLCD("0  ");
   731  000982  0E78               	movlw	low STR_1
   732  000984  6E13               	movwf	EscreveFraseRamLCD@buffer,c
   733  000986  0E08               	movlw	high STR_1
   734  000988  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
   735  00098A  ECDD  F006         	call	_EscreveFraseRamLCD	;wreg free
   736  00098E  D7E5               	goto	l1761
   737  000990                     __end_of_main:
   738                           	opt stack 0
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           intcon	equ	0xFF2
   744                           intcon2	equ	0xFF1
   745                           intcon3	equ	0xFF0
   746                           postinc0	equ	0xFEE
   747                           wreg	equ	0xFE8
   748                           postdec1	equ	0xFE5
   749                           fsr1l	equ	0xFE1
   750                           postinc2	equ	0xFDE
   751                           
   752 ;; *************** function _delay_ms *****************
   753 ;; Defined at:
   754 ;;		line 102 in file "intext.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  tempodeatras    2   15[COMRAM] unsigned int 
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, status,2, status,0
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   768 ;;      Params:         2       0       0       0       0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0       0       0       0       0
   770 ;;      Temps:          1       0       0       0       0       0       0       0       0
   771 ;;      Totals:         3       0       0       0       0       0       0       0       0
   772 ;;Total ram usage:        3 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; Hardware stack levels required when called:    1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text1
   783  000F2E                     __ptext1:
   784                           	opt stack 0
   785  000F2E                     _delay_ms:
   786                           	opt stack 29
   787                           
   788                           ;intext.c: 104: while(--tempodeatraso){
   789                           
   790                           ;incstack = 0
   791  000F2E  D008               	goto	l1653
   792  000F30                     l1651:
   793                           
   794                           ;intext.c: 105: _delay((unsigned long)((1)*(48000000/4000.0)));
   795  000F30  0E10               	movlw	16
   796  000F32  6E12               	movwf	??_delay_ms& (0+255),c
   797  000F34  0E94               	movlw	148
   798  000F36                     u1277:
   799  000F36  2EE8               	decfsz	wreg,f,c
   800  000F38  D7FE               	bra	u1277
   801  000F3A  2E12               	decfsz	??_delay_ms& (0+255),f,c
   802  000F3C  D7FC               	bra	u1277
   803  000F3E  D000               	nop2	
   804  000F40                     l1653:
   805  000F40  0610               	decf	delay_ms@tempodeatraso,f,c
   806  000F42  A0D8               	btfss	status,0,c
   807  000F44  0611               	decf	delay_ms@tempodeatraso+1,f,c
   808  000F46  5010               	movf	delay_ms@tempodeatraso,w,c
   809  000F48  1011               	iorwf	delay_ms@tempodeatraso+1,w,c
   810  000F4A  B4D8               	btfsc	status,2,c
   811  000F4C  0012               	return	
   812  000F4E  D7F0               	goto	l1651
   813  000F50                     __end_of_delay_ms:
   814                           	opt stack 0
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           intcon	equ	0xFF2
   820                           intcon2	equ	0xFF1
   821                           intcon3	equ	0xFF0
   822                           postinc0	equ	0xFEE
   823                           wreg	equ	0xFE8
   824                           postdec1	equ	0xFE5
   825                           fsr1l	equ	0xFE1
   826                           postinc2	equ	0xFDE
   827                           status	equ	0xFD8
   828                           
   829 ;; *************** function _PosicaoCursorLCD *****************
   830 ;; Defined at:
   831 ;;		line 280 in file "displayLCD.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  linha           1    wreg     unsigned char 
   834 ;;  coluna          1   18[COMRAM] unsigned char 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  linha           1   19[COMRAM] unsigned char 
   837 ;;  EnderecoLCD     1   20[COMRAM] unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   847 ;;      Params:         1       0       0       0       0       0       0       0       0
   848 ;;      Locals:         2       0       0       0       0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0
   850 ;;      Totals:         3       0       0       0       0       0       0       0       0
   851 ;;Total ram usage:        3 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    3
   854 ;; This function calls:
   855 ;;		_EnderecoCursor
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text2
   862  000D06                     __ptext2:
   863                           	opt stack 0
   864  000D06                     _PosicaoCursorLCD:
   865                           	opt stack 27
   866                           
   867                           ;incstack = 0
   868                           ;PosicaoCursorLCD@linha stored from wreg
   869  000D06  6E14               	movwf	PosicaoCursorLCD@linha,c
   870                           
   871                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
   872  000D08  0E00               	movlw	0
   873  000D0A  6E15               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   874                           
   875                           ;displayLCD.c: 292: if (coluna >= 0)
   876  000D0C  0613               	decf	PosicaoCursorLCD@coluna,f,c
   877                           
   878                           ;displayLCD.c: 293: {
   879                           ;displayLCD.c: 296: switch (linha)
   880  000D0E  D01E               	goto	l1639
   881  000D10                     l70:
   882                           
   883                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
   884  000D10  C013  F015         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
   885                           
   886                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
   887  000D14  5015               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   888  000D16  EC4E  F006         	call	_EnderecoCursor
   889                           
   890                           ;displayLCD.c: 301: break;
   891  000D1A  0012               	return	
   892  000D1C                     l1623:
   893                           
   894                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
   895  000D1C  5013               	movf	PosicaoCursorLCD@coluna,w,c
   896  000D1E  0F40               	addlw	64
   897  000D20  6E15               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   898                           
   899                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
   900  000D22  5015               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   901  000D24  EC4E  F006         	call	_EnderecoCursor
   902                           
   903                           ;displayLCD.c: 306: break;
   904  000D28  0012               	return	
   905  000D2A                     l1627:
   906                           
   907                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
   908  000D2A  5013               	movf	PosicaoCursorLCD@coluna,w,c
   909  000D2C  0F14               	addlw	20
   910  000D2E  6E15               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   911                           
   912                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
   913  000D30  5015               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   914  000D32  EC4E  F006         	call	_EnderecoCursor
   915                           
   916                           ;displayLCD.c: 311: break;
   917  000D36  0012               	return	
   918  000D38                     l1631:
   919                           
   920                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
   921  000D38  5013               	movf	PosicaoCursorLCD@coluna,w,c
   922  000D3A  0F54               	addlw	84
   923  000D3C  6E15               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   924                           
   925                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
   926  000D3E  5015               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   927  000D40  EC4E  F006         	call	_EnderecoCursor
   928                           
   929                           ;displayLCD.c: 316: break;
   930  000D44  0012               	return	
   931  000D46                     l1635:
   932                           
   933                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
   934  000D46  0E00               	movlw	0
   935  000D48  6E15               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   936                           
   937                           ;displayLCD.c: 321: }
   938                           
   939                           ;displayLCD.c: 320: break;
   940  000D4A  0012               	return	
   941  000D4C                     l1639:
   942  000D4C  5014               	movf	PosicaoCursorLCD@linha,w,c
   943                           
   944                           ; Switch size 1, requested type "space"
   945                           ; Number of cases is 4, Range of values is 1 to 4
   946                           ; switch strategies available:
   947                           ; Name         Instructions Cycles
   948                           ; simple_byte           13     7 (average)
   949                           ;	Chosen strategy is simple_byte
   950  000D4E  0A01               	xorlw	1	; case 1
   951  000D50  B4D8               	btfsc	status,2,c
   952  000D52  D7DE               	goto	l70
   953  000D54  0A03               	xorlw	3	; case 2
   954  000D56  B4D8               	btfsc	status,2,c
   955  000D58  D7E1               	goto	l1623
   956  000D5A  0A01               	xorlw	1	; case 3
   957  000D5C  B4D8               	btfsc	status,2,c
   958  000D5E  D7E5               	goto	l1627
   959  000D60  0A07               	xorlw	7	; case 4
   960  000D62  B4D8               	btfsc	status,2,c
   961  000D64  D7E9               	goto	l1631
   962  000D66  D7EF               	goto	l1635
   963  000D68                     __end_of_PosicaoCursorLCD:
   964                           	opt stack 0
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           intcon	equ	0xFF2
   970                           intcon2	equ	0xFF1
   971                           intcon3	equ	0xFF0
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           postdec1	equ	0xFE5
   975                           fsr1l	equ	0xFE1
   976                           postinc2	equ	0xFDE
   977                           status	equ	0xFD8
   978                           
   979 ;; *************** function _EnderecoCursor *****************
   980 ;; Defined at:
   981 ;;		line 229 in file "displayLCD.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  endereco        1    wreg     unsigned char 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  endereco        1   17[COMRAM] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   995 ;;      Params:         0       0       0       0       0       0       0       0       0
   996 ;;      Locals:         1       0       0       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0       0       0
   998 ;;      Totals:         1       0       0       0       0       0       0       0       0
   999 ;;Total ram usage:        1 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    2
  1002 ;; This function calls:
  1003 ;;		_Delay
  1004 ;; This function is called by:
  1005 ;;		_PosicaoCursorLCD
  1006 ;;		_CriaCaractereLCD
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text3
  1011  000C9C                     __ptext3:
  1012                           	opt stack 0
  1013  000C9C                     _EnderecoCursor:
  1014                           	opt stack 27
  1015                           
  1016                           ;incstack = 0
  1017                           ;EnderecoCursor@endereco stored from wreg
  1018  000C9C  6E12               	movwf	EnderecoCursor@endereco,c
  1019                           
  1020                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
  1021  000C9E  9483               	bcf	3971,2,c	;volatile
  1022                           
  1023                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
  1024  000CA0  9283               	bcf	3971,1,c	;volatile
  1025                           
  1026                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
  1027  000CA2  9083               	bcf	3971,0,c	;volatile
  1028                           
  1029                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
  1030  000CA4  8E83               	bsf	3971,7,c	;volatile
  1031                           
  1032                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1033  000CA6  A812               	btfss	EnderecoCursor@endereco,4,c
  1034  000CA8  D002               	goto	l51
  1035  000CAA  8883               	bsf	3971,4,c	;volatile
  1036  000CAC  D001               	goto	l1519
  1037  000CAE                     l51:
  1038                           
  1039                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
  1040  000CAE  9883               	bcf	3971,4,c	;volatile
  1041  000CB0                     l1519:
  1042                           
  1043                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1044  000CB0  AA12               	btfss	EnderecoCursor@endereco,5,c
  1045  000CB2  D002               	goto	l53
  1046  000CB4  8A83               	bsf	3971,5,c	;volatile
  1047  000CB6  D001               	goto	l1523
  1048  000CB8                     l53:
  1049                           
  1050                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
  1051  000CB8  9A83               	bcf	3971,5,c	;volatile
  1052  000CBA                     l1523:
  1053                           
  1054                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1055  000CBA  AC12               	btfss	EnderecoCursor@endereco,6,c
  1056  000CBC  D002               	goto	l55
  1057  000CBE  8C83               	bsf	3971,6,c	;volatile
  1058  000CC0  D001               	goto	l56
  1059  000CC2                     l55:
  1060                           
  1061                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
  1062  000CC2  9C83               	bcf	3971,6,c	;volatile
  1063  000CC4                     l56:
  1064                           
  1065                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
  1066  000CC4  8083               	bsf	3971,0,c	;volatile
  1067                           
  1068                           ;displayLCD.c: 247: Delay();
  1069  000CC6  EC85  F007         	call	_Delay	;wreg free
  1070                           
  1071                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
  1072  000CCA  9083               	bcf	3971,0,c	;volatile
  1073                           
  1074                           ;displayLCD.c: 249: Delay();
  1075  000CCC  EC85  F007         	call	_Delay	;wreg free
  1076                           
  1077                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1078  000CD0  A012               	btfss	EnderecoCursor@endereco,0,c
  1079  000CD2  D002               	goto	l57
  1080  000CD4  8883               	bsf	3971,4,c	;volatile
  1081  000CD6  D001               	goto	l58
  1082  000CD8                     l57:
  1083                           
  1084                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
  1085  000CD8  9883               	bcf	3971,4,c	;volatile
  1086  000CDA                     l58:
  1087                           
  1088                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1089  000CDA  A212               	btfss	EnderecoCursor@endereco,1,c
  1090  000CDC  D002               	goto	l59
  1091  000CDE  8A83               	bsf	3971,5,c	;volatile
  1092  000CE0  D001               	goto	l60
  1093  000CE2                     l59:
  1094                           
  1095                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
  1096  000CE2  9A83               	bcf	3971,5,c	;volatile
  1097  000CE4                     l60:
  1098                           
  1099                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1100  000CE4  A412               	btfss	EnderecoCursor@endereco,2,c
  1101  000CE6  D002               	goto	l61
  1102  000CE8  8C83               	bsf	3971,6,c	;volatile
  1103  000CEA  D001               	goto	l62
  1104  000CEC                     l61:
  1105                           
  1106                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
  1107  000CEC  9C83               	bcf	3971,6,c	;volatile
  1108  000CEE                     l62:
  1109                           
  1110                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1111  000CEE  A612               	btfss	EnderecoCursor@endereco,3,c
  1112  000CF0  D002               	goto	l63
  1113  000CF2  8E83               	bsf	3971,7,c	;volatile
  1114  000CF4  D001               	goto	l64
  1115  000CF6                     l63:
  1116                           
  1117                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
  1118  000CF6  9E83               	bcf	3971,7,c	;volatile
  1119  000CF8                     l64:
  1120                           
  1121                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
  1122  000CF8  8083               	bsf	3971,0,c	;volatile
  1123                           
  1124                           ;displayLCD.c: 263: Delay();
  1125  000CFA  EC85  F007         	call	_Delay	;wreg free
  1126                           
  1127                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
  1128  000CFE  9083               	bcf	3971,0,c	;volatile
  1129                           
  1130                           ;displayLCD.c: 265: Delay();
  1131  000D00  EC85  F007         	call	_Delay	;wreg free
  1132  000D04  0012               	return		;funcret
  1133  000D06                     __end_of_EnderecoCursor:
  1134                           	opt stack 0
  1135                           tblptru	equ	0xFF8
  1136                           tblptrh	equ	0xFF7
  1137                           tblptrl	equ	0xFF6
  1138                           tablat	equ	0xFF5
  1139                           intcon	equ	0xFF2
  1140                           intcon2	equ	0xFF1
  1141                           intcon3	equ	0xFF0
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           postdec1	equ	0xFE5
  1145                           fsr1l	equ	0xFE1
  1146                           postinc2	equ	0xFDE
  1147                           status	equ	0xFD8
  1148                           
  1149 ;; *************** function _EscreveInteiroLCD *****************
  1150 ;; Defined at:
  1151 ;;		line 391 in file "displayLCD.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  valor           2   39[COMRAM] int 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  texto           7   41[COMRAM] unsigned char [7]
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1165 ;;      Params:         2       0       0       0       0       0       0       0       0
  1166 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1168 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1169 ;;Total ram usage:        9 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    4
  1172 ;; This function calls:
  1173 ;;		_EscreveFraseRamLCD
  1174 ;;		_itoa
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text4
  1181  000ECE                     __ptext4:
  1182                           	opt stack 0
  1183  000ECE                     _EscreveInteiroLCD:
  1184                           	opt stack 26
  1185                           
  1186                           ;displayLCD.c: 393: char texto[7] = "000000";
  1187                           
  1188                           ;incstack = 0
  1189  000ECE  EE20  F042         	lfsr	2,EscreveInteiroLCD@F4004
  1190  000ED2  EE10  F02A         	lfsr	1,EscreveInteiroLCD@texto
  1191  000ED6  0E06               	movlw	6
  1192  000ED8                     u1071:
  1193  000ED8  CFDB FFE3          	movff	plusw2,plusw1
  1194  000EDC  06E8               	decf	wreg,f,c
  1195  000EDE  E2FC               	bc	u1071
  1196                           
  1197                           ;displayLCD.c: 394: itoa(texto,valor, 10);
  1198  000EE0  0E2A               	movlw	low EscreveInteiroLCD@texto
  1199  000EE2  6E20               	movwf	itoa@buf,c
  1200  000EE4  0E00               	movlw	high EscreveInteiroLCD@texto
  1201  000EE6  6E21               	movwf	itoa@buf+1,c
  1202  000EE8  C028  F022         	movff	EscreveInteiroLCD@valor,itoa@val
  1203  000EEC  C029  F023         	movff	EscreveInteiroLCD@valor+1,itoa@val+1
  1204  000EF0  0E00               	movlw	0
  1205  000EF2  6E25               	movwf	itoa@base+1,c
  1206  000EF4  0E0A               	movlw	10
  1207  000EF6  6E24               	movwf	itoa@base,c
  1208  000EF8  EC06  F007         	call	_itoa	;wreg free
  1209                           
  1210                           ;displayLCD.c: 395: EscreveFraseRamLCD(texto);
  1211  000EFC  0E2A               	movlw	low EscreveInteiroLCD@texto
  1212  000EFE  6E13               	movwf	EscreveFraseRamLCD@buffer,c
  1213  000F00  0E00               	movlw	high EscreveInteiroLCD@texto
  1214  000F02  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
  1215  000F04  ECDD  F006         	call	_EscreveFraseRamLCD	;wreg free
  1216  000F08  0012               	return		;funcret
  1217  000F0A                     __end_of_EscreveInteiroLCD:
  1218                           	opt stack 0
  1219                           tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           intcon	equ	0xFF2
  1224                           intcon2	equ	0xFF1
  1225                           intcon3	equ	0xFF0
  1226                           postinc0	equ	0xFEE
  1227                           wreg	equ	0xFE8
  1228                           postdec1	equ	0xFE5
  1229                           plusw1	equ	0xFE3
  1230                           fsr1l	equ	0xFE1
  1231                           postinc2	equ	0xFDE
  1232                           plusw2	equ	0xFDB
  1233                           status	equ	0xFD8
  1234                           
  1235 ;; *************** function _itoa *****************
  1236 ;; Defined at:
  1237 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  buf             2   31[COMRAM] PTR unsigned char 
  1240 ;;		 -> EscreveInteiroLCD@texto(7), 
  1241 ;;  val             2   33[COMRAM] int 
  1242 ;;  base            2   35[COMRAM] int 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  cp              2   37[COMRAM] PTR unsigned char 
  1245 ;;		 -> EscreveInteiroLCD@texto(7), 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  2   31[COMRAM] PTR unsigned char 
  1248 ;; Registers used:
  1249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1255 ;;      Params:         6       0       0       0       0       0       0       0       0
  1256 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1258 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1259 ;;Total ram usage:        8 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    3
  1262 ;; This function calls:
  1263 ;;		_utoa
  1264 ;; This function is called by:
  1265 ;;		_EscreveInteiroLCD
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text5
  1270  000E0C                     __ptext5:
  1271                           	opt stack 0
  1272  000E0C                     _itoa:
  1273                           	opt stack 26
  1274                           
  1275                           ;incstack = 0
  1276  000E0C  C020  F026         	movff	itoa@buf,itoa@cp
  1277  000E10  C021  F027         	movff	itoa@buf+1,itoa@cp+1
  1278  000E14  AE23               	btfss	itoa@val+1,7,c
  1279  000E16  D00C               	goto	l1553
  1280  000E18  C020  FFD9         	movff	itoa@buf,fsr2l
  1281  000E1C  C021  FFDA         	movff	itoa@buf+1,fsr2h
  1282  000E20  0E2D               	movlw	45
  1283  000E22  6EDF               	movwf	indf2,c
  1284  000E24  4A20               	infsnz	itoa@buf,f,c
  1285  000E26  2A21               	incf	itoa@buf+1,f,c
  1286  000E28  6C22               	negf	itoa@val,c
  1287  000E2A  1E23               	comf	itoa@val+1,f,c
  1288  000E2C  B0D8               	btfsc	status,0,c
  1289  000E2E  2A23               	incf	itoa@val+1,f,c
  1290  000E30                     l1553:
  1291  000E30  C020  F017         	movff	itoa@buf,utoa@buf
  1292  000E34  C021  F018         	movff	itoa@buf+1,utoa@buf+1
  1293  000E38  C022  F019         	movff	itoa@val,utoa@val
  1294  000E3C  C023  F01A         	movff	itoa@val+1,utoa@val+1
  1295  000E40  C024  F01B         	movff	itoa@base,utoa@base
  1296  000E44  C025  F01C         	movff	itoa@base+1,utoa@base+1
  1297  000E48  EC2E  F005         	call	_utoa	;wreg free
  1298  000E4C  0012               	return	
  1299  000E4E                     __end_of_itoa:
  1300                           	opt stack 0
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           intcon	equ	0xFF2
  1306                           intcon2	equ	0xFF1
  1307                           intcon3	equ	0xFF0
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           plusw1	equ	0xFE3
  1312                           fsr1l	equ	0xFE1
  1313                           indf2	equ	0xFDF
  1314                           postinc2	equ	0xFDE
  1315                           plusw2	equ	0xFDB
  1316                           fsr2h	equ	0xFDA
  1317                           fsr2l	equ	0xFD9
  1318                           status	equ	0xFD8
  1319                           
  1320 ;; *************** function _utoa *****************
  1321 ;; Defined at:
  1322 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1325 ;;		 -> EscreveInteiroLCD@texto(7), 
  1326 ;;  val             2   24[COMRAM] unsigned int 
  1327 ;;  base            2   26[COMRAM] int 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  v               2   28[COMRAM] unsigned int 
  1330 ;;  c               1   30[COMRAM] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  2   22[COMRAM] PTR unsigned char 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1340 ;;      Params:         6       0       0       0       0       0       0       0       0
  1341 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1343 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1344 ;;Total ram usage:        9 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    2
  1347 ;; This function calls:
  1348 ;;		___lwdiv
  1349 ;;		___lwmod
  1350 ;; This function is called by:
  1351 ;;		_itoa
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text6
  1356  000A5C                     __ptext6:
  1357                           	opt stack 0
  1358  000A5C                     _utoa:
  1359                           	opt stack 26
  1360                           
  1361                           ;incstack = 0
  1362  000A5C  C019  F01D         	movff	utoa@val,utoa@v
  1363  000A60  C01A  F01E         	movff	utoa@val+1,utoa@v+1
  1364  000A64                     l1441:
  1365  000A64  C01D  F010         	movff	utoa@v,___lwdiv@dividend
  1366  000A68  C01E  F011         	movff	utoa@v+1,___lwdiv@dividend+1
  1367  000A6C  C01B  F012         	movff	utoa@base,___lwdiv@divisor
  1368  000A70  C01C  F013         	movff	utoa@base+1,___lwdiv@divisor+1
  1369  000A74  ECB4  F006         	call	___lwdiv	;wreg free
  1370  000A78  C010  F01D         	movff	?___lwdiv,utoa@v
  1371  000A7C  C011  F01E         	movff	?___lwdiv+1,utoa@v+1
  1372  000A80  4A17               	infsnz	utoa@buf,f,c
  1373  000A82  2A18               	incf	utoa@buf+1,f,c
  1374  000A84  501D               	movf	utoa@v,w,c
  1375  000A86  101E               	iorwf	utoa@v+1,w,c
  1376  000A88  A4D8               	btfss	status,2,c
  1377  000A8A  D7EC               	goto	l1441
  1378  000A8C  C017  FFD9         	movff	utoa@buf,fsr2l
  1379  000A90  C018  FFDA         	movff	utoa@buf+1,fsr2h
  1380  000A94  0E00               	movlw	0
  1381  000A96  6EDF               	movwf	indf2,c
  1382  000A98  0617               	decf	utoa@buf,f,c
  1383  000A9A  A0D8               	btfss	status,0,c
  1384  000A9C  0618               	decf	utoa@buf+1,f,c
  1385  000A9E                     l1451:
  1386  000A9E  C019  F010         	movff	utoa@val,___lwmod@dividend
  1387  000AA2  C01A  F011         	movff	utoa@val+1,___lwmod@dividend+1
  1388  000AA6  C01B  F012         	movff	utoa@base,___lwmod@divisor
  1389  000AAA  C01C  F013         	movff	utoa@base+1,___lwmod@divisor+1
  1390  000AAE  EC27  F007         	call	___lwmod	;wreg free
  1391  000AB2  5010               	movf	?___lwmod,w,c
  1392  000AB4  6E1F               	movwf	utoa@c,c
  1393  000AB6  C019  F010         	movff	utoa@val,___lwdiv@dividend
  1394  000ABA  C01A  F011         	movff	utoa@val+1,___lwdiv@dividend+1
  1395  000ABE  C01B  F012         	movff	utoa@base,___lwdiv@divisor
  1396  000AC2  C01C  F013         	movff	utoa@base+1,___lwdiv@divisor+1
  1397  000AC6  ECB4  F006         	call	___lwdiv	;wreg free
  1398  000ACA  C010  F019         	movff	?___lwdiv,utoa@val
  1399  000ACE  C011  F01A         	movff	?___lwdiv+1,utoa@val+1
  1400  000AD2  0E09               	movlw	9
  1401  000AD4  641F               	cpfsgt	utoa@c,c
  1402  000AD6  D002               	goto	l605
  1403  000AD8  0E07               	movlw	7
  1404  000ADA  261F               	addwf	utoa@c,f,c
  1405  000ADC                     l605:
  1406  000ADC  0E30               	movlw	48
  1407  000ADE  261F               	addwf	utoa@c,f,c
  1408  000AE0  C017  FFD9         	movff	utoa@buf,fsr2l
  1409  000AE4  C018  FFDA         	movff	utoa@buf+1,fsr2h
  1410  000AE8  C01F  FFDF         	movff	utoa@c,indf2
  1411  000AEC  0617               	decf	utoa@buf,f,c
  1412  000AEE  A0D8               	btfss	status,0,c
  1413  000AF0  0618               	decf	utoa@buf+1,f,c
  1414  000AF2  5019               	movf	utoa@val,w,c
  1415  000AF4  101A               	iorwf	utoa@val+1,w,c
  1416  000AF6  A4D8               	btfss	status,2,c
  1417  000AF8  D7D2               	goto	l1451
  1418                           
  1419                           ;	Return value of _utoa is never used
  1420  000AFA  4A17               	infsnz	utoa@buf,f,c
  1421  000AFC  2A18               	incf	utoa@buf+1,f,c
  1422  000AFE  0012               	return	
  1423  000B00                     __end_of_utoa:
  1424                           	opt stack 0
  1425                           tblptru	equ	0xFF8
  1426                           tblptrh	equ	0xFF7
  1427                           tblptrl	equ	0xFF6
  1428                           tablat	equ	0xFF5
  1429                           intcon	equ	0xFF2
  1430                           intcon2	equ	0xFF1
  1431                           intcon3	equ	0xFF0
  1432                           postinc0	equ	0xFEE
  1433                           wreg	equ	0xFE8
  1434                           postdec1	equ	0xFE5
  1435                           plusw1	equ	0xFE3
  1436                           fsr1l	equ	0xFE1
  1437                           indf2	equ	0xFDF
  1438                           postinc2	equ	0xFDE
  1439                           plusw2	equ	0xFDB
  1440                           fsr2h	equ	0xFDA
  1441                           fsr2l	equ	0xFD9
  1442                           status	equ	0xFD8
  1443                           
  1444 ;; *************** function ___lwmod *****************
  1445 ;; Defined at:
  1446 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  dividend        2   15[COMRAM] unsigned int 
  1449 ;;  divisor         2   17[COMRAM] unsigned int 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  counter         1   19[COMRAM] unsigned char 
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  2   15[COMRAM] unsigned int 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1461 ;;      Params:         4       0       0       0       0       0       0       0       0
  1462 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1464 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1465 ;;Total ram usage:        5 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_utoa
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text7
  1476  000E4E                     __ptext7:
  1477                           	opt stack 0
  1478  000E4E                     ___lwmod:
  1479                           	opt stack 26
  1480                           
  1481                           ;incstack = 0
  1482  000E4E  5012               	movf	___lwmod@divisor,w,c
  1483  000E50  1013               	iorwf	___lwmod@divisor+1,w,c
  1484  000E52  B4D8               	btfsc	status,2,c
  1485  000E54  D018               	goto	l694
  1486  000E56  0E01               	movlw	1
  1487  000E58  6E14               	movwf	___lwmod@counter,c
  1488  000E5A  D004               	goto	l1393
  1489  000E5C                     l1391:
  1490  000E5C  90D8               	bcf	status,0,c
  1491  000E5E  3612               	rlcf	___lwmod@divisor,f,c
  1492  000E60  3613               	rlcf	___lwmod@divisor+1,f,c
  1493  000E62  2A14               	incf	___lwmod@counter,f,c
  1494  000E64                     l1393:
  1495  000E64  AE13               	btfss	___lwmod@divisor+1,7,c
  1496  000E66  D7FA               	goto	l1391
  1497  000E68                     l1395:
  1498  000E68  5012               	movf	___lwmod@divisor,w,c
  1499  000E6A  5C10               	subwf	___lwmod@dividend,w,c
  1500  000E6C  5013               	movf	___lwmod@divisor+1,w,c
  1501  000E6E  5811               	subwfb	___lwmod@dividend+1,w,c
  1502  000E70  A0D8               	btfss	status,0,c
  1503  000E72  D004               	goto	l1399
  1504  000E74  5012               	movf	___lwmod@divisor,w,c
  1505  000E76  5E10               	subwf	___lwmod@dividend,f,c
  1506  000E78  5013               	movf	___lwmod@divisor+1,w,c
  1507  000E7A  5A11               	subwfb	___lwmod@dividend+1,f,c
  1508  000E7C                     l1399:
  1509  000E7C  90D8               	bcf	status,0,c
  1510  000E7E  3213               	rrcf	___lwmod@divisor+1,f,c
  1511  000E80  3212               	rrcf	___lwmod@divisor,f,c
  1512  000E82  2E14               	decfsz	___lwmod@counter,f,c
  1513  000E84  D7F1               	goto	l1395
  1514  000E86                     l694:
  1515  000E86  C010  F010         	movff	___lwmod@dividend,?___lwmod
  1516  000E8A  C011  F011         	movff	___lwmod@dividend+1,?___lwmod+1
  1517  000E8E  0012               	return		;funcret
  1518  000E90                     __end_of___lwmod:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           intcon	equ	0xFF2
  1525                           intcon2	equ	0xFF1
  1526                           intcon3	equ	0xFF0
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           postdec1	equ	0xFE5
  1530                           plusw1	equ	0xFE3
  1531                           fsr1l	equ	0xFE1
  1532                           indf2	equ	0xFDF
  1533                           postinc2	equ	0xFDE
  1534                           plusw2	equ	0xFDB
  1535                           fsr2h	equ	0xFDA
  1536                           fsr2l	equ	0xFD9
  1537                           status	equ	0xFD8
  1538                           
  1539 ;; *************** function ___lwdiv *****************
  1540 ;; Defined at:
  1541 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  dividend        2   15[COMRAM] unsigned int 
  1544 ;;  divisor         2   17[COMRAM] unsigned int 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  quotient        2   19[COMRAM] unsigned int 
  1547 ;;  counter         1   21[COMRAM] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2   15[COMRAM] unsigned int 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1557 ;;      Params:         4       0       0       0       0       0       0       0       0
  1558 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1560 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1561 ;;Total ram usage:        7 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    1
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_utoa
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text8
  1572  000D68                     __ptext8:
  1573                           	opt stack 0
  1574  000D68                     ___lwdiv:
  1575                           	opt stack 26
  1576                           
  1577                           ;incstack = 0
  1578  000D68  0E00               	movlw	0
  1579  000D6A  6E15               	movwf	___lwdiv@quotient+1,c
  1580  000D6C  0E00               	movlw	0
  1581  000D6E  6E14               	movwf	___lwdiv@quotient,c
  1582  000D70  5012               	movf	___lwdiv@divisor,w,c
  1583  000D72  1013               	iorwf	___lwdiv@divisor+1,w,c
  1584  000D74  B4D8               	btfsc	status,2,c
  1585  000D76  D01C               	goto	l684
  1586  000D78  0E01               	movlw	1
  1587  000D7A  6E16               	movwf	___lwdiv@counter,c
  1588  000D7C  D004               	goto	l1373
  1589  000D7E                     l1371:
  1590  000D7E  90D8               	bcf	status,0,c
  1591  000D80  3612               	rlcf	___lwdiv@divisor,f,c
  1592  000D82  3613               	rlcf	___lwdiv@divisor+1,f,c
  1593  000D84  2A16               	incf	___lwdiv@counter,f,c
  1594  000D86                     l1373:
  1595  000D86  AE13               	btfss	___lwdiv@divisor+1,7,c
  1596  000D88  D7FA               	goto	l1371
  1597  000D8A                     l1375:
  1598  000D8A  90D8               	bcf	status,0,c
  1599  000D8C  3614               	rlcf	___lwdiv@quotient,f,c
  1600  000D8E  3615               	rlcf	___lwdiv@quotient+1,f,c
  1601  000D90  5012               	movf	___lwdiv@divisor,w,c
  1602  000D92  5C10               	subwf	___lwdiv@dividend,w,c
  1603  000D94  5013               	movf	___lwdiv@divisor+1,w,c
  1604  000D96  5811               	subwfb	___lwdiv@dividend+1,w,c
  1605  000D98  A0D8               	btfss	status,0,c
  1606  000D9A  D005               	goto	l1383
  1607  000D9C  5012               	movf	___lwdiv@divisor,w,c
  1608  000D9E  5E10               	subwf	___lwdiv@dividend,f,c
  1609  000DA0  5013               	movf	___lwdiv@divisor+1,w,c
  1610  000DA2  5A11               	subwfb	___lwdiv@dividend+1,f,c
  1611  000DA4  8014               	bsf	___lwdiv@quotient,0,c
  1612  000DA6                     l1383:
  1613  000DA6  90D8               	bcf	status,0,c
  1614  000DA8  3213               	rrcf	___lwdiv@divisor+1,f,c
  1615  000DAA  3212               	rrcf	___lwdiv@divisor,f,c
  1616  000DAC  2E16               	decfsz	___lwdiv@counter,f,c
  1617  000DAE  D7ED               	goto	l1375
  1618  000DB0                     l684:
  1619  000DB0  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
  1620  000DB4  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1621  000DB8  0012               	return		;funcret
  1622  000DBA                     __end_of___lwdiv:
  1623                           	opt stack 0
  1624                           tblptru	equ	0xFF8
  1625                           tblptrh	equ	0xFF7
  1626                           tblptrl	equ	0xFF6
  1627                           tablat	equ	0xFF5
  1628                           intcon	equ	0xFF2
  1629                           intcon2	equ	0xFF1
  1630                           intcon3	equ	0xFF0
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           postdec1	equ	0xFE5
  1634                           plusw1	equ	0xFE3
  1635                           fsr1l	equ	0xFE1
  1636                           indf2	equ	0xFDF
  1637                           postinc2	equ	0xFDE
  1638                           plusw2	equ	0xFDB
  1639                           fsr2h	equ	0xFDA
  1640                           fsr2l	equ	0xFD9
  1641                           status	equ	0xFD8
  1642                           
  1643 ;; *************** function _EscreveFraseRamLCD *****************
  1644 ;; Defined at:
  1645 ;;		line 438 in file "displayLCD.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  buffer          2   18[COMRAM] PTR unsigned char 
  1648 ;;		 -> STR_1(4), main@Texto_2(17), main@Texto_1(17), main@Texto_0(17), 
  1649 ;;		 -> EscreveInteiroLCD@texto(7), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1661 ;;      Params:         2       0       0       0       0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1664 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		_EscreveCaractereLCD
  1670 ;; This function is called by:
  1671 ;;		_EscreveInteiroLCD
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text9
  1677  000DBA                     __ptext9:
  1678                           	opt stack 0
  1679  000DBA                     _EscreveFraseRamLCD:
  1680                           	opt stack 26
  1681                           
  1682                           ;displayLCD.c: 440: while(*buffer)
  1683                           
  1684                           ;incstack = 0
  1685  000DBA  D014               	goto	l1563
  1686  000DBC                     l1559:
  1687                           
  1688                           ;displayLCD.c: 441: {
  1689                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
  1690  000DBC  C013  FFF6         	movff	EscreveFraseRamLCD@buffer,tblptrl
  1691  000DC0  C014  FFF7         	movff	EscreveFraseRamLCD@buffer+1,tblptrh
  1692  000DC4  6AF8               	clrf	tblptru,c
  1693  000DC6  0E07               	movlw	(high __ramtop+-1)
  1694  000DC8  64F7               	cpfsgt	tblptrh,c
  1695  000DCA  D003               	bra	u1047
  1696  000DCC  0008               	tblrd		*
  1697  000DCE  50F5               	movf	tablat,w,c
  1698  000DD0  D005               	bra	u1040
  1699  000DD2                     u1047:
  1700  000DD2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1701  000DD6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1702  000DDA  50EF               	movf	indf0,w,c
  1703  000DDC                     u1040:
  1704  000DDC  EC15  F006         	call	_EscreveCaractereLCD
  1705                           
  1706                           ;displayLCD.c: 443: buffer++;
  1707  000DE0  4A13               	infsnz	EscreveFraseRamLCD@buffer,f,c
  1708  000DE2  2A14               	incf	EscreveFraseRamLCD@buffer+1,f,c
  1709  000DE4                     l1563:
  1710  000DE4  C013  FFF6         	movff	EscreveFraseRamLCD@buffer,tblptrl
  1711  000DE8  C014  FFF7         	movff	EscreveFraseRamLCD@buffer+1,tblptrh
  1712  000DEC  6AF8               	clrf	tblptru,c
  1713  000DEE  0E07               	movlw	(high __ramtop+-1)
  1714  000DF0  64F7               	cpfsgt	tblptrh,c
  1715  000DF2  D003               	bra	u1057
  1716  000DF4  0008               	tblrd		*
  1717  000DF6  50F5               	movf	tablat,w,c
  1718  000DF8  D005               	bra	u1050
  1719  000DFA                     u1057:
  1720  000DFA  CFF6 FFE9          	movff	tblptrl,fsr0l
  1721  000DFE  CFF7 FFEA          	movff	tblptrh,fsr0h
  1722  000E02  50EF               	movf	indf0,w,c
  1723  000E04                     u1050:
  1724  000E04  0900               	iorlw	0
  1725  000E06  B4D8               	btfsc	status,2,c
  1726  000E08  0012               	return	
  1727  000E0A  D7D8               	goto	l1559
  1728  000E0C                     __end_of_EscreveFraseRamLCD:
  1729                           	opt stack 0
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           intcon	equ	0xFF2
  1735                           intcon2	equ	0xFF1
  1736                           intcon3	equ	0xFF0
  1737                           indf0	equ	0xFEF
  1738                           postinc0	equ	0xFEE
  1739                           fsr0h	equ	0xFEA
  1740                           fsr0l	equ	0xFE9
  1741                           wreg	equ	0xFE8
  1742                           postdec1	equ	0xFE5
  1743                           plusw1	equ	0xFE3
  1744                           fsr1l	equ	0xFE1
  1745                           indf2	equ	0xFDF
  1746                           postinc2	equ	0xFDE
  1747                           plusw2	equ	0xFDB
  1748                           fsr2h	equ	0xFDA
  1749                           fsr2l	equ	0xFD9
  1750                           status	equ	0xFD8
  1751                           
  1752 ;; *************** function _EscreveCaractereLCD *****************
  1753 ;; Defined at:
  1754 ;;		line 339 in file "displayLCD.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  data            1    wreg     unsigned char 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  data            1   17[COMRAM] unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1768 ;;      Params:         0       0       0       0       0       0       0       0       0
  1769 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1771 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1772 ;;Total ram usage:        1 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    2
  1775 ;; This function calls:
  1776 ;;		_Delay
  1777 ;; This function is called by:
  1778 ;;		_EscreveFraseRamLCD
  1779 ;;		_EscreveFloatLCD
  1780 ;;		_EscreveFraseLCD
  1781 ;;		_CriaCaractereLCD
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text10
  1786  000C2A                     __ptext10:
  1787                           	opt stack 0
  1788  000C2A                     _EscreveCaractereLCD:
  1789                           	opt stack 26
  1790                           
  1791                           ;incstack = 0
  1792                           ;EscreveCaractereLCD@data stored from wreg
  1793  000C2A  6E12               	movwf	EscreveCaractereLCD@data,c
  1794                           
  1795                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
  1796  000C2C  9483               	bcf	3971,2,c	;volatile
  1797                           
  1798                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
  1799  000C2E  8283               	bsf	3971,1,c	;volatile
  1800                           
  1801                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
  1802  000C30  9083               	bcf	3971,0,c	;volatile
  1803                           
  1804                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
  1805  000C32  A812               	btfss	EscreveCaractereLCD@data,4,c
  1806  000C34  D002               	goto	l80
  1807  000C36  8883               	bsf	3971,4,c	;volatile
  1808  000C38  D001               	goto	l1409
  1809  000C3A                     l80:
  1810                           
  1811                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
  1812  000C3A  9883               	bcf	3971,4,c	;volatile
  1813  000C3C                     l1409:
  1814                           
  1815                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
  1816  000C3C  AA12               	btfss	EscreveCaractereLCD@data,5,c
  1817  000C3E  D002               	goto	l82
  1818  000C40  8A83               	bsf	3971,5,c	;volatile
  1819  000C42  D001               	goto	l1413
  1820  000C44                     l82:
  1821                           
  1822                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
  1823  000C44  9A83               	bcf	3971,5,c	;volatile
  1824  000C46                     l1413:
  1825                           
  1826                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
  1827  000C46  AC12               	btfss	EscreveCaractereLCD@data,6,c
  1828  000C48  D002               	goto	l84
  1829  000C4A  8C83               	bsf	3971,6,c	;volatile
  1830  000C4C  D001               	goto	l1417
  1831  000C4E                     l84:
  1832                           
  1833                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
  1834  000C4E  9C83               	bcf	3971,6,c	;volatile
  1835  000C50                     l1417:
  1836                           
  1837                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
  1838  000C50  AE12               	btfss	EscreveCaractereLCD@data,7,c
  1839  000C52  D002               	goto	l86
  1840  000C54  8E83               	bsf	3971,7,c	;volatile
  1841  000C56  D001               	goto	l87
  1842  000C58                     l86:
  1843                           
  1844                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
  1845  000C58  9E83               	bcf	3971,7,c	;volatile
  1846  000C5A                     l87:
  1847                           
  1848                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
  1849  000C5A  8083               	bsf	3971,0,c	;volatile
  1850                           
  1851                           ;displayLCD.c: 358: Delay();
  1852  000C5C  EC85  F007         	call	_Delay	;wreg free
  1853                           
  1854                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  1855  000C60  9083               	bcf	3971,0,c	;volatile
  1856                           
  1857                           ;displayLCD.c: 360: Delay();
  1858  000C62  EC85  F007         	call	_Delay	;wreg free
  1859                           
  1860                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  1861  000C66  A012               	btfss	EscreveCaractereLCD@data,0,c
  1862  000C68  D002               	goto	l88
  1863  000C6A  8883               	bsf	3971,4,c	;volatile
  1864  000C6C  D001               	goto	l89
  1865  000C6E                     l88:
  1866                           
  1867                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  1868  000C6E  9883               	bcf	3971,4,c	;volatile
  1869  000C70                     l89:
  1870                           
  1871                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  1872  000C70  A212               	btfss	EscreveCaractereLCD@data,1,c
  1873  000C72  D002               	goto	l90
  1874  000C74  8A83               	bsf	3971,5,c	;volatile
  1875  000C76  D001               	goto	l91
  1876  000C78                     l90:
  1877                           
  1878                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  1879  000C78  9A83               	bcf	3971,5,c	;volatile
  1880  000C7A                     l91:
  1881                           
  1882                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  1883  000C7A  A412               	btfss	EscreveCaractereLCD@data,2,c
  1884  000C7C  D002               	goto	l92
  1885  000C7E  8C83               	bsf	3971,6,c	;volatile
  1886  000C80  D001               	goto	l93
  1887  000C82                     l92:
  1888                           
  1889                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  1890  000C82  9C83               	bcf	3971,6,c	;volatile
  1891  000C84                     l93:
  1892                           
  1893                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  1894  000C84  A612               	btfss	EscreveCaractereLCD@data,3,c
  1895  000C86  D002               	goto	l94
  1896  000C88  8E83               	bsf	3971,7,c	;volatile
  1897  000C8A  D001               	goto	l95
  1898  000C8C                     l94:
  1899                           
  1900                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  1901  000C8C  9E83               	bcf	3971,7,c	;volatile
  1902  000C8E                     l95:
  1903                           
  1904                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  1905  000C8E  8083               	bsf	3971,0,c	;volatile
  1906                           
  1907                           ;displayLCD.c: 375: Delay();
  1908  000C90  EC85  F007         	call	_Delay	;wreg free
  1909                           
  1910                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  1911  000C94  9083               	bcf	3971,0,c	;volatile
  1912                           
  1913                           ;displayLCD.c: 377: Delay();
  1914  000C96  EC85  F007         	call	_Delay	;wreg free
  1915  000C9A  0012               	return		;funcret
  1916  000C9C                     __end_of_EscreveCaractereLCD:
  1917                           	opt stack 0
  1918                           tblptru	equ	0xFF8
  1919                           tblptrh	equ	0xFF7
  1920                           tblptrl	equ	0xFF6
  1921                           tablat	equ	0xFF5
  1922                           intcon	equ	0xFF2
  1923                           intcon2	equ	0xFF1
  1924                           intcon3	equ	0xFF0
  1925                           indf0	equ	0xFEF
  1926                           postinc0	equ	0xFEE
  1927                           fsr0h	equ	0xFEA
  1928                           fsr0l	equ	0xFE9
  1929                           wreg	equ	0xFE8
  1930                           postdec1	equ	0xFE5
  1931                           plusw1	equ	0xFE3
  1932                           fsr1l	equ	0xFE1
  1933                           indf2	equ	0xFDF
  1934                           postinc2	equ	0xFDE
  1935                           plusw2	equ	0xFDB
  1936                           fsr2h	equ	0xFDA
  1937                           fsr2l	equ	0xFD9
  1938                           status	equ	0xFD8
  1939                           
  1940 ;; *************** function _ConfiguraLCD *****************
  1941 ;; Defined at:
  1942 ;;		line 80 in file "displayLCD.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1958 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1959 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1960 ;;Total ram usage:        1 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    3
  1963 ;; This function calls:
  1964 ;;		_Delay
  1965 ;;		_EscreveComandoLCD
  1966 ;; This function is called by:
  1967 ;;		_main
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text11
  1972  000B00                     __ptext11:
  1973                           	opt stack 0
  1974  000B00                     _ConfiguraLCD:
  1975                           	opt stack 27
  1976                           
  1977                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  1978                           
  1979                           ;incstack = 0
  1980  000B00  9495               	bcf	3989,2,c	;volatile
  1981                           
  1982                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  1983  000B02  9295               	bcf	3989,1,c	;volatile
  1984                           
  1985                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  1986  000B04  9095               	bcf	3989,0,c	;volatile
  1987                           
  1988                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  1989  000B06  9895               	bcf	3989,4,c	;volatile
  1990                           
  1991                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  1992  000B08  9A95               	bcf	3989,5,c	;volatile
  1993                           
  1994                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  1995  000B0A  9C95               	bcf	3989,6,c	;volatile
  1996                           
  1997                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  1998  000B0C  9E95               	bcf	3989,7,c	;volatile
  1999                           
  2000                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  2001  000B0E  9483               	bcf	3971,2,c	;volatile
  2002                           
  2003                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  2004  000B10  9283               	bcf	3971,1,c	;volatile
  2005                           
  2006                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  2007  000B12  9083               	bcf	3971,0,c	;volatile
  2008                           
  2009                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  2010  000B14  9E83               	bcf	3971,7,c	;volatile
  2011                           
  2012                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  2013  000B16  9C83               	bcf	3971,6,c	;volatile
  2014                           
  2015                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  2016  000B18  8A83               	bsf	3971,5,c	;volatile
  2017                           
  2018                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  2019  000B1A  8883               	bsf	3971,4,c	;volatile
  2020                           
  2021                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  2022  000B1C  0EEA               	movlw	234
  2023  000B1E  6E13               	movwf	??_ConfiguraLCD& (0+255),c
  2024  000B20  0EC3               	movlw	195
  2025  000B22                     u1287:
  2026  000B22  2EE8               	decfsz	wreg,f,c
  2027  000B24  D7FE               	bra	u1287
  2028  000B26  2E13               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2029  000B28  D7FC               	bra	u1287
  2030  000B2A  F000               	nop	
  2031                           
  2032                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  2033  000B2C  8083               	bsf	3971,0,c	;volatile
  2034                           
  2035                           ;displayLCD.c: 117: Delay();
  2036  000B2E  EC85  F007         	call	_Delay	;wreg free
  2037                           
  2038                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  2039  000B32  9083               	bcf	3971,0,c	;volatile
  2040                           
  2041                           ;displayLCD.c: 119: Delay();
  2042  000B34  EC85  F007         	call	_Delay	;wreg free
  2043                           
  2044                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  2045  000B38  0E4E               	movlw	78
  2046  000B3A  6E13               	movwf	??_ConfiguraLCD& (0+255),c
  2047  000B3C  0EEB               	movlw	235
  2048  000B3E                     u1297:
  2049  000B3E  2EE8               	decfsz	wreg,f,c
  2050  000B40  D7FE               	bra	u1297
  2051  000B42  2E13               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2052  000B44  D7FC               	bra	u1297
  2053  000B46  F000               	nop	
  2054                           
  2055                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  2056  000B48  8083               	bsf	3971,0,c	;volatile
  2057                           
  2058                           ;displayLCD.c: 128: Delay();
  2059  000B4A  EC85  F007         	call	_Delay	;wreg free
  2060                           
  2061                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  2062  000B4E  9083               	bcf	3971,0,c	;volatile
  2063                           
  2064                           ;displayLCD.c: 130: Delay();
  2065  000B50  EC85  F007         	call	_Delay	;wreg free
  2066                           
  2067                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  2068  000B54  0E4E               	movlw	78
  2069  000B56  6E13               	movwf	??_ConfiguraLCD& (0+255),c
  2070  000B58  0EEB               	movlw	235
  2071  000B5A                     u1307:
  2072  000B5A  2EE8               	decfsz	wreg,f,c
  2073  000B5C  D7FE               	bra	u1307
  2074  000B5E  2E13               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2075  000B60  D7FC               	bra	u1307
  2076  000B62  F000               	nop	
  2077                           
  2078                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  2079  000B64  8083               	bsf	3971,0,c	;volatile
  2080                           
  2081                           ;displayLCD.c: 139: Delay();
  2082  000B66  EC85  F007         	call	_Delay	;wreg free
  2083                           
  2084                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  2085  000B6A  9083               	bcf	3971,0,c	;volatile
  2086                           
  2087                           ;displayLCD.c: 141: Delay();
  2088  000B6C  EC85  F007         	call	_Delay	;wreg free
  2089                           
  2090                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  2091  000B70  9E83               	bcf	3971,7,c	;volatile
  2092                           
  2093                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  2094  000B72  9C83               	bcf	3971,6,c	;volatile
  2095                           
  2096                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  2097  000B74  8A83               	bsf	3971,5,c	;volatile
  2098                           
  2099                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  2100  000B76  9883               	bcf	3971,4,c	;volatile
  2101                           
  2102                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  2103  000B78  8083               	bsf	3971,0,c	;volatile
  2104                           
  2105                           ;displayLCD.c: 152: Delay();
  2106  000B7A  EC85  F007         	call	_Delay	;wreg free
  2107                           
  2108                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  2109  000B7E  9083               	bcf	3971,0,c	;volatile
  2110                           
  2111                           ;displayLCD.c: 154: Delay();
  2112  000B80  EC85  F007         	call	_Delay	;wreg free
  2113                           
  2114                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  2115  000B84  0E28               	movlw	40
  2116  000B86  ECCF  F005         	call	_EscreveComandoLCD
  2117                           
  2118                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  2119  000B8A  0E06               	movlw	6
  2120  000B8C  ECCF  F005         	call	_EscreveComandoLCD
  2121                           
  2122                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  2123  000B90  0E0E               	movlw	14
  2124  000B92  ECCF  F005         	call	_EscreveComandoLCD
  2125                           
  2126                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  2127  000B96  0E01               	movlw	1
  2128  000B98  ECCF  F005         	call	_EscreveComandoLCD
  2129  000B9C  0012               	return		;funcret
  2130  000B9E                     __end_of_ConfiguraLCD:
  2131                           	opt stack 0
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           intcon	equ	0xFF2
  2137                           intcon2	equ	0xFF1
  2138                           intcon3	equ	0xFF0
  2139                           indf0	equ	0xFEF
  2140                           postinc0	equ	0xFEE
  2141                           fsr0h	equ	0xFEA
  2142                           fsr0l	equ	0xFE9
  2143                           wreg	equ	0xFE8
  2144                           postdec1	equ	0xFE5
  2145                           plusw1	equ	0xFE3
  2146                           fsr1l	equ	0xFE1
  2147                           indf2	equ	0xFDF
  2148                           postinc2	equ	0xFDE
  2149                           plusw2	equ	0xFDB
  2150                           fsr2h	equ	0xFDA
  2151                           fsr2l	equ	0xFD9
  2152                           status	equ	0xFD8
  2153                           
  2154 ;; *************** function _EscreveComandoLCD *****************
  2155 ;; Defined at:
  2156 ;;		line 172 in file "displayLCD.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  cmd             1    wreg     unsigned char 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  cmd             1   17[COMRAM] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2170 ;;      Params:         0       0       0       0       0       0       0       0       0
  2171 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2173 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2174 ;;Total ram usage:        1 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    2
  2177 ;; This function calls:
  2178 ;;		_Delay
  2179 ;; This function is called by:
  2180 ;;		_ConfiguraLCD
  2181 ;;		_main
  2182 ;;		_CriaCaractereLCD
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text12
  2187  000B9E                     __ptext12:
  2188                           	opt stack 0
  2189  000B9E                     _EscreveComandoLCD:
  2190                           	opt stack 28
  2191                           
  2192                           ;incstack = 0
  2193                           ;EscreveComandoLCD@cmd stored from wreg
  2194  000B9E  6E12               	movwf	EscreveComandoLCD@cmd,c
  2195                           
  2196                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  2197  000BA0  9483               	bcf	3971,2,c	;volatile
  2198                           
  2199                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  2200  000BA2  9283               	bcf	3971,1,c	;volatile
  2201                           
  2202                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  2203  000BA4  9083               	bcf	3971,0,c	;volatile
  2204                           
  2205                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  2206  000BA6  A812               	btfss	EscreveComandoLCD@cmd,4,c
  2207  000BA8  D002               	goto	l29
  2208  000BAA  8883               	bsf	3971,4,c	;volatile
  2209  000BAC  D001               	goto	l1475
  2210  000BAE                     l29:
  2211                           
  2212                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  2213  000BAE  9883               	bcf	3971,4,c	;volatile
  2214  000BB0                     l1475:
  2215                           
  2216                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  2217  000BB0  AA12               	btfss	EscreveComandoLCD@cmd,5,c
  2218  000BB2  D002               	goto	l31
  2219  000BB4  8A83               	bsf	3971,5,c	;volatile
  2220  000BB6  D001               	goto	l1479
  2221  000BB8                     l31:
  2222                           
  2223                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  2224  000BB8  9A83               	bcf	3971,5,c	;volatile
  2225  000BBA                     l1479:
  2226                           
  2227                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  2228  000BBA  AC12               	btfss	EscreveComandoLCD@cmd,6,c
  2229  000BBC  D002               	goto	l33
  2230  000BBE  8C83               	bsf	3971,6,c	;volatile
  2231  000BC0  D001               	goto	l1483
  2232  000BC2                     l33:
  2233                           
  2234                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  2235  000BC2  9C83               	bcf	3971,6,c	;volatile
  2236  000BC4                     l1483:
  2237                           
  2238                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  2239  000BC4  AE12               	btfss	EscreveComandoLCD@cmd,7,c
  2240  000BC6  D002               	goto	l35
  2241  000BC8  8E83               	bsf	3971,7,c	;volatile
  2242  000BCA  D001               	goto	l36
  2243  000BCC                     l35:
  2244                           
  2245                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  2246  000BCC  9E83               	bcf	3971,7,c	;volatile
  2247  000BCE                     l36:
  2248                           
  2249                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  2250  000BCE  8083               	bsf	3971,0,c	;volatile
  2251                           
  2252                           ;displayLCD.c: 191: Delay();
  2253  000BD0  EC85  F007         	call	_Delay	;wreg free
  2254                           
  2255                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  2256  000BD4  9083               	bcf	3971,0,c	;volatile
  2257                           
  2258                           ;displayLCD.c: 193: Delay();
  2259  000BD6  EC85  F007         	call	_Delay	;wreg free
  2260                           
  2261                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  2262  000BDA  A012               	btfss	EscreveComandoLCD@cmd,0,c
  2263  000BDC  D002               	goto	l37
  2264  000BDE  8883               	bsf	3971,4,c	;volatile
  2265  000BE0  D001               	goto	l38
  2266  000BE2                     l37:
  2267                           
  2268                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  2269  000BE2  9883               	bcf	3971,4,c	;volatile
  2270  000BE4                     l38:
  2271                           
  2272                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  2273  000BE4  A212               	btfss	EscreveComandoLCD@cmd,1,c
  2274  000BE6  D002               	goto	l39
  2275  000BE8  8A83               	bsf	3971,5,c	;volatile
  2276  000BEA  D001               	goto	l40
  2277  000BEC                     l39:
  2278                           
  2279                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  2280  000BEC  9A83               	bcf	3971,5,c	;volatile
  2281  000BEE                     l40:
  2282                           
  2283                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  2284  000BEE  A412               	btfss	EscreveComandoLCD@cmd,2,c
  2285  000BF0  D002               	goto	l41
  2286  000BF2  8C83               	bsf	3971,6,c	;volatile
  2287  000BF4  D001               	goto	l42
  2288  000BF6                     l41:
  2289                           
  2290                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  2291  000BF6  9C83               	bcf	3971,6,c	;volatile
  2292  000BF8                     l42:
  2293                           
  2294                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  2295  000BF8  A612               	btfss	EscreveComandoLCD@cmd,3,c
  2296  000BFA  D002               	goto	l43
  2297  000BFC  8E83               	bsf	3971,7,c	;volatile
  2298  000BFE  D001               	goto	l44
  2299  000C00                     l43:
  2300                           
  2301                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  2302  000C00  9E83               	bcf	3971,7,c	;volatile
  2303  000C02                     l44:
  2304                           
  2305                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  2306  000C02  8083               	bsf	3971,0,c	;volatile
  2307                           
  2308                           ;displayLCD.c: 207: Delay();
  2309  000C04  EC85  F007         	call	_Delay	;wreg free
  2310                           
  2311                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  2312  000C08  9083               	bcf	3971,0,c	;volatile
  2313                           
  2314                           ;displayLCD.c: 209: Delay();
  2315  000C0A  EC85  F007         	call	_Delay	;wreg free
  2316                           
  2317                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  2318  000C0E  0412               	decf	EscreveComandoLCD@cmd,w,c
  2319  000C10  B4D8               	btfsc	status,2,c
  2320  000C12  D008               	goto	l1511
  2321  000C14  0E02               	movlw	2
  2322  000C16  1812               	xorwf	EscreveComandoLCD@cmd,w,c
  2323  000C18  B4D8               	btfsc	status,2,c
  2324  000C1A  D004               	goto	l1511
  2325  000C1C  0E03               	movlw	3
  2326  000C1E  1812               	xorwf	EscreveComandoLCD@cmd,w,c
  2327  000C20  A4D8               	btfss	status,2,c
  2328  000C22  0012               	return	
  2329  000C24                     l1511:
  2330                           
  2331                           ;displayLCD.c: 215: { Delay(); }
  2332  000C24  EC85  F007         	call	_Delay	;wreg free
  2333  000C28  0012               	return	
  2334  000C2A                     __end_of_EscreveComandoLCD:
  2335                           	opt stack 0
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           intcon	equ	0xFF2
  2341                           intcon2	equ	0xFF1
  2342                           intcon3	equ	0xFF0
  2343                           indf0	equ	0xFEF
  2344                           postinc0	equ	0xFEE
  2345                           fsr0h	equ	0xFEA
  2346                           fsr0l	equ	0xFE9
  2347                           wreg	equ	0xFE8
  2348                           postdec1	equ	0xFE5
  2349                           plusw1	equ	0xFE3
  2350                           fsr1l	equ	0xFE1
  2351                           indf2	equ	0xFDF
  2352                           postinc2	equ	0xFDE
  2353                           plusw2	equ	0xFDB
  2354                           fsr2h	equ	0xFDA
  2355                           fsr2l	equ	0xFD9
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _Delay *****************
  2359 ;; Defined at:
  2360 ;;		line 54 in file "displayLCD.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  Cnt2            1   16[COMRAM] unsigned char 
  2365 ;;  Cnt1            1   15[COMRAM] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0
  2376 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2378 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2379 ;;Total ram usage:        2 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    1
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_ConfiguraLCD
  2386 ;;		_EscreveComandoLCD
  2387 ;;		_EnderecoCursor
  2388 ;;		_EscreveCaractereLCD
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text13
  2393  000F0A                     __ptext13:
  2394                           	opt stack 0
  2395  000F0A                     _Delay:
  2396                           	opt stack 27
  2397                           
  2398                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  2399                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  2400                           
  2401                           ;incstack = 0
  2402  000F0A  0E00               	movlw	0
  2403  000F0C  6E10               	movwf	Delay@Cnt1,c
  2404  000F0E                     l1347:
  2405  000F0E  0E1D               	movlw	29
  2406  000F10  6410               	cpfsgt	Delay@Cnt1,c
  2407  000F12  D001               	goto	l19
  2408  000F14  0012               	return	
  2409  000F16                     l19:
  2410                           
  2411                           ;displayLCD.c: 59: {
  2412                           ;displayLCD.c: 60: __nop();
  2413  000F16  F000               	nop	
  2414                           
  2415                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  2416  000F18  0E00               	movlw	0
  2417  000F1A  6E11               	movwf	Delay@Cnt2,c
  2418  000F1C                     l1353:
  2419  000F1C  0E1D               	movlw	29
  2420  000F1E  6411               	cpfsgt	Delay@Cnt2,c
  2421  000F20  D001               	goto	l21
  2422  000F22  D003               	goto	l1361
  2423  000F24                     l21:
  2424                           
  2425                           ;displayLCD.c: 62: {
  2426                           ;displayLCD.c: 63: __nop();
  2427  000F24  F000               	nop	
  2428  000F26  2A11               	incf	Delay@Cnt2,f,c
  2429  000F28  D7F9               	goto	l1353
  2430  000F2A                     l1361:
  2431  000F2A  2A10               	incf	Delay@Cnt1,f,c
  2432  000F2C  D7F0               	goto	l1347
  2433  000F2E                     __end_of_Delay:
  2434                           	opt stack 0
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           intcon	equ	0xFF2
  2440                           intcon2	equ	0xFF1
  2441                           intcon3	equ	0xFF0
  2442                           indf0	equ	0xFEF
  2443                           postinc0	equ	0xFEE
  2444                           fsr0h	equ	0xFEA
  2445                           fsr0l	equ	0xFE9
  2446                           wreg	equ	0xFE8
  2447                           postdec1	equ	0xFE5
  2448                           plusw1	equ	0xFE3
  2449                           fsr1l	equ	0xFE1
  2450                           indf2	equ	0xFDF
  2451                           postinc2	equ	0xFDE
  2452                           plusw2	equ	0xFDB
  2453                           fsr2h	equ	0xFDA
  2454                           fsr2l	equ	0xFD9
  2455                           status	equ	0xFD8
  2456                           
  2457 ;; *************** function _InterrupcoesAlta *****************
  2458 ;; Defined at:
  2459 ;;		line 109 in file "intext.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2473 ;;      Params:         0       0       0       0       0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2475 ;;      Temps:         15       0       0       0       0       0       0       0       0
  2476 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2477 ;;Total ram usage:       15 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		Interrupt level 2
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	intcode
  2487  000008                     __pintcode:
  2488                           	opt stack 0
  2489  000008                     _InterrupcoesAlta:
  2490                           	opt stack 26
  2491                           
  2492                           ;incstack = 0
  2493  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2494  00000A  EDC8  F004         	call	int_func,f	;refresh shadow registers
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           intcon	equ	0xFF2
  2500                           intcon2	equ	0xFF1
  2501                           intcon3	equ	0xFF0
  2502                           indf0	equ	0xFEF
  2503                           postinc0	equ	0xFEE
  2504                           fsr0h	equ	0xFEA
  2505                           fsr0l	equ	0xFE9
  2506                           wreg	equ	0xFE8
  2507                           postdec1	equ	0xFE5
  2508                           plusw1	equ	0xFE3
  2509                           fsr1l	equ	0xFE1
  2510                           indf2	equ	0xFDF
  2511                           postinc2	equ	0xFDE
  2512                           plusw2	equ	0xFDB
  2513                           fsr2h	equ	0xFDA
  2514                           fsr2l	equ	0xFD9
  2515                           status	equ	0xFD8
  2516                           
  2517                           	psect	intcode_body
  2518  000990                     __pintcode_body:
  2519                           	opt stack 26
  2520  000990                     int_func:
  2521                           	opt stack 26
  2522  000990  0006               	pop		; remove dummy address from shadow register refresh
  2523  000992  CFFA F002          	movff	pclath,??_InterrupcoesAlta+1
  2524  000996  CFFB F003          	movff	pclatu,??_InterrupcoesAlta+2
  2525  00099A  CFE9 F004          	movff	fsr0l,??_InterrupcoesAlta+3
  2526  00099E  CFEA F005          	movff	fsr0h,??_InterrupcoesAlta+4
  2527  0009A2  CFE1 F006          	movff	fsr1l,??_InterrupcoesAlta+5
  2528  0009A6  CFE2 F007          	movff	fsr1h,??_InterrupcoesAlta+6
  2529  0009AA  CFD9 F008          	movff	fsr2l,??_InterrupcoesAlta+7
  2530  0009AE  CFDA F009          	movff	fsr2h,??_InterrupcoesAlta+8
  2531  0009B2  CFF3 F00A          	movff	prodl,??_InterrupcoesAlta+9
  2532  0009B6  CFF4 F00B          	movff	prodh,??_InterrupcoesAlta+10
  2533  0009BA  CFF6 F00C          	movff	tblptrl,??_InterrupcoesAlta+11
  2534  0009BE  CFF7 F00D          	movff	tblptrh,??_InterrupcoesAlta+12
  2535  0009C2  CFF8 F00E          	movff	tblptru,??_InterrupcoesAlta+13
  2536  0009C6  CFF5 F00F          	movff	tablat,??_InterrupcoesAlta+14
  2537                           
  2538                           ;intext.c: 112: if(INT0IE && INT0IF){
  2539  0009CA  B8F2               	btfsc	intcon,4,c	;volatile
  2540  0009CC  A2F2               	btfss	intcon,1,c	;volatile
  2541  0009CE  D010               	goto	i2l1783
  2542                           
  2543                           ;intext.c: 113: PORTBbits.RB7 = !PORTBbits.RB7;
  2544  0009D0  BE81               	btfsc	3969,7,c	;volatile
  2545  0009D2  D003               	goto	i2u120_40
  2546  0009D4  6A01               	clrf	??_InterrupcoesAlta& (0+255),c
  2547  0009D6  2A01               	incf	??_InterrupcoesAlta& (0+255),f,c
  2548  0009D8  D001               	goto	i2u121_48
  2549  0009DA                     i2u120_40:
  2550  0009DA  6A01               	clrf	??_InterrupcoesAlta& (0+255),c
  2551  0009DC                     i2u121_48:
  2552  0009DC  3201               	rrcf	??_InterrupcoesAlta,f,c
  2553  0009DE  3201               	rrcf	??_InterrupcoesAlta,f,c
  2554  0009E0  5081               	movf	3969,w,c	;volatile
  2555  0009E2  1801               	xorwf	??_InterrupcoesAlta,w,c
  2556  0009E4  0B7F               	andlw	-129
  2557  0009E6  1801               	xorwf	??_InterrupcoesAlta,w,c
  2558  0009E8  6E81               	movwf	3969,c	;volatile
  2559                           
  2560                           ;intext.c: 114: contador++;
  2561  0009EA  0100               	movlb	0	; () banked
  2562  0009EC  2BA4               	incf	_contador& (0+255),f,b
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;intext.c: 115: INT0IF = 0;
  2566  0009EE  92F2               	bcf	intcon,1,c	;volatile
  2567  0009F0                     i2l1783:
  2568                           
  2569                           ;intext.c: 116: }
  2570                           ;intext.c: 117: if(INT1IE && INT1IF){
  2571  0009F0  B6F0               	btfsc	intcon3,3,c	;volatile
  2572  0009F2  A0F0               	btfss	intcon3,0,c	;volatile
  2573  0009F4  D015               	goto	i2l206
  2574                           
  2575                           ;intext.c: 118: PORTBbits.RB6 = !PORTBbits.RB6;
  2576  0009F6  BC81               	btfsc	3969,6,c	;volatile
  2577  0009F8  D003               	goto	i2u124_40
  2578  0009FA  6A01               	clrf	??_InterrupcoesAlta& (0+255),c
  2579  0009FC  2A01               	incf	??_InterrupcoesAlta& (0+255),f,c
  2580  0009FE  D001               	goto	i2u125_48
  2581  000A00                     i2u124_40:
  2582  000A00  6A01               	clrf	??_InterrupcoesAlta& (0+255),c
  2583  000A02                     i2u125_48:
  2584  000A02  3A01               	swapf	??_InterrupcoesAlta,f,c
  2585  000A04  4601               	rlncf	??_InterrupcoesAlta,f,c
  2586  000A06  4601               	rlncf	??_InterrupcoesAlta,f,c
  2587  000A08  5081               	movf	3969,w,c	;volatile
  2588  000A0A  1801               	xorwf	??_InterrupcoesAlta,w,c
  2589  000A0C  0BBF               	andlw	-65
  2590  000A0E  1801               	xorwf	??_InterrupcoesAlta,w,c
  2591  000A10  6E81               	movwf	3969,c	;volatile
  2592                           
  2593                           ;intext.c: 119: if(contador > 0){
  2594  000A12  0100               	movlb	0	; () banked
  2595  000A14  51A4               	movf	_contador& (0+255),w,b
  2596  000A16  B4D8               	btfsc	status,2,c
  2597  000A18  D002               	goto	i2l1793
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;intext.c: 120: contador--;
  2601  000A1A  0100               	movlb	0	; () banked
  2602  000A1C  07A4               	decf	_contador& (0+255),f,b
  2603  000A1E                     i2l1793:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;intext.c: 121: }
  2607                           ;intext.c: 122: INT1IF = 0;
  2608  000A1E  90F0               	bcf	intcon3,0,c	;volatile
  2609  000A20                     i2l206:
  2610  000A20  C00F  FFF5         	movff	??_InterrupcoesAlta+14,tablat
  2611  000A24  C00E  FFF8         	movff	??_InterrupcoesAlta+13,tblptru
  2612  000A28  C00D  FFF7         	movff	??_InterrupcoesAlta+12,tblptrh
  2613  000A2C  C00C  FFF6         	movff	??_InterrupcoesAlta+11,tblptrl
  2614  000A30  C00B  FFF4         	movff	??_InterrupcoesAlta+10,prodh
  2615  000A34  C00A  FFF3         	movff	??_InterrupcoesAlta+9,prodl
  2616  000A38  C009  FFDA         	movff	??_InterrupcoesAlta+8,fsr2h
  2617  000A3C  C008  FFD9         	movff	??_InterrupcoesAlta+7,fsr2l
  2618  000A40  C007  FFE2         	movff	??_InterrupcoesAlta+6,fsr1h
  2619  000A44  C006  FFE1         	movff	??_InterrupcoesAlta+5,fsr1l
  2620  000A48  C005  FFEA         	movff	??_InterrupcoesAlta+4,fsr0h
  2621  000A4C  C004  FFE9         	movff	??_InterrupcoesAlta+3,fsr0l
  2622  000A50  C003  FFFB         	movff	??_InterrupcoesAlta+2,pclatu
  2623  000A54  C002  FFFA         	movff	??_InterrupcoesAlta+1,pclath
  2624  000A58  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2625  000A5A  0011               	retfie		f
  2626  000A5C                     __end_of_InterrupcoesAlta:
  2627                           	opt stack 0
  2628                           pclatu	equ	0xFFB
  2629                           pclath	equ	0xFFA
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           prodh	equ	0xFF4
  2635                           prodl	equ	0xFF3
  2636                           intcon	equ	0xFF2
  2637                           intcon2	equ	0xFF1
  2638                           intcon3	equ	0xFF0
  2639                           indf0	equ	0xFEF
  2640                           postinc0	equ	0xFEE
  2641                           fsr0h	equ	0xFEA
  2642                           fsr0l	equ	0xFE9
  2643                           wreg	equ	0xFE8
  2644                           postdec1	equ	0xFE5
  2645                           plusw1	equ	0xFE3
  2646                           fsr1h	equ	0xFE2
  2647                           fsr1l	equ	0xFE1
  2648                           indf2	equ	0xFDF
  2649                           postinc2	equ	0xFDE
  2650                           plusw2	equ	0xFDB
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           status	equ	0xFD8
  2654                           pclatu	equ	0xFFB
  2655                           pclath	equ	0xFFA
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           prodh	equ	0xFF4
  2661                           prodl	equ	0xFF3
  2662                           intcon	equ	0xFF2
  2663                           intcon2	equ	0xFF1
  2664                           intcon3	equ	0xFF0
  2665                           indf0	equ	0xFEF
  2666                           postinc0	equ	0xFEE
  2667                           fsr0h	equ	0xFEA
  2668                           fsr0l	equ	0xFE9
  2669                           wreg	equ	0xFE8
  2670                           postdec1	equ	0xFE5
  2671                           plusw1	equ	0xFE3
  2672                           fsr1h	equ	0xFE2
  2673                           fsr1l	equ	0xFE1
  2674                           indf2	equ	0xFDF
  2675                           postinc2	equ	0xFDE
  2676                           plusw2	equ	0xFDB
  2677                           fsr2h	equ	0xFDA
  2678                           fsr2l	equ	0xFD9
  2679                           status	equ	0xFD8
  2680                           
  2681                           	psect	rparam
  2682  0000                     pclatu	equ	0xFFB
  2683                           pclath	equ	0xFFA
  2684                           tblptru	equ	0xFF8
  2685                           tblptrh	equ	0xFF7
  2686                           tblptrl	equ	0xFF6
  2687                           tablat	equ	0xFF5
  2688                           prodh	equ	0xFF4
  2689                           prodl	equ	0xFF3
  2690                           intcon	equ	0xFF2
  2691                           intcon2	equ	0xFF1
  2692                           intcon3	equ	0xFF0
  2693                           indf0	equ	0xFEF
  2694                           postinc0	equ	0xFEE
  2695                           fsr0h	equ	0xFEA
  2696                           fsr0l	equ	0xFE9
  2697                           wreg	equ	0xFE8
  2698                           postdec1	equ	0xFE5
  2699                           plusw1	equ	0xFE3
  2700                           fsr1h	equ	0xFE2
  2701                           fsr1l	equ	0xFE1
  2702                           indf2	equ	0xFDF
  2703                           postinc2	equ	0xFDE
  2704                           plusw2	equ	0xFDB
  2705                           fsr2h	equ	0xFDA
  2706                           fsr2l	equ	0xFD9
  2707                           status	equ	0xFD8
  2708                           
  2709                           	psect	temp
  2710  000049                     btemp:
  2711                           	opt stack 0
  2712  000049                     	ds	1
  2713  0000                     int$flags	set	btemp
  2714                           pclatu	equ	0xFFB
  2715                           pclath	equ	0xFFA
  2716                           tblptru	equ	0xFF8
  2717                           tblptrh	equ	0xFF7
  2718                           tblptrl	equ	0xFF6
  2719                           tablat	equ	0xFF5
  2720                           prodh	equ	0xFF4
  2721                           prodl	equ	0xFF3
  2722                           intcon	equ	0xFF2
  2723                           intcon2	equ	0xFF1
  2724                           intcon3	equ	0xFF0
  2725                           indf0	equ	0xFEF
  2726                           postinc0	equ	0xFEE
  2727                           fsr0h	equ	0xFEA
  2728                           fsr0l	equ	0xFE9
  2729                           wreg	equ	0xFE8
  2730                           postdec1	equ	0xFE5
  2731                           plusw1	equ	0xFE3
  2732                           fsr1h	equ	0xFE2
  2733                           fsr1l	equ	0xFE1
  2734                           indf2	equ	0xFDF
  2735                           postinc2	equ	0xFDE
  2736                           plusw2	equ	0xFDB
  2737                           fsr2h	equ	0xFDA
  2738                           fsr2l	equ	0xFD9
  2739                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    108
    Data        7
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      72
    BANK0           160     68      69
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[4]), main@Texto_2(BANK0[17]), main@Texto_1(BANK0[17]), main@Texto_0(BANK0[17]), 
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_EscreveInteiroLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveInteiroLCD->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _InterrupcoesAlta in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterrupcoesAlta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterrupcoesAlta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterrupcoesAlta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterrupcoesAlta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterrupcoesAlta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterrupcoesAlta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterrupcoesAlta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterrupcoesAlta in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0    4803
                                              0 BANK0     68    68      0
                       _ConfiguraLCD
                  _EscreveComandoLCD
                 _EscreveFraseRamLCD
                  _EscreveInteiroLCD
                   _PosicaoCursorLCD
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2      86
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _PosicaoCursorLCD                                     3     2      1     772
                                             18 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (2) _EnderecoCursor                                       1     1      0     246
                                             17 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _EscreveInteiroLCD                                    9     7      2    2390
                                             39 COMRAM     9     7      2
                 _EscreveFraseRamLCD
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1554
                                             31 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1199
                                             22 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EscreveFraseRamLCD                                   2     0      2     697
                                             18 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (3) _EscreveCaractereLCD                                  1     1      0     268
                                             17 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     426
                                             18 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (1) _EscreveComandoLCD                                    1     1      0     334
                                             17 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     2      0      92
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterrupcoesAlta                                    15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveComandoLCD
     _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _EscreveInteiroLCD
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   _delay_ms

 _InterrupcoesAlta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      45       5       43.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      48       1       76.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8D      20        0.0%
DATA                 0      0      8D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Nov 12 16:19:12 2020

                          l21 0F24                            l31 0BB8                            l40 0BEE  
                          l41 0BF6                            l33 0BC2                            l42 0BF8  
                          l19 0F16                            l43 0C00                            l35 0BCC  
                          l51 0CAE                            l44 0C02                            l36 0BCE  
                          l60 0CE4                            l37 0BE2                            l29 0BAE  
                          l61 0CEC                            l53 0CB8                            l38 0BE4  
                          l62 0CEE                            l70 0D10                            l39 0BEC  
                          l63 0CF6                            l55 0CC2                            l80 0C3A  
                          l64 0CF8                            l56 0CC4                            l57 0CD8  
                          l90 0C78                            l82 0C44                            l58 0CDA  
                          l91 0C7A                            l59 0CE2                            l92 0C82  
                          l84 0C4E                            l93 0C84                            l94 0C8C  
                          l86 0C58                            l95 0C8E                            l87 0C5A  
                          l88 0C6E                            l89 0C70                           l605 0ADC  
                         l684 0DB0                           l694 0E86                   main@Texto_0 0071  
                 main@Texto_1 0093                   main@Texto_2 0082                   main@Texto_3 0060  
                         wreg 000FE8                          l1413 0C46                          l1511 0C24  
                        l1361 0F2A                          l1353 0F1C                          l1417 0C50  
                        l1409 0C3C                          l1441 0A64                          l1347 0F0E  
                        l1371 0D7E                          l1451 0A9E                          l1523 0CBA  
                        l1373 0D86                          l1383 0DA6                          l1375 0D8A  
                        l1391 0E5C                          l1519 0CB0                          l1631 0D38  
                        l1623 0D1C                          l1393 0E64                          l1553 0E30  
                        l1483 0BC4                          l1475 0BB0                          l1563 0DE4  
                        l1395 0E68                          l1635 0D46                          l1627 0D2A  
                        l1651 0F30                          l1653 0F40                          l1479 0BBA  
                        l1559 0DBC                          l1399 0E7C                          l1639 0D4C  
                        l1761 095A                          STR_1 0878                          STR_2 086D  
                        u1040 0DDC                          u1050 0E04                          u1130 088C  
                        u1140 08A4                          u1150 08BC                          u1047 0DD2  
                        u1071 0ED8                          u1160 08D4                          u1057 0DFA  
                        u1307 0B5A                          _LATB 000F8A                          u1277 0F36  
                        u1287 0B22                          u1297 0B3E                          _IPEN 007E87  
                        _main 087E                          _itoa 0E0C                          fsr0h 000FEA  
                        fsr1h 000FE2                          indf0 000FEF                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0049                          _utoa 0A5C  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
                ___param_bank 000000    __end_of_EscreveFraseRamLCD 0E0C                         ?_main 0001  
                       ?_itoa 0020                         ?_utoa 0017               __end_of___lwdiv 0DBA  
             __end_of___lwmod 0E90                         i2l206 0A20                         _TRISB 000F93  
                       _TRISE 000F96                         _Delay 0F0A               __end_of_dpowers 0829  
        EscreveComandoLCD@cmd 0012                         pclath 000FFA                         tablat 000FF5  
                       plusw1 000FE3                         plusw2 000FDB                         utoa@c 001F  
                       utoa@v 001D                         status 000FD8               __initialization 0E90  
                __end_of_main 0990                  __end_of_itoa 0E4E                  __end_of_utoa 0B00  
                      ??_main 0031          __end_of_ConfiguraLCD 0B9E                        ??_itoa 0026  
                      ??_utoa 001D                 __activetblptr 000002             _EscreveComandoLCD 0B9E  
                      ?_Delay 0001            ?_EscreveComandoLCD 0001                        _ADCON1 000FC1  
                      _INT0IE 007F94                        _INT0IF 007F91                        _INT1IE 007F83  
                      _INT1IF 007F80                        i2l1783 09F0                        i2l1793 0A1E  
         ??_EscreveComandoLCD 0012              __end_of_delay_ms 0F50             ?_PosicaoCursorLCD 0013  
                   ??___lwdiv 0014  __size_of_EscreveCaractereLCD 0072                     ??___lwmod 0014  
          ??_PosicaoCursorLCD 0014                        clear_0 0EBA     __end_of_EscreveComandoLCD 0C2A  
                      itoa@cp 0026             _EscreveInteiroLCD 0ECE                  __pdataCOMRAM 0042  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8            ?_EscreveInteiroLCD 0028       __size_of_EnderecoCursor 006A  
         ??_EscreveInteiroLCD 002A                    __accesstop 0060       __end_of__initialization 0EC0  
               ___rparam_used 000001                 __end_of_Delay 0F2E                __pcstackCOMRAM 0001  
   __end_of_EscreveInteiroLCD 0F0A     __size_of_InterrupcoesAlta 0A54                       ??_Delay 0010  
                  __pbssBANK0 00A4         __size_of_ConfiguraLCD 009E    __size_of_EscreveComandoLCD 008C  
          _EscreveFraseRamLCD 0DBA                     ?_delay_ms 0010           ?_EscreveFraseRamLCD 0013  
                _ConfiguraLCD 0B00                       __Hparam 0000                       __Lparam 0000  
                     ___lwdiv 0D68                       ___lwmod 0E4E          ??_EscreveFraseRamLCD 0015  
                __psmallconst 0800                       __pcinit 0E90                       __ramtop 0800  
  __size_of_EscreveInteiroLCD 003C                       __ptext0 087E                       __ptext1 0F2E  
                     __ptext2 0D06                       __ptext3 0C9C                       __ptext4 0ECE  
                     __ptext5 0E0C                       __ptext6 0A5C                       __ptext7 0E4E  
                     __ptext8 0D68                       __ptext9 0DBA                       _dpowers 0801  
                  ??_delay_ms 0012                _EnderecoCursor 0C9C                     Delay@Cnt1 0010  
                   Delay@Cnt2 0011                __pintcode_body 0990           _EscreveCaractereLCD 0C2A  
        end_of_initialization 0EC0                       ftoa@buf 0031                       itoa@buf 0020  
                     itoa@val 0022                 __Lmediumconst 0000                       int_func 0990  
           __end_ofmain@F4001 085C             __end_ofmain@F4003 084B             __end_ofmain@F4005 083A  
           __end_ofmain@F3999 086D                       postdec1 000FE5                       postinc0 000FEE  
                     postinc2 000FDE          ?_EscreveCaractereLCD 0001                       utoa@buf 0017  
                     utoa@val 0019   PosicaoCursorLCD@EnderecoLCD 0015                     _PORTBbits 000F81  
                   _PORTDbits 000F83                     _PORTEbits 000F84              _InterrupcoesAlta 0008  
      __end_of_EnderecoCursor 0D06                     _TRISDbits 000F95     __size_of_PosicaoCursorLCD 0062  
       ??_EscreveCaractereLCD 0012                 __pidataCOMRAM 0F50               ?_EnderecoCursor 0001  
         start_initialization 0E90      EscreveFraseRamLCD@buffer 0013                   __pbssCOMRAM 0031  
               __pcstackBANK0 0060             __size_of_delay_ms 0022              ___lwdiv@dividend 0010  
                   __pintcode 0008                      ?___lwdiv 0010                      ?___lwmod 0010  
      EscreveInteiroLCD@F4004 0042                   __smallconst 0800                __size_of_Delay 0024  
            _PosicaoCursorLCD 0D06              ___lwdiv@quotient 0014        EscreveInteiroLCD@valor 0028  
      EscreveInteiroLCD@texto 002A        EnderecoCursor@endereco 0012      __end_of_InterrupcoesAlta 0A5C  
                    i2u120_40 09DA                      i2u121_48 09DC                      i2u124_40 0A00  
                    i2u125_48 0A02       EscreveCaractereLCD@data 0012                     main@F4001 084B  
                   main@F4003 083A                     main@F4005 0829                     main@F3999 085C  
 __size_of_EscreveFraseRamLCD 0052                   _INTCON2bits 000FF1                   _INTCON3bits 000FF0  
                   copy_data0 0EA4         delay_ms@tempodeatraso 0010                      __Hrparam 0000  
                    __Lrparam 0000              ??_EnderecoCursor 0012              __size_of___lwdiv 0052  
            __size_of___lwmod 0042                      _delay_ms 0F2E               ___lwdiv@divisor 0012  
             ___lwdiv@counter 0016                      __ptext10 0C2A                      __ptext11 0B00  
                    __ptext12 0B9E                      __ptext13 0F0A                      _contador 00A4  
               __size_of_main 0112                 __size_of_itoa 0042                 __size_of_utoa 00A4  
 __end_of_EscreveCaractereLCD 0C9C                      int$flags 0049                    _INTCONbits 000FF2  
                    itoa@base 0024                      intlevel2 0000              ___lwmod@dividend 0010  
               ?_ConfiguraLCD 0001      __end_of_PosicaoCursorLCD 0D68        PosicaoCursorLCD@coluna 0013  
                    utoa@base 001B               ___lwmod@divisor 0012               ___lwmod@counter 0014  
       PosicaoCursorLCD@linha 0014                ??_ConfiguraLCD 0013             ?_InterrupcoesAlta 0001  
          ??_InterrupcoesAlta 0001  
