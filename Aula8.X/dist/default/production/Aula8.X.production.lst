

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Nov 09 09:36:32 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.41
    34                           ; Generated 25/01/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  000F14                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for EscreveInteiroLCD@F4004
    73  000F14  30                 	db	48
    74  000F15  30                 	db	48
    75  000F16  30                 	db	48
    76  000F17  30                 	db	48
    77  000F18  30                 	db	48
    78  000F19  30                 	db	48
    79  000F1A  00                 	db	0
    80                           
    81                           	psect	smallconst
    82  000800                     __psmallconst:
    83                           	opt stack 0
    84  000800  00                 	db	0
    85  000801  0001               	dw	1
    86  000803  0000               	dw	0
    87  000805  000A               	dw	10
    88  000807  0000               	dw	0
    89  000809  0064               	dw	100
    90  00080B  0000               	dw	0
    91  00080D  03E8               	dw	1000
    92  00080F  0000               	dw	0
    93  000811  2710               	dw	10000
    94  000813  0000               	dw	0
    95  000815  86A0               	dw	34464
    96  000817  0001               	dw	1
    97  000819  4240               	dw	16960
    98  00081B  000F               	dw	15
    99  00081D  9680               	dw	38528
   100  00081F  0098               	dw	152
   101  000821  E100               	dw	57600
   102  000823  05F5               	dw	1525
   103  000825  CA00               	dw	51712
   104  000827  3B9A               	dw	15258
   105  000829                     __end_of_dpowers:
   106                           	opt stack 0
   107  000829                     main@F3945:
   108                           	opt stack 0
   109  000829  20                 	db	32
   110  00082A  20                 	db	32
   111  00082B  20                 	db	32
   112  00082C  20                 	db	32
   113  00082D  20                 	db	32
   114  00082E  20                 	db	32
   115  00082F  20                 	db	32
   116  000830  20                 	db	32
   117  000831  20                 	db	32
   118  000832  20                 	db	32
   119  000833  20                 	db	32
   120  000834  20                 	db	32
   121  000835  20                 	db	32
   122  000836  20                 	db	32
   123  000837  20                 	db	32
   124  000838  20                 	db	32
   125  000839  00                 	db	0
   126  00083A                     __end_ofmain@F3945:
   127                           	opt stack 0
   128  00083A                     main@F3943:
   129                           	opt stack 0
   130  00083A  43                 	db	67
   131  00083B  4F                 	db	79
   132  00083C  4E                 	db	78
   133  00083D  54                 	db	84
   134  00083E  41                 	db	65
   135  00083F  44                 	db	68
   136  000840  4F                 	db	79
   137  000841  52                 	db	82
   138  000842  20                 	db	32
   139  000843  3D                 	db	61
   140  000844  20                 	db	32
   141  000845  20                 	db	32
   142  000846  20                 	db	32
   143  000847  20                 	db	32
   144  000848  20                 	db	32
   145  000849  20                 	db	32
   146  00084A  00                 	db	0
   147  00084B                     __end_ofmain@F3943:
   148                           	opt stack 0
   149  00084B                     main@F3941:
   150                           	opt stack 0
   151  00084B  20                 	db	32
   152  00084C  20                 	db	32
   153  00084D  49                 	db	73
   154  00084E  4E                 	db	78
   155  00084F  54                 	db	84
   156  000850  45                 	db	69
   157  000851  52                 	db	82
   158  000852  52                 	db	82
   159  000853  55                 	db	85
   160  000854  50                 	db	80
   161  000855  43                 	db	67
   162  000856  4F                 	db	79
   163  000857  45                 	db	69
   164  000858  53                 	db	83
   165  000859  20                 	db	32
   166  00085A  20                 	db	32
   167  00085B  00                 	db	0
   168  00085C                     __end_ofmain@F3941:
   169                           	opt stack 0
   170  00085C                     main@F3939:
   171                           	opt stack 0
   172  00085C  46                 	db	70
   173  00085D  41                 	db	65
   174  00085E  54                 	db	84
   175  00085F  45                 	db	69
   176  000860  43                 	db	67
   177  000861  20                 	db	32
   178  000862  53                 	db	83
   179  000863  54                 	db	84
   180  000864  4F                 	db	79
   181  000865  2E                 	db	46
   182  000866  20                 	db	32
   183  000867  41                 	db	65
   184  000868  4E                 	db	78
   185  000869  44                 	db	68
   186  00086A  52                 	db	82
   187  00086B  45                 	db	69
   188  00086C  00                 	db	0
   189  00086D                     __end_ofmain@F3939:
   190                           	opt stack 0
   191  0000                     _PORTBbits	set	3969
   192  0000                     _INTCON3bits	set	4080
   193  0000                     _INTCONbits	set	4082
   194  0000                     _PORTB	set	3969
   195  0000                     _TRISB	set	3987
   196  0000                     _ADCON1	set	4033
   197  0000                     _PORTDbits	set	3971
   198  0000                     _TRISDbits	set	3989
   199  0000                     _INT1IF	set	32640
   200  0000                     _INT1IE	set	32643
   201  0000                     _INT0IF	set	32657
   202  0000                     _INT0IE	set	32660
   203  00086D  25                 	db	37
   204  00086E  6C                 	db	108	;'l'
   205  00086F  75                 	db	117	;'u'
   206  000870  2E                 	db	46
   207  000871  25                 	db	37
   208  000872  36                 	db	54	;'6'
   209  000873  2E                 	db	46
   210  000874  36                 	db	54	;'6'
   211  000875  6C                 	db	108	;'l'
   212  000876  75                 	db	117	;'u'
   213  000877  00                 	db	0
   214  000878  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219  000E2E                     __pcinit:
   220                           	opt stack 0
   221  000E2E                     start_initialization:
   222                           	opt stack 0
   223  000E2E                     __initialization:
   224                           	opt stack 0
   225                           
   226                           ; Initialize objects allocated to COMRAM (7 bytes)
   227                           ; load TBLPTR registers with __pidataCOMRAM
   228  000E2E  0E14               	movlw	low __pidataCOMRAM
   229  000E30  6EF6               	movwf	tblptrl,c
   230  000E32  0E0F               	movlw	high __pidataCOMRAM
   231  000E34  6EF7               	movwf	tblptrh,c
   232  000E36  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   233  000E38  6EF8               	movwf	tblptru,c
   234  000E3A  EE00  F042         	lfsr	0,__pdataCOMRAM
   235  000E3E  EE10 F007          	lfsr	1,7
   236  000E42                     copy_data0:
   237  000E42  0009               	tblrd		*+
   238  000E44  CFF5 FFEE          	movff	tablat,postinc0
   239  000E48  50E5               	movf	postdec1,w,c
   240  000E4A  50E1               	movf	fsr1l,w,c
   241  000E4C  E1FA               	bnz	copy_data0
   242                           
   243                           ; Clear objects allocated to BANK0 (2 bytes)
   244  000E4E  0100               	movlb	0
   245  000E50  6BA5               	clrf	(__pbssBANK0+1)& (0+255),b
   246  000E52  6BA4               	clrf	__pbssBANK0& (0+255),b
   247                           
   248                           ; Clear objects allocated to COMRAM (17 bytes)
   249  000E54  EE00  F031         	lfsr	0,__pbssCOMRAM
   250  000E58  0E11               	movlw	17
   251  000E5A                     clear_0:
   252  000E5A  6AEE               	clrf	postinc0,c
   253  000E5C  06E8               	decf	wreg,f,c
   254  000E5E  E1FD               	bnz	clear_0
   255  000E60                     end_of_initialization:
   256                           	opt stack 0
   257  000E60                     __end_of__initialization:
   258                           	opt stack 0
   259  000E60  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   260  000E62  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   261  000E64  0E00               	movlw	low (__Lmediumconst shr (0+16))
   262  000E66  6EF8               	movwf	tblptru,c
   263  000E68  0100               	movlb	0
   264  000E6A  EF3D  F004         	goto	_main	;jump to C main() function
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	bssCOMRAM
   275  000031                     __pbssCOMRAM:
   276                           	opt stack 0
   277  000031                     ftoa@buf:
   278                           	opt stack 0
   279  000031                     	ds	17
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           postdec1	equ	0xFE5
   287                           fsr1l	equ	0xFE1
   288                           
   289                           	psect	dataCOMRAM
   290  000042                     __pdataCOMRAM:
   291                           	opt stack 0
   292  000042                     EscreveInteiroLCD@F4004:
   293                           	opt stack 0
   294  000042                     	ds	7
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	bssBANK0
   305  0000A4                     __pbssBANK0:
   306                           	opt stack 0
   307  0000A4                     _contadorB:
   308                           	opt stack 0
   309  0000A4                     	ds	1
   310  0000A5                     _contador:
   311                           	opt stack 0
   312  0000A5                     	ds	1
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           postdec1	equ	0xFE5
   320                           fsr1l	equ	0xFE1
   321                           
   322                           	psect	cstackBANK0
   323  000060                     __pcstackBANK0:
   324                           	opt stack 0
   325  000060                     main@Texto_3:
   326                           	opt stack 0
   327                           
   328                           ; 17 bytes @ 0x0
   329  000060                     	ds	17
   330  000071                     main@Texto_0:
   331                           	opt stack 0
   332                           
   333                           ; 17 bytes @ 0x11
   334  000071                     	ds	17
   335  000082                     main@Texto_1:
   336                           	opt stack 0
   337                           
   338                           ; 17 bytes @ 0x22
   339  000082                     	ds	17
   340  000093                     main@Texto_2:
   341                           	opt stack 0
   342                           
   343                           ; 17 bytes @ 0x33
   344  000093                     	ds	17
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	cstackCOMRAM
   355  000001                     __pcstackCOMRAM:
   356                           	opt stack 0
   357  000001                     ??_InterrupcoesAlta:
   358                           
   359                           ; 1 bytes @ 0x0
   360  000001                     	ds	15
   361  000010                     ?___lwdiv:
   362                           	opt stack 0
   363  000010                     ?___lwmod:
   364                           	opt stack 0
   365  000010                     Delay@Cnt1:
   366                           	opt stack 0
   367  000010                     delay_ms@tempodeatraso:
   368                           	opt stack 0
   369  000010                     ___lwdiv@dividend:
   370                           	opt stack 0
   371  000010                     ___lwmod@dividend:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0xF
   375  000010                     	ds	1
   376  000011                     Delay@Cnt2:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x10
   380  000011                     	ds	1
   381  000012                     ??_delay_ms:
   382  000012                     EscreveComandoLCD@cmd:
   383                           	opt stack 0
   384  000012                     EnderecoCursor@endereco:
   385                           	opt stack 0
   386  000012                     EscreveCaractereLCD@data:
   387                           	opt stack 0
   388  000012                     ___lwdiv@divisor:
   389                           	opt stack 0
   390  000012                     ___lwmod@divisor:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x11
   394  000012                     	ds	1
   395  000013                     ??_ConfiguraLCD:
   396  000013                     PosicaoCursorLCD@coluna:
   397                           	opt stack 0
   398  000013                     EscreveFraseRamLCD@buffer:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x12
   402  000013                     	ds	1
   403  000014                     PosicaoCursorLCD@linha:
   404                           	opt stack 0
   405  000014                     ___lwmod@counter:
   406                           	opt stack 0
   407  000014                     ___lwdiv@quotient:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x13
   411  000014                     	ds	1
   412  000015                     PosicaoCursorLCD@EnderecoLCD:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x14
   416  000015                     	ds	1
   417  000016                     ___lwdiv@counter:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x15
   421  000016                     	ds	1
   422  000017                     utoa@buf:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x16
   426  000017                     	ds	2
   427  000019                     utoa@val:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x18
   431  000019                     	ds	2
   432  00001B                     utoa@base:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x1A
   436  00001B                     	ds	2
   437  00001D                     utoa@v:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x1C
   441  00001D                     	ds	2
   442  00001F                     utoa@c:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x1E
   446  00001F                     	ds	1
   447  000020                     itoa@buf:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x1F
   451  000020                     	ds	2
   452  000022                     itoa@val:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x21
   456  000022                     	ds	2
   457  000024                     itoa@base:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x23
   461  000024                     	ds	2
   462  000026                     itoa@cp:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x25
   466  000026                     	ds	2
   467  000028                     EscreveInteiroLCD@valor:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x27
   471  000028                     	ds	2
   472  00002A                     EscreveInteiroLCD@texto:
   473                           	opt stack 0
   474                           
   475                           ; 7 bytes @ 0x29
   476  00002A                     	ds	7
   477  000031                     tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           ; 1 bytes @ 0x30
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 47 in file "intext.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;  Texto_2        17   51[BANK0 ] const unsigned char [17]
   497 ;;  Texto_1        17   34[BANK0 ] const unsigned char [17]
   498 ;;  Texto_0        17   17[BANK0 ] const unsigned char [17]
   499 ;;  Texto_3        17    0[BANK0 ] const unsigned char [17]
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   509 ;;      Params:         0       0       0       0       0       0       0       0       0
   510 ;;      Locals:         0      68       0       0       0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0       0       0
   512 ;;      Totals:         0      68       0       0       0       0       0       0       0
   513 ;;Total ram usage:       68 bytes
   514 ;; Hardware stack levels required when called:    5
   515 ;; This function calls:
   516 ;;		_ConfiguraLCD
   517 ;;		_EscreveComandoLCD
   518 ;;		_EscreveFraseRamLCD
   519 ;;		_EscreveInteiroLCD
   520 ;;		_PosicaoCursorLCD
   521 ;;		_delay_ms
   522 ;; This function is called by:
   523 ;;		Startup code after reset
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text0
   528  00087A                     __ptext0:
   529                           	opt stack 0
   530  00087A                     _main:
   531                           	opt stack 26
   532                           
   533                           ;intext.c: 49: const unsigned char Texto_0[]="FATEC STO. ANDRE";
   534                           
   535                           ;incstack = 0
   536  00087A  0E5C               	movlw	low main@F3939
   537  00087C  6EF6               	movwf	tblptrl,c
   538  00087E                     	if	1	;There is more than 1 active tblptr byte
   539  00087E  0E08               	movlw	high main@F3939
   540  000880  6EF7               	movwf	tblptrh,c
   541  000882                     	endif
   542  000882                     	if	0	;There are less than 3 active tblptr bytes
   543  000882                     	endif
   544  000882  EE20  F071         	lfsr	2,main@Texto_0
   545  000886  0E10               	movlw	16
   546  000888                     u1070:
   547  000888  0009               	tblrd		*+
   548  00088A  CFF5 FFDE          	movff	tablat,postinc2
   549  00088E  06E8               	decf	wreg,f,c
   550  000890  E2FB               	bc	u1070
   551                           
   552                           ;intext.c: 50: const unsigned char Texto_1[]="  INTERRUPCOES  ";
   553  000892  0E4B               	movlw	low main@F3941
   554  000894  6EF6               	movwf	tblptrl,c
   555  000896                     	if	1	;There is more than 1 active tblptr byte
   556  000896  0E08               	movlw	high main@F3941
   557  000898  6EF7               	movwf	tblptrh,c
   558  00089A                     	endif
   559  00089A                     	if	0	;There are less than 3 active tblptr bytes
   560  00089A                     	endif
   561  00089A  EE20  F082         	lfsr	2,main@Texto_1
   562  00089E  0E10               	movlw	16
   563  0008A0                     u1080:
   564  0008A0  0009               	tblrd		*+
   565  0008A2  CFF5 FFDE          	movff	tablat,postinc2
   566  0008A6  06E8               	decf	wreg,f,c
   567  0008A8  E2FB               	bc	u1080
   568                           
   569                           ;intext.c: 51: const unsigned char Texto_2[]="CONTADOR =      ";
   570  0008AA  0E3A               	movlw	low main@F3943
   571  0008AC  6EF6               	movwf	tblptrl,c
   572  0008AE                     	if	1	;There is more than 1 active tblptr byte
   573  0008AE  0E08               	movlw	high main@F3943
   574  0008B0  6EF7               	movwf	tblptrh,c
   575  0008B2                     	endif
   576  0008B2                     	if	0	;There are less than 3 active tblptr bytes
   577  0008B2                     	endif
   578  0008B2  EE20  F093         	lfsr	2,main@Texto_2
   579  0008B6  0E10               	movlw	16
   580  0008B8                     u1090:
   581  0008B8  0009               	tblrd		*+
   582  0008BA  CFF5 FFDE          	movff	tablat,postinc2
   583  0008BE  06E8               	decf	wreg,f,c
   584  0008C0  E2FB               	bc	u1090
   585                           
   586                           ;intext.c: 52: const unsigned char Texto_3[]="                ";
   587  0008C2  0E29               	movlw	low main@F3945
   588  0008C4  6EF6               	movwf	tblptrl,c
   589  0008C6                     	if	1	;There is more than 1 active tblptr byte
   590  0008C6  0E08               	movlw	high main@F3945
   591  0008C8  6EF7               	movwf	tblptrh,c
   592  0008CA                     	endif
   593  0008CA                     	if	0	;There are less than 3 active tblptr bytes
   594  0008CA                     	endif
   595  0008CA  EE20  F060         	lfsr	2,main@Texto_3
   596  0008CE  0E10               	movlw	16
   597  0008D0                     u1100:
   598  0008D0  0009               	tblrd		*+
   599  0008D2  CFF5 FFDE          	movff	tablat,postinc2
   600  0008D6  06E8               	decf	wreg,f,c
   601  0008D8  E2FB               	bc	u1100
   602                           
   603                           ;intext.c: 54: ADCON1 = 0X0F;
   604  0008DA  0E0F               	movlw	15
   605  0008DC  6EC1               	movwf	4033,c	;volatile
   606                           
   607                           ;intext.c: 55: TRISB = 0X03;
   608  0008DE  0E03               	movlw	3
   609  0008E0  6E93               	movwf	3987,c	;volatile
   610                           
   611                           ;intext.c: 56: PORTB = 0X0F;
   612  0008E2  0E0F               	movlw	15
   613  0008E4  6E81               	movwf	3969,c	;volatile
   614                           
   615                           ;intext.c: 61: INTCONbits.RBIE = 0;
   616  0008E6  96F2               	bcf	intcon,3,c	;volatile
   617                           
   618                           ;intext.c: 62: INTCONbits.INT0IE = 1;
   619  0008E8  88F2               	bsf	intcon,4,c	;volatile
   620                           
   621                           ;intext.c: 63: INTCON3bits.INT1IE = 1;
   622  0008EA  86F0               	bsf	intcon3,3,c	;volatile
   623                           
   624                           ;intext.c: 64: INTCONbits.GIE = 1;
   625  0008EC  8EF2               	bsf	intcon,7,c	;volatile
   626                           
   627                           ;intext.c: 68: ConfiguraLCD();
   628  0008EE  EC78  F005         	call	_ConfiguraLCD	;wreg free
   629                           
   630                           ;intext.c: 69: EscreveComandoLCD(0b00001100);
   631  0008F2  0E0C               	movlw	12
   632  0008F4  ECC7  F005         	call	_EscreveComandoLCD
   633                           
   634                           ;intext.c: 70: EscreveFraseRamLCD(Texto_0);
   635  0008F8  0E71               	movlw	low main@Texto_0
   636  0008FA  6E13               	movwf	EscreveFraseRamLCD@buffer,c
   637  0008FC  0E00               	movlw	high main@Texto_0
   638  0008FE  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
   639  000900  EC55  F007         	call	_EscreveFraseRamLCD	;wreg free
   640                           
   641                           ;intext.c: 71: PosicaoCursorLCD(2,1);
   642  000904  0E01               	movlw	1
   643  000906  6E13               	movwf	PosicaoCursorLCD@coluna,c
   644  000908  0E02               	movlw	2
   645  00090A  EC7B  F006         	call	_PosicaoCursorLCD
   646                           
   647                           ;intext.c: 72: EscreveFraseRamLCD(Texto_1);
   648  00090E  0E82               	movlw	low main@Texto_1
   649  000910  6E13               	movwf	EscreveFraseRamLCD@buffer,c
   650  000912  0E00               	movlw	high main@Texto_1
   651  000914  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
   652  000916  EC55  F007         	call	_EscreveFraseRamLCD	;wreg free
   653                           
   654                           ;intext.c: 74: delay_ms(3000);
   655  00091A  0E0B               	movlw	11
   656  00091C  6E11               	movwf	delay_ms@tempodeatraso+1,c
   657  00091E  0EB8               	movlw	184
   658  000920  6E10               	movwf	delay_ms@tempodeatraso,c
   659  000922  EC79  F007         	call	_delay_ms	;wreg free
   660                           
   661                           ;intext.c: 76: PosicaoCursorLCD(1,1);
   662  000926  0E01               	movlw	1
   663  000928  6E13               	movwf	PosicaoCursorLCD@coluna,c
   664  00092A  0E01               	movlw	1
   665  00092C  EC7B  F006         	call	_PosicaoCursorLCD
   666                           
   667                           ;intext.c: 77: EscreveFraseRamLCD(Texto_2);
   668  000930  0E93               	movlw	low main@Texto_2
   669  000932  6E13               	movwf	EscreveFraseRamLCD@buffer,c
   670  000934  0E00               	movlw	high main@Texto_2
   671  000936  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
   672  000938  EC55  F007         	call	_EscreveFraseRamLCD	;wreg free
   673                           
   674                           ;intext.c: 78: PosicaoCursorLCD(2,1);
   675  00093C  0E01               	movlw	1
   676  00093E  6E13               	movwf	PosicaoCursorLCD@coluna,c
   677  000940  0E02               	movlw	2
   678  000942  EC7B  F006         	call	_PosicaoCursorLCD
   679                           
   680                           ;intext.c: 79: EscreveFraseRamLCD(Texto_2);
   681  000946  0E93               	movlw	low main@Texto_2
   682  000948  6E13               	movwf	EscreveFraseRamLCD@buffer,c
   683  00094A  0E00               	movlw	high main@Texto_2
   684  00094C  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
   685  00094E  EC55  F007         	call	_EscreveFraseRamLCD	;wreg free
   686  000952                     l1733:
   687                           
   688                           ;intext.c: 83: delay_ms(5000);
   689  000952  0E13               	movlw	19
   690  000954  6E11               	movwf	delay_ms@tempodeatraso+1,c
   691  000956  0E88               	movlw	136
   692  000958  6E10               	movwf	delay_ms@tempodeatraso,c
   693  00095A  EC79  F007         	call	_delay_ms	;wreg free
   694                           
   695                           ;intext.c: 84: PosicaoCursorLCD(1, 12);
   696  00095E  0E0C               	movlw	12
   697  000960  6E13               	movwf	PosicaoCursorLCD@coluna,c
   698  000962  0E01               	movlw	1
   699  000964  EC7B  F006         	call	_PosicaoCursorLCD
   700                           
   701                           ;intext.c: 85: EscreveInteiroLCD(contador);
   702  000968  C0A5  F028         	movff	_contador,EscreveInteiroLCD@valor
   703  00096C  6A29               	clrf	EscreveInteiroLCD@valor+1,c
   704  00096E  EC37  F007         	call	_EscreveInteiroLCD	;wreg free
   705                           
   706                           ;intext.c: 86: PosicaoCursorLCD(2, 12);
   707  000972  0E0C               	movlw	12
   708  000974  6E13               	movwf	PosicaoCursorLCD@coluna,c
   709  000976  0E02               	movlw	2
   710  000978  EC7B  F006         	call	_PosicaoCursorLCD
   711                           
   712                           ;intext.c: 87: EscreveInteiroLCD(contadorB);
   713  00097C  C0A4  F028         	movff	_contadorB,EscreveInteiroLCD@valor
   714  000980  6A29               	clrf	EscreveInteiroLCD@valor+1,c
   715  000982  EC37  F007         	call	_EscreveInteiroLCD	;wreg free
   716  000986  D7E5               	goto	l1733
   717  000988                     __end_of_main:
   718                           	opt stack 0
   719                           tblptru	equ	0xFF8
   720                           tblptrh	equ	0xFF7
   721                           tblptrl	equ	0xFF6
   722                           tablat	equ	0xFF5
   723                           intcon	equ	0xFF2
   724                           intcon3	equ	0xFF0
   725                           postinc0	equ	0xFEE
   726                           wreg	equ	0xFE8
   727                           postdec1	equ	0xFE5
   728                           fsr1l	equ	0xFE1
   729                           postinc2	equ	0xFDE
   730                           
   731 ;; *************** function _delay_ms *****************
   732 ;; Defined at:
   733 ;;		line 95 in file "intext.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  tempodeatras    2   15[COMRAM] unsigned int 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   747 ;;      Params:         2       0       0       0       0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0       0       0       0       0
   749 ;;      Temps:          1       0       0       0       0       0       0       0       0
   750 ;;      Totals:         3       0       0       0       0       0       0       0       0
   751 ;;Total ram usage:        3 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text1
   762  000EF2                     __ptext1:
   763                           	opt stack 0
   764  000EF2                     _delay_ms:
   765                           	opt stack 29
   766                           
   767                           ;intext.c: 97: while(--tempodeatraso){
   768                           
   769                           ;incstack = 0
   770  000EF2  D008               	goto	l1633
   771  000EF4                     l1631:
   772                           
   773                           ;intext.c: 98: _delay((unsigned long)((1)*(48000000/4000.0)));
   774  000EF4  0E10               	movlw	16
   775  000EF6  6E12               	movwf	??_delay_ms& (0+255),c
   776  000EF8  0E94               	movlw	148
   777  000EFA                     u1197:
   778  000EFA  2EE8               	decfsz	wreg,f,c
   779  000EFC  D7FE               	bra	u1197
   780  000EFE  2E12               	decfsz	??_delay_ms& (0+255),f,c
   781  000F00  D7FC               	bra	u1197
   782  000F02  D000               	nop2	
   783  000F04                     l1633:
   784  000F04  0610               	decf	delay_ms@tempodeatraso,f,c
   785  000F06  A0D8               	btfss	status,0,c
   786  000F08  0611               	decf	delay_ms@tempodeatraso+1,f,c
   787  000F0A  5010               	movf	delay_ms@tempodeatraso,w,c
   788  000F0C  1011               	iorwf	delay_ms@tempodeatraso+1,w,c
   789  000F0E  B4D8               	btfsc	status,2,c
   790  000F10  0012               	return	
   791  000F12  D7F0               	goto	l1631
   792  000F14                     __end_of_delay_ms:
   793                           	opt stack 0
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           tblptrl	equ	0xFF6
   797                           tablat	equ	0xFF5
   798                           intcon	equ	0xFF2
   799                           intcon3	equ	0xFF0
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           postdec1	equ	0xFE5
   803                           fsr1l	equ	0xFE1
   804                           postinc2	equ	0xFDE
   805                           status	equ	0xFD8
   806                           
   807 ;; *************** function _PosicaoCursorLCD *****************
   808 ;; Defined at:
   809 ;;		line 280 in file "displayLCD.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  linha           1    wreg     unsigned char 
   812 ;;  coluna          1   18[COMRAM] unsigned char 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  linha           1   19[COMRAM] unsigned char 
   815 ;;  EnderecoLCD     1   20[COMRAM] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   825 ;;      Params:         1       0       0       0       0       0       0       0       0
   826 ;;      Locals:         2       0       0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0
   828 ;;      Totals:         3       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:        3 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    3
   832 ;; This function calls:
   833 ;;		_EnderecoCursor
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text2
   840  000CF6                     __ptext2:
   841                           	opt stack 0
   842  000CF6                     _PosicaoCursorLCD:
   843                           	opt stack 27
   844                           
   845                           ;incstack = 0
   846                           ;PosicaoCursorLCD@linha stored from wreg
   847  000CF6  6E14               	movwf	PosicaoCursorLCD@linha,c
   848                           
   849                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
   850  000CF8  0E00               	movlw	0
   851  000CFA  6E15               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   852                           
   853                           ;displayLCD.c: 292: if (coluna >= 0)
   854  000CFC  0613               	decf	PosicaoCursorLCD@coluna,f,c
   855                           
   856                           ;displayLCD.c: 293: {
   857                           ;displayLCD.c: 296: switch (linha)
   858  000CFE  D01E               	goto	l1619
   859  000D00                     l70:
   860                           
   861                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
   862  000D00  C013  F015         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
   863                           
   864                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
   865  000D04  5015               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   866  000D06  EC46  F006         	call	_EnderecoCursor
   867                           
   868                           ;displayLCD.c: 301: break;
   869  000D0A  0012               	return	
   870  000D0C                     l1603:
   871                           
   872                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
   873  000D0C  5013               	movf	PosicaoCursorLCD@coluna,w,c
   874  000D0E  0F40               	addlw	64
   875  000D10  6E15               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   876                           
   877                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
   878  000D12  5015               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   879  000D14  EC46  F006         	call	_EnderecoCursor
   880                           
   881                           ;displayLCD.c: 306: break;
   882  000D18  0012               	return	
   883  000D1A                     l1607:
   884                           
   885                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
   886  000D1A  5013               	movf	PosicaoCursorLCD@coluna,w,c
   887  000D1C  0F14               	addlw	20
   888  000D1E  6E15               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   889                           
   890                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
   891  000D20  5015               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   892  000D22  EC46  F006         	call	_EnderecoCursor
   893                           
   894                           ;displayLCD.c: 311: break;
   895  000D26  0012               	return	
   896  000D28                     l1611:
   897                           
   898                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
   899  000D28  5013               	movf	PosicaoCursorLCD@coluna,w,c
   900  000D2A  0F54               	addlw	84
   901  000D2C  6E15               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   902                           
   903                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
   904  000D2E  5015               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   905  000D30  EC46  F006         	call	_EnderecoCursor
   906                           
   907                           ;displayLCD.c: 316: break;
   908  000D34  0012               	return	
   909  000D36                     l1615:
   910                           
   911                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
   912  000D36  0E00               	movlw	0
   913  000D38  6E15               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   914                           
   915                           ;displayLCD.c: 321: }
   916                           
   917                           ;displayLCD.c: 320: break;
   918  000D3A  0012               	return	
   919  000D3C                     l1619:
   920  000D3C  5014               	movf	PosicaoCursorLCD@linha,w,c
   921                           
   922                           ; Switch size 1, requested type "space"
   923                           ; Number of cases is 4, Range of values is 1 to 4
   924                           ; switch strategies available:
   925                           ; Name         Instructions Cycles
   926                           ; simple_byte           13     7 (average)
   927                           ;	Chosen strategy is simple_byte
   928  000D3E  0A01               	xorlw	1	; case 1
   929  000D40  B4D8               	btfsc	status,2,c
   930  000D42  D7DE               	goto	l70
   931  000D44  0A03               	xorlw	3	; case 2
   932  000D46  B4D8               	btfsc	status,2,c
   933  000D48  D7E1               	goto	l1603
   934  000D4A  0A01               	xorlw	1	; case 3
   935  000D4C  B4D8               	btfsc	status,2,c
   936  000D4E  D7E5               	goto	l1607
   937  000D50  0A07               	xorlw	7	; case 4
   938  000D52  B4D8               	btfsc	status,2,c
   939  000D54  D7E9               	goto	l1611
   940  000D56  D7EF               	goto	l1615
   941  000D58                     __end_of_PosicaoCursorLCD:
   942                           	opt stack 0
   943                           tblptru	equ	0xFF8
   944                           tblptrh	equ	0xFF7
   945                           tblptrl	equ	0xFF6
   946                           tablat	equ	0xFF5
   947                           intcon	equ	0xFF2
   948                           intcon3	equ	0xFF0
   949                           postinc0	equ	0xFEE
   950                           wreg	equ	0xFE8
   951                           postdec1	equ	0xFE5
   952                           fsr1l	equ	0xFE1
   953                           postinc2	equ	0xFDE
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function _EnderecoCursor *****************
   957 ;; Defined at:
   958 ;;		line 229 in file "displayLCD.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  endereco        1    wreg     unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  endereco        1   17[COMRAM] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   972 ;;      Params:         0       0       0       0       0       0       0       0       0
   973 ;;      Locals:         1       0       0       0       0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0
   975 ;;      Totals:         1       0       0       0       0       0       0       0       0
   976 ;;Total ram usage:        1 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    2
   979 ;; This function calls:
   980 ;;		_Delay
   981 ;; This function is called by:
   982 ;;		_PosicaoCursorLCD
   983 ;;		_CriaCaractereLCD
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text3
   988  000C8C                     __ptext3:
   989                           	opt stack 0
   990  000C8C                     _EnderecoCursor:
   991                           	opt stack 27
   992                           
   993                           ;incstack = 0
   994                           ;EnderecoCursor@endereco stored from wreg
   995  000C8C  6E12               	movwf	EnderecoCursor@endereco,c
   996                           
   997                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
   998  000C8E  9483               	bcf	3971,2,c	;volatile
   999                           
  1000                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
  1001  000C90  9283               	bcf	3971,1,c	;volatile
  1002                           
  1003                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
  1004  000C92  9083               	bcf	3971,0,c	;volatile
  1005                           
  1006                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
  1007  000C94  8E83               	bsf	3971,7,c	;volatile
  1008                           
  1009                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1010  000C96  A812               	btfss	EnderecoCursor@endereco,4,c
  1011  000C98  D002               	goto	l51
  1012  000C9A  8883               	bsf	3971,4,c	;volatile
  1013  000C9C  D001               	goto	l1499
  1014  000C9E                     l51:
  1015                           
  1016                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
  1017  000C9E  9883               	bcf	3971,4,c	;volatile
  1018  000CA0                     l1499:
  1019                           
  1020                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1021  000CA0  AA12               	btfss	EnderecoCursor@endereco,5,c
  1022  000CA2  D002               	goto	l53
  1023  000CA4  8A83               	bsf	3971,5,c	;volatile
  1024  000CA6  D001               	goto	l1503
  1025  000CA8                     l53:
  1026                           
  1027                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
  1028  000CA8  9A83               	bcf	3971,5,c	;volatile
  1029  000CAA                     l1503:
  1030                           
  1031                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1032  000CAA  AC12               	btfss	EnderecoCursor@endereco,6,c
  1033  000CAC  D002               	goto	l55
  1034  000CAE  8C83               	bsf	3971,6,c	;volatile
  1035  000CB0  D001               	goto	l56
  1036  000CB2                     l55:
  1037                           
  1038                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
  1039  000CB2  9C83               	bcf	3971,6,c	;volatile
  1040  000CB4                     l56:
  1041                           
  1042                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
  1043  000CB4  8083               	bsf	3971,0,c	;volatile
  1044                           
  1045                           ;displayLCD.c: 247: Delay();
  1046  000CB6  EC67  F007         	call	_Delay	;wreg free
  1047                           
  1048                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
  1049  000CBA  9083               	bcf	3971,0,c	;volatile
  1050                           
  1051                           ;displayLCD.c: 249: Delay();
  1052  000CBC  EC67  F007         	call	_Delay	;wreg free
  1053                           
  1054                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1055  000CC0  A012               	btfss	EnderecoCursor@endereco,0,c
  1056  000CC2  D002               	goto	l57
  1057  000CC4  8883               	bsf	3971,4,c	;volatile
  1058  000CC6  D001               	goto	l58
  1059  000CC8                     l57:
  1060                           
  1061                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
  1062  000CC8  9883               	bcf	3971,4,c	;volatile
  1063  000CCA                     l58:
  1064                           
  1065                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1066  000CCA  A212               	btfss	EnderecoCursor@endereco,1,c
  1067  000CCC  D002               	goto	l59
  1068  000CCE  8A83               	bsf	3971,5,c	;volatile
  1069  000CD0  D001               	goto	l60
  1070  000CD2                     l59:
  1071                           
  1072                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
  1073  000CD2  9A83               	bcf	3971,5,c	;volatile
  1074  000CD4                     l60:
  1075                           
  1076                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1077  000CD4  A412               	btfss	EnderecoCursor@endereco,2,c
  1078  000CD6  D002               	goto	l61
  1079  000CD8  8C83               	bsf	3971,6,c	;volatile
  1080  000CDA  D001               	goto	l62
  1081  000CDC                     l61:
  1082                           
  1083                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
  1084  000CDC  9C83               	bcf	3971,6,c	;volatile
  1085  000CDE                     l62:
  1086                           
  1087                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1088  000CDE  A612               	btfss	EnderecoCursor@endereco,3,c
  1089  000CE0  D002               	goto	l63
  1090  000CE2  8E83               	bsf	3971,7,c	;volatile
  1091  000CE4  D001               	goto	l64
  1092  000CE6                     l63:
  1093                           
  1094                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
  1095  000CE6  9E83               	bcf	3971,7,c	;volatile
  1096  000CE8                     l64:
  1097                           
  1098                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
  1099  000CE8  8083               	bsf	3971,0,c	;volatile
  1100                           
  1101                           ;displayLCD.c: 263: Delay();
  1102  000CEA  EC67  F007         	call	_Delay	;wreg free
  1103                           
  1104                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
  1105  000CEE  9083               	bcf	3971,0,c	;volatile
  1106                           
  1107                           ;displayLCD.c: 265: Delay();
  1108  000CF0  EC67  F007         	call	_Delay	;wreg free
  1109  000CF4  0012               	return		;funcret
  1110  000CF6                     __end_of_EnderecoCursor:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           intcon	equ	0xFF2
  1117                           intcon3	equ	0xFF0
  1118                           postinc0	equ	0xFEE
  1119                           wreg	equ	0xFE8
  1120                           postdec1	equ	0xFE5
  1121                           fsr1l	equ	0xFE1
  1122                           postinc2	equ	0xFDE
  1123                           status	equ	0xFD8
  1124                           
  1125 ;; *************** function _EscreveInteiroLCD *****************
  1126 ;; Defined at:
  1127 ;;		line 391 in file "displayLCD.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  valor           2   39[COMRAM] int 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  texto           7   41[COMRAM] unsigned char [7]
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1141 ;;      Params:         2       0       0       0       0       0       0       0       0
  1142 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1144 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1145 ;;Total ram usage:        9 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    4
  1148 ;; This function calls:
  1149 ;;		_EscreveFraseRamLCD
  1150 ;;		_itoa
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text4
  1157  000E6E                     __ptext4:
  1158                           	opt stack 0
  1159  000E6E                     _EscreveInteiroLCD:
  1160                           	opt stack 26
  1161                           
  1162                           ;displayLCD.c: 393: char texto[7] = "000000";
  1163                           
  1164                           ;incstack = 0
  1165  000E6E  EE20  F042         	lfsr	2,EscreveInteiroLCD@F4004
  1166  000E72  EE10  F02A         	lfsr	1,EscreveInteiroLCD@texto
  1167  000E76  0E06               	movlw	6
  1168  000E78                     u1011:
  1169  000E78  CFDB FFE3          	movff	plusw2,plusw1
  1170  000E7C  06E8               	decf	wreg,f,c
  1171  000E7E  E2FC               	bc	u1011
  1172                           
  1173                           ;displayLCD.c: 394: itoa(texto,valor, 10);
  1174  000E80  0E2A               	movlw	low EscreveInteiroLCD@texto
  1175  000E82  6E20               	movwf	itoa@buf,c
  1176  000E84  0E00               	movlw	high EscreveInteiroLCD@texto
  1177  000E86  6E21               	movwf	itoa@buf+1,c
  1178  000E88  C028  F022         	movff	EscreveInteiroLCD@valor,itoa@val
  1179  000E8C  C029  F023         	movff	EscreveInteiroLCD@valor+1,itoa@val+1
  1180  000E90  0E00               	movlw	0
  1181  000E92  6E25               	movwf	itoa@base+1,c
  1182  000E94  0E0A               	movlw	10
  1183  000E96  6E24               	movwf	itoa@base,c
  1184  000E98  ECD5  F006         	call	_itoa	;wreg free
  1185                           
  1186                           ;displayLCD.c: 395: EscreveFraseRamLCD(texto);
  1187  000E9C  0E2A               	movlw	low EscreveInteiroLCD@texto
  1188  000E9E  6E13               	movwf	EscreveFraseRamLCD@buffer,c
  1189  000EA0  0E00               	movlw	high EscreveInteiroLCD@texto
  1190  000EA2  6E14               	movwf	EscreveFraseRamLCD@buffer+1,c
  1191  000EA4  EC55  F007         	call	_EscreveFraseRamLCD	;wreg free
  1192  000EA8  0012               	return		;funcret
  1193  000EAA                     __end_of_EscreveInteiroLCD:
  1194                           	opt stack 0
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           intcon	equ	0xFF2
  1200                           intcon3	equ	0xFF0
  1201                           postinc0	equ	0xFEE
  1202                           wreg	equ	0xFE8
  1203                           postdec1	equ	0xFE5
  1204                           plusw1	equ	0xFE3
  1205                           fsr1l	equ	0xFE1
  1206                           postinc2	equ	0xFDE
  1207                           plusw2	equ	0xFDB
  1208                           status	equ	0xFD8
  1209                           
  1210 ;; *************** function _itoa *****************
  1211 ;; Defined at:
  1212 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  buf             2   31[COMRAM] PTR unsigned char 
  1215 ;;		 -> EscreveInteiroLCD@texto(7), 
  1216 ;;  val             2   33[COMRAM] int 
  1217 ;;  base            2   35[COMRAM] int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  cp              2   37[COMRAM] PTR unsigned char 
  1220 ;;		 -> EscreveInteiroLCD@texto(7), 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  2   31[COMRAM] PTR unsigned char 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1230 ;;      Params:         6       0       0       0       0       0       0       0       0
  1231 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1233 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1234 ;;Total ram usage:        8 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    3
  1237 ;; This function calls:
  1238 ;;		_utoa
  1239 ;; This function is called by:
  1240 ;;		_EscreveInteiroLCD
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text5
  1245  000DAA                     __ptext5:
  1246                           	opt stack 0
  1247  000DAA                     _itoa:
  1248                           	opt stack 26
  1249                           
  1250                           ;incstack = 0
  1251  000DAA  C020  F026         	movff	itoa@buf,itoa@cp
  1252  000DAE  C021  F027         	movff	itoa@buf+1,itoa@cp+1
  1253  000DB2  AE23               	btfss	itoa@val+1,7,c
  1254  000DB4  D00C               	goto	l1533
  1255  000DB6  C020  FFD9         	movff	itoa@buf,fsr2l
  1256  000DBA  C021  FFDA         	movff	itoa@buf+1,fsr2h
  1257  000DBE  0E2D               	movlw	45
  1258  000DC0  6EDF               	movwf	indf2,c
  1259  000DC2  4A20               	infsnz	itoa@buf,f,c
  1260  000DC4  2A21               	incf	itoa@buf+1,f,c
  1261  000DC6  6C22               	negf	itoa@val,c
  1262  000DC8  1E23               	comf	itoa@val+1,f,c
  1263  000DCA  B0D8               	btfsc	status,0,c
  1264  000DCC  2A23               	incf	itoa@val+1,f,c
  1265  000DCE                     l1533:
  1266  000DCE  C020  F017         	movff	itoa@buf,utoa@buf
  1267  000DD2  C021  F018         	movff	itoa@buf+1,utoa@buf+1
  1268  000DD6  C022  F019         	movff	itoa@val,utoa@val
  1269  000DDA  C023  F01A         	movff	itoa@val+1,utoa@val+1
  1270  000DDE  C024  F01B         	movff	itoa@base,utoa@base
  1271  000DE2  C025  F01C         	movff	itoa@base+1,utoa@base+1
  1272  000DE6  EC26  F005         	call	_utoa	;wreg free
  1273  000DEA  0012               	return	
  1274  000DEC                     __end_of_itoa:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           tblptrh	equ	0xFF7
  1278                           tblptrl	equ	0xFF6
  1279                           tablat	equ	0xFF5
  1280                           intcon	equ	0xFF2
  1281                           intcon3	equ	0xFF0
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           postdec1	equ	0xFE5
  1285                           plusw1	equ	0xFE3
  1286                           fsr1l	equ	0xFE1
  1287                           indf2	equ	0xFDF
  1288                           postinc2	equ	0xFDE
  1289                           plusw2	equ	0xFDB
  1290                           fsr2h	equ	0xFDA
  1291                           fsr2l	equ	0xFD9
  1292                           status	equ	0xFD8
  1293                           
  1294 ;; *************** function _utoa *****************
  1295 ;; Defined at:
  1296 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1299 ;;		 -> EscreveInteiroLCD@texto(7), 
  1300 ;;  val             2   24[COMRAM] unsigned int 
  1301 ;;  base            2   26[COMRAM] int 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  v               2   28[COMRAM] unsigned int 
  1304 ;;  c               1   30[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  2   22[COMRAM] PTR unsigned char 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1314 ;;      Params:         6       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1317 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:        9 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    2
  1321 ;; This function calls:
  1322 ;;		___lwdiv
  1323 ;;		___lwmod
  1324 ;; This function is called by:
  1325 ;;		_itoa
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text6
  1330  000A4C                     __ptext6:
  1331                           	opt stack 0
  1332  000A4C                     _utoa:
  1333                           	opt stack 26
  1334                           
  1335                           ;incstack = 0
  1336  000A4C  C019  F01D         	movff	utoa@val,utoa@v
  1337  000A50  C01A  F01E         	movff	utoa@val+1,utoa@v+1
  1338  000A54                     l1421:
  1339  000A54  C01D  F010         	movff	utoa@v,___lwdiv@dividend
  1340  000A58  C01E  F011         	movff	utoa@v+1,___lwdiv@dividend+1
  1341  000A5C  C01B  F012         	movff	utoa@base,___lwdiv@divisor
  1342  000A60  C01C  F013         	movff	utoa@base+1,___lwdiv@divisor+1
  1343  000A64  ECAC  F006         	call	___lwdiv	;wreg free
  1344  000A68  C010  F01D         	movff	?___lwdiv,utoa@v
  1345  000A6C  C011  F01E         	movff	?___lwdiv+1,utoa@v+1
  1346  000A70  4A17               	infsnz	utoa@buf,f,c
  1347  000A72  2A18               	incf	utoa@buf+1,f,c
  1348  000A74  501D               	movf	utoa@v,w,c
  1349  000A76  101E               	iorwf	utoa@v+1,w,c
  1350  000A78  A4D8               	btfss	status,2,c
  1351  000A7A  D7EC               	goto	l1421
  1352  000A7C  C017  FFD9         	movff	utoa@buf,fsr2l
  1353  000A80  C018  FFDA         	movff	utoa@buf+1,fsr2h
  1354  000A84  0E00               	movlw	0
  1355  000A86  6EDF               	movwf	indf2,c
  1356  000A88  0617               	decf	utoa@buf,f,c
  1357  000A8A  A0D8               	btfss	status,0,c
  1358  000A8C  0618               	decf	utoa@buf+1,f,c
  1359  000A8E                     l1431:
  1360  000A8E  C019  F010         	movff	utoa@val,___lwmod@dividend
  1361  000A92  C01A  F011         	movff	utoa@val+1,___lwmod@dividend+1
  1362  000A96  C01B  F012         	movff	utoa@base,___lwmod@divisor
  1363  000A9A  C01C  F013         	movff	utoa@base+1,___lwmod@divisor+1
  1364  000A9E  ECF6  F006         	call	___lwmod	;wreg free
  1365  000AA2  5010               	movf	?___lwmod,w,c
  1366  000AA4  6E1F               	movwf	utoa@c,c
  1367  000AA6  C019  F010         	movff	utoa@val,___lwdiv@dividend
  1368  000AAA  C01A  F011         	movff	utoa@val+1,___lwdiv@dividend+1
  1369  000AAE  C01B  F012         	movff	utoa@base,___lwdiv@divisor
  1370  000AB2  C01C  F013         	movff	utoa@base+1,___lwdiv@divisor+1
  1371  000AB6  ECAC  F006         	call	___lwdiv	;wreg free
  1372  000ABA  C010  F019         	movff	?___lwdiv,utoa@val
  1373  000ABE  C011  F01A         	movff	?___lwdiv+1,utoa@val+1
  1374  000AC2  0E09               	movlw	9
  1375  000AC4  641F               	cpfsgt	utoa@c,c
  1376  000AC6  D002               	goto	l597
  1377  000AC8  0E07               	movlw	7
  1378  000ACA  261F               	addwf	utoa@c,f,c
  1379  000ACC                     l597:
  1380  000ACC  0E30               	movlw	48
  1381  000ACE  261F               	addwf	utoa@c,f,c
  1382  000AD0  C017  FFD9         	movff	utoa@buf,fsr2l
  1383  000AD4  C018  FFDA         	movff	utoa@buf+1,fsr2h
  1384  000AD8  C01F  FFDF         	movff	utoa@c,indf2
  1385  000ADC  0617               	decf	utoa@buf,f,c
  1386  000ADE  A0D8               	btfss	status,0,c
  1387  000AE0  0618               	decf	utoa@buf+1,f,c
  1388  000AE2  5019               	movf	utoa@val,w,c
  1389  000AE4  101A               	iorwf	utoa@val+1,w,c
  1390  000AE6  A4D8               	btfss	status,2,c
  1391  000AE8  D7D2               	goto	l1431
  1392                           
  1393                           ;	Return value of _utoa is never used
  1394  000AEA  4A17               	infsnz	utoa@buf,f,c
  1395  000AEC  2A18               	incf	utoa@buf+1,f,c
  1396  000AEE  0012               	return	
  1397  000AF0                     __end_of_utoa:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           intcon	equ	0xFF2
  1404                           intcon3	equ	0xFF0
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           postdec1	equ	0xFE5
  1408                           plusw1	equ	0xFE3
  1409                           fsr1l	equ	0xFE1
  1410                           indf2	equ	0xFDF
  1411                           postinc2	equ	0xFDE
  1412                           plusw2	equ	0xFDB
  1413                           fsr2h	equ	0xFDA
  1414                           fsr2l	equ	0xFD9
  1415                           status	equ	0xFD8
  1416                           
  1417 ;; *************** function ___lwmod *****************
  1418 ;; Defined at:
  1419 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  dividend        2   15[COMRAM] unsigned int 
  1422 ;;  divisor         2   17[COMRAM] unsigned int 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  counter         1   19[COMRAM] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  2   15[COMRAM] unsigned int 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1434 ;;      Params:         4       0       0       0       0       0       0       0       0
  1435 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1437 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1438 ;;Total ram usage:        5 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_utoa
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text7
  1449  000DEC                     __ptext7:
  1450                           	opt stack 0
  1451  000DEC                     ___lwmod:
  1452                           	opt stack 26
  1453                           
  1454                           ;incstack = 0
  1455  000DEC  5012               	movf	___lwmod@divisor,w,c
  1456  000DEE  1013               	iorwf	___lwmod@divisor+1,w,c
  1457  000DF0  B4D8               	btfsc	status,2,c
  1458  000DF2  D018               	goto	l686
  1459  000DF4  0E01               	movlw	1
  1460  000DF6  6E14               	movwf	___lwmod@counter,c
  1461  000DF8  D004               	goto	l1373
  1462  000DFA                     l1371:
  1463  000DFA  90D8               	bcf	status,0,c
  1464  000DFC  3612               	rlcf	___lwmod@divisor,f,c
  1465  000DFE  3613               	rlcf	___lwmod@divisor+1,f,c
  1466  000E00  2A14               	incf	___lwmod@counter,f,c
  1467  000E02                     l1373:
  1468  000E02  AE13               	btfss	___lwmod@divisor+1,7,c
  1469  000E04  D7FA               	goto	l1371
  1470  000E06                     l1375:
  1471  000E06  5012               	movf	___lwmod@divisor,w,c
  1472  000E08  5C10               	subwf	___lwmod@dividend,w,c
  1473  000E0A  5013               	movf	___lwmod@divisor+1,w,c
  1474  000E0C  5811               	subwfb	___lwmod@dividend+1,w,c
  1475  000E0E  A0D8               	btfss	status,0,c
  1476  000E10  D004               	goto	l1379
  1477  000E12  5012               	movf	___lwmod@divisor,w,c
  1478  000E14  5E10               	subwf	___lwmod@dividend,f,c
  1479  000E16  5013               	movf	___lwmod@divisor+1,w,c
  1480  000E18  5A11               	subwfb	___lwmod@dividend+1,f,c
  1481  000E1A                     l1379:
  1482  000E1A  90D8               	bcf	status,0,c
  1483  000E1C  3213               	rrcf	___lwmod@divisor+1,f,c
  1484  000E1E  3212               	rrcf	___lwmod@divisor,f,c
  1485  000E20  2E14               	decfsz	___lwmod@counter,f,c
  1486  000E22  D7F1               	goto	l1375
  1487  000E24                     l686:
  1488  000E24  C010  F010         	movff	___lwmod@dividend,?___lwmod
  1489  000E28  C011  F011         	movff	___lwmod@dividend+1,?___lwmod+1
  1490  000E2C  0012               	return		;funcret
  1491  000E2E                     __end_of___lwmod:
  1492                           	opt stack 0
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           intcon	equ	0xFF2
  1498                           intcon3	equ	0xFF0
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           postdec1	equ	0xFE5
  1502                           plusw1	equ	0xFE3
  1503                           fsr1l	equ	0xFE1
  1504                           indf2	equ	0xFDF
  1505                           postinc2	equ	0xFDE
  1506                           plusw2	equ	0xFDB
  1507                           fsr2h	equ	0xFDA
  1508                           fsr2l	equ	0xFD9
  1509                           status	equ	0xFD8
  1510                           
  1511 ;; *************** function ___lwdiv *****************
  1512 ;; Defined at:
  1513 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  dividend        2   15[COMRAM] unsigned int 
  1516 ;;  divisor         2   17[COMRAM] unsigned int 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  quotient        2   19[COMRAM] unsigned int 
  1519 ;;  counter         1   21[COMRAM] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2   15[COMRAM] unsigned int 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1529 ;;      Params:         4       0       0       0       0       0       0       0       0
  1530 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1532 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1533 ;;Total ram usage:        7 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_utoa
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text8
  1544  000D58                     __ptext8:
  1545                           	opt stack 0
  1546  000D58                     ___lwdiv:
  1547                           	opt stack 26
  1548                           
  1549                           ;incstack = 0
  1550  000D58  0E00               	movlw	0
  1551  000D5A  6E15               	movwf	___lwdiv@quotient+1,c
  1552  000D5C  0E00               	movlw	0
  1553  000D5E  6E14               	movwf	___lwdiv@quotient,c
  1554  000D60  5012               	movf	___lwdiv@divisor,w,c
  1555  000D62  1013               	iorwf	___lwdiv@divisor+1,w,c
  1556  000D64  B4D8               	btfsc	status,2,c
  1557  000D66  D01C               	goto	l676
  1558  000D68  0E01               	movlw	1
  1559  000D6A  6E16               	movwf	___lwdiv@counter,c
  1560  000D6C  D004               	goto	l1353
  1561  000D6E                     l1351:
  1562  000D6E  90D8               	bcf	status,0,c
  1563  000D70  3612               	rlcf	___lwdiv@divisor,f,c
  1564  000D72  3613               	rlcf	___lwdiv@divisor+1,f,c
  1565  000D74  2A16               	incf	___lwdiv@counter,f,c
  1566  000D76                     l1353:
  1567  000D76  AE13               	btfss	___lwdiv@divisor+1,7,c
  1568  000D78  D7FA               	goto	l1351
  1569  000D7A                     l1355:
  1570  000D7A  90D8               	bcf	status,0,c
  1571  000D7C  3614               	rlcf	___lwdiv@quotient,f,c
  1572  000D7E  3615               	rlcf	___lwdiv@quotient+1,f,c
  1573  000D80  5012               	movf	___lwdiv@divisor,w,c
  1574  000D82  5C10               	subwf	___lwdiv@dividend,w,c
  1575  000D84  5013               	movf	___lwdiv@divisor+1,w,c
  1576  000D86  5811               	subwfb	___lwdiv@dividend+1,w,c
  1577  000D88  A0D8               	btfss	status,0,c
  1578  000D8A  D005               	goto	l1363
  1579  000D8C  5012               	movf	___lwdiv@divisor,w,c
  1580  000D8E  5E10               	subwf	___lwdiv@dividend,f,c
  1581  000D90  5013               	movf	___lwdiv@divisor+1,w,c
  1582  000D92  5A11               	subwfb	___lwdiv@dividend+1,f,c
  1583  000D94  8014               	bsf	___lwdiv@quotient,0,c
  1584  000D96                     l1363:
  1585  000D96  90D8               	bcf	status,0,c
  1586  000D98  3213               	rrcf	___lwdiv@divisor+1,f,c
  1587  000D9A  3212               	rrcf	___lwdiv@divisor,f,c
  1588  000D9C  2E16               	decfsz	___lwdiv@counter,f,c
  1589  000D9E  D7ED               	goto	l1355
  1590  000DA0                     l676:
  1591  000DA0  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
  1592  000DA4  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1593  000DA8  0012               	return		;funcret
  1594  000DAA                     __end_of___lwdiv:
  1595                           	opt stack 0
  1596                           tblptru	equ	0xFF8
  1597                           tblptrh	equ	0xFF7
  1598                           tblptrl	equ	0xFF6
  1599                           tablat	equ	0xFF5
  1600                           intcon	equ	0xFF2
  1601                           intcon3	equ	0xFF0
  1602                           postinc0	equ	0xFEE
  1603                           wreg	equ	0xFE8
  1604                           postdec1	equ	0xFE5
  1605                           plusw1	equ	0xFE3
  1606                           fsr1l	equ	0xFE1
  1607                           indf2	equ	0xFDF
  1608                           postinc2	equ	0xFDE
  1609                           plusw2	equ	0xFDB
  1610                           fsr2h	equ	0xFDA
  1611                           fsr2l	equ	0xFD9
  1612                           status	equ	0xFD8
  1613                           
  1614 ;; *************** function _EscreveFraseRamLCD *****************
  1615 ;; Defined at:
  1616 ;;		line 438 in file "displayLCD.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  buffer          2   18[COMRAM] PTR unsigned char 
  1619 ;;		 -> main@Texto_2(17), main@Texto_1(17), main@Texto_0(17), EscreveInteiroLCD@texto(7), 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1631 ;;      Params:         2       0       0       0       0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1634 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1635 ;;Total ram usage:        2 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    3
  1638 ;; This function calls:
  1639 ;;		_EscreveCaractereLCD
  1640 ;; This function is called by:
  1641 ;;		_EscreveInteiroLCD
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text9
  1647  000EAA                     __ptext9:
  1648                           	opt stack 0
  1649  000EAA                     _EscreveFraseRamLCD:
  1650                           	opt stack 26
  1651                           
  1652                           ;displayLCD.c: 440: while(*buffer)
  1653                           
  1654                           ;incstack = 0
  1655  000EAA  D009               	goto	l1543
  1656  000EAC                     l1539:
  1657                           
  1658                           ;displayLCD.c: 441: {
  1659                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
  1660  000EAC  C013  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1661  000EB0  C014  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1662  000EB4  50DF               	movf	indf2,w,c
  1663  000EB6  EC0D  F006         	call	_EscreveCaractereLCD
  1664                           
  1665                           ;displayLCD.c: 443: buffer++;
  1666  000EBA  4A13               	infsnz	EscreveFraseRamLCD@buffer,f,c
  1667  000EBC  2A14               	incf	EscreveFraseRamLCD@buffer+1,f,c
  1668  000EBE                     l1543:
  1669  000EBE  C013  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1670  000EC2  C014  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1671  000EC6  50DF               	movf	indf2,w,c
  1672  000EC8  B4D8               	btfsc	status,2,c
  1673  000ECA  0012               	return	
  1674  000ECC  D7EF               	goto	l1539
  1675  000ECE                     __end_of_EscreveFraseRamLCD:
  1676                           	opt stack 0
  1677                           tblptru	equ	0xFF8
  1678                           tblptrh	equ	0xFF7
  1679                           tblptrl	equ	0xFF6
  1680                           tablat	equ	0xFF5
  1681                           intcon	equ	0xFF2
  1682                           intcon3	equ	0xFF0
  1683                           postinc0	equ	0xFEE
  1684                           wreg	equ	0xFE8
  1685                           postdec1	equ	0xFE5
  1686                           plusw1	equ	0xFE3
  1687                           fsr1l	equ	0xFE1
  1688                           indf2	equ	0xFDF
  1689                           postinc2	equ	0xFDE
  1690                           plusw2	equ	0xFDB
  1691                           fsr2h	equ	0xFDA
  1692                           fsr2l	equ	0xFD9
  1693                           status	equ	0xFD8
  1694                           
  1695 ;; *************** function _EscreveCaractereLCD *****************
  1696 ;; Defined at:
  1697 ;;		line 339 in file "displayLCD.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  data            1    wreg     unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  data            1   17[COMRAM] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0
  1712 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1714 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1715 ;;Total ram usage:        1 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    2
  1718 ;; This function calls:
  1719 ;;		_Delay
  1720 ;; This function is called by:
  1721 ;;		_EscreveFraseRamLCD
  1722 ;;		_EscreveFloatLCD
  1723 ;;		_EscreveFraseLCD
  1724 ;;		_CriaCaractereLCD
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text10
  1729  000C1A                     __ptext10:
  1730                           	opt stack 0
  1731  000C1A                     _EscreveCaractereLCD:
  1732                           	opt stack 26
  1733                           
  1734                           ;incstack = 0
  1735                           ;EscreveCaractereLCD@data stored from wreg
  1736  000C1A  6E12               	movwf	EscreveCaractereLCD@data,c
  1737                           
  1738                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
  1739  000C1C  9483               	bcf	3971,2,c	;volatile
  1740                           
  1741                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
  1742  000C1E  8283               	bsf	3971,1,c	;volatile
  1743                           
  1744                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
  1745  000C20  9083               	bcf	3971,0,c	;volatile
  1746                           
  1747                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
  1748  000C22  A812               	btfss	EscreveCaractereLCD@data,4,c
  1749  000C24  D002               	goto	l80
  1750  000C26  8883               	bsf	3971,4,c	;volatile
  1751  000C28  D001               	goto	l1389
  1752  000C2A                     l80:
  1753                           
  1754                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
  1755  000C2A  9883               	bcf	3971,4,c	;volatile
  1756  000C2C                     l1389:
  1757                           
  1758                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
  1759  000C2C  AA12               	btfss	EscreveCaractereLCD@data,5,c
  1760  000C2E  D002               	goto	l82
  1761  000C30  8A83               	bsf	3971,5,c	;volatile
  1762  000C32  D001               	goto	l1393
  1763  000C34                     l82:
  1764                           
  1765                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
  1766  000C34  9A83               	bcf	3971,5,c	;volatile
  1767  000C36                     l1393:
  1768                           
  1769                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
  1770  000C36  AC12               	btfss	EscreveCaractereLCD@data,6,c
  1771  000C38  D002               	goto	l84
  1772  000C3A  8C83               	bsf	3971,6,c	;volatile
  1773  000C3C  D001               	goto	l1397
  1774  000C3E                     l84:
  1775                           
  1776                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
  1777  000C3E  9C83               	bcf	3971,6,c	;volatile
  1778  000C40                     l1397:
  1779                           
  1780                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
  1781  000C40  AE12               	btfss	EscreveCaractereLCD@data,7,c
  1782  000C42  D002               	goto	l86
  1783  000C44  8E83               	bsf	3971,7,c	;volatile
  1784  000C46  D001               	goto	l87
  1785  000C48                     l86:
  1786                           
  1787                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
  1788  000C48  9E83               	bcf	3971,7,c	;volatile
  1789  000C4A                     l87:
  1790                           
  1791                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
  1792  000C4A  8083               	bsf	3971,0,c	;volatile
  1793                           
  1794                           ;displayLCD.c: 358: Delay();
  1795  000C4C  EC67  F007         	call	_Delay	;wreg free
  1796                           
  1797                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  1798  000C50  9083               	bcf	3971,0,c	;volatile
  1799                           
  1800                           ;displayLCD.c: 360: Delay();
  1801  000C52  EC67  F007         	call	_Delay	;wreg free
  1802                           
  1803                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  1804  000C56  A012               	btfss	EscreveCaractereLCD@data,0,c
  1805  000C58  D002               	goto	l88
  1806  000C5A  8883               	bsf	3971,4,c	;volatile
  1807  000C5C  D001               	goto	l89
  1808  000C5E                     l88:
  1809                           
  1810                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  1811  000C5E  9883               	bcf	3971,4,c	;volatile
  1812  000C60                     l89:
  1813                           
  1814                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  1815  000C60  A212               	btfss	EscreveCaractereLCD@data,1,c
  1816  000C62  D002               	goto	l90
  1817  000C64  8A83               	bsf	3971,5,c	;volatile
  1818  000C66  D001               	goto	l91
  1819  000C68                     l90:
  1820                           
  1821                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  1822  000C68  9A83               	bcf	3971,5,c	;volatile
  1823  000C6A                     l91:
  1824                           
  1825                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  1826  000C6A  A412               	btfss	EscreveCaractereLCD@data,2,c
  1827  000C6C  D002               	goto	l92
  1828  000C6E  8C83               	bsf	3971,6,c	;volatile
  1829  000C70  D001               	goto	l93
  1830  000C72                     l92:
  1831                           
  1832                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  1833  000C72  9C83               	bcf	3971,6,c	;volatile
  1834  000C74                     l93:
  1835                           
  1836                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  1837  000C74  A612               	btfss	EscreveCaractereLCD@data,3,c
  1838  000C76  D002               	goto	l94
  1839  000C78  8E83               	bsf	3971,7,c	;volatile
  1840  000C7A  D001               	goto	l95
  1841  000C7C                     l94:
  1842                           
  1843                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  1844  000C7C  9E83               	bcf	3971,7,c	;volatile
  1845  000C7E                     l95:
  1846                           
  1847                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  1848  000C7E  8083               	bsf	3971,0,c	;volatile
  1849                           
  1850                           ;displayLCD.c: 375: Delay();
  1851  000C80  EC67  F007         	call	_Delay	;wreg free
  1852                           
  1853                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  1854  000C84  9083               	bcf	3971,0,c	;volatile
  1855                           
  1856                           ;displayLCD.c: 377: Delay();
  1857  000C86  EC67  F007         	call	_Delay	;wreg free
  1858  000C8A  0012               	return		;funcret
  1859  000C8C                     __end_of_EscreveCaractereLCD:
  1860                           	opt stack 0
  1861                           tblptru	equ	0xFF8
  1862                           tblptrh	equ	0xFF7
  1863                           tblptrl	equ	0xFF6
  1864                           tablat	equ	0xFF5
  1865                           intcon	equ	0xFF2
  1866                           intcon3	equ	0xFF0
  1867                           postinc0	equ	0xFEE
  1868                           wreg	equ	0xFE8
  1869                           postdec1	equ	0xFE5
  1870                           plusw1	equ	0xFE3
  1871                           fsr1l	equ	0xFE1
  1872                           indf2	equ	0xFDF
  1873                           postinc2	equ	0xFDE
  1874                           plusw2	equ	0xFDB
  1875                           fsr2h	equ	0xFDA
  1876                           fsr2l	equ	0xFD9
  1877                           status	equ	0xFD8
  1878                           
  1879 ;; *************** function _ConfiguraLCD *****************
  1880 ;; Defined at:
  1881 ;;		line 80 in file "displayLCD.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1895 ;;      Params:         0       0       0       0       0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1897 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1898 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1899 ;;Total ram usage:        1 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    3
  1902 ;; This function calls:
  1903 ;;		_Delay
  1904 ;;		_EscreveComandoLCD
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text11
  1911  000AF0                     __ptext11:
  1912                           	opt stack 0
  1913  000AF0                     _ConfiguraLCD:
  1914                           	opt stack 27
  1915                           
  1916                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  1917                           
  1918                           ;incstack = 0
  1919  000AF0  9495               	bcf	3989,2,c	;volatile
  1920                           
  1921                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  1922  000AF2  9295               	bcf	3989,1,c	;volatile
  1923                           
  1924                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  1925  000AF4  9095               	bcf	3989,0,c	;volatile
  1926                           
  1927                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  1928  000AF6  9895               	bcf	3989,4,c	;volatile
  1929                           
  1930                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  1931  000AF8  9A95               	bcf	3989,5,c	;volatile
  1932                           
  1933                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  1934  000AFA  9C95               	bcf	3989,6,c	;volatile
  1935                           
  1936                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  1937  000AFC  9E95               	bcf	3989,7,c	;volatile
  1938                           
  1939                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  1940  000AFE  9483               	bcf	3971,2,c	;volatile
  1941                           
  1942                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  1943  000B00  9283               	bcf	3971,1,c	;volatile
  1944                           
  1945                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  1946  000B02  9083               	bcf	3971,0,c	;volatile
  1947                           
  1948                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  1949  000B04  9E83               	bcf	3971,7,c	;volatile
  1950                           
  1951                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  1952  000B06  9C83               	bcf	3971,6,c	;volatile
  1953                           
  1954                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  1955  000B08  8A83               	bsf	3971,5,c	;volatile
  1956                           
  1957                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  1958  000B0A  8883               	bsf	3971,4,c	;volatile
  1959                           
  1960                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  1961  000B0C  0EEA               	movlw	234
  1962  000B0E  6E13               	movwf	??_ConfiguraLCD& (0+255),c
  1963  000B10  0EC3               	movlw	195
  1964  000B12                     u1207:
  1965  000B12  2EE8               	decfsz	wreg,f,c
  1966  000B14  D7FE               	bra	u1207
  1967  000B16  2E13               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1968  000B18  D7FC               	bra	u1207
  1969  000B1A  F000               	nop	
  1970                           
  1971                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  1972  000B1C  8083               	bsf	3971,0,c	;volatile
  1973                           
  1974                           ;displayLCD.c: 117: Delay();
  1975  000B1E  EC67  F007         	call	_Delay	;wreg free
  1976                           
  1977                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  1978  000B22  9083               	bcf	3971,0,c	;volatile
  1979                           
  1980                           ;displayLCD.c: 119: Delay();
  1981  000B24  EC67  F007         	call	_Delay	;wreg free
  1982                           
  1983                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  1984  000B28  0E4E               	movlw	78
  1985  000B2A  6E13               	movwf	??_ConfiguraLCD& (0+255),c
  1986  000B2C  0EEB               	movlw	235
  1987  000B2E                     u1217:
  1988  000B2E  2EE8               	decfsz	wreg,f,c
  1989  000B30  D7FE               	bra	u1217
  1990  000B32  2E13               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1991  000B34  D7FC               	bra	u1217
  1992  000B36  F000               	nop	
  1993                           
  1994                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  1995  000B38  8083               	bsf	3971,0,c	;volatile
  1996                           
  1997                           ;displayLCD.c: 128: Delay();
  1998  000B3A  EC67  F007         	call	_Delay	;wreg free
  1999                           
  2000                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  2001  000B3E  9083               	bcf	3971,0,c	;volatile
  2002                           
  2003                           ;displayLCD.c: 130: Delay();
  2004  000B40  EC67  F007         	call	_Delay	;wreg free
  2005                           
  2006                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  2007  000B44  0E4E               	movlw	78
  2008  000B46  6E13               	movwf	??_ConfiguraLCD& (0+255),c
  2009  000B48  0EEB               	movlw	235
  2010  000B4A                     u1227:
  2011  000B4A  2EE8               	decfsz	wreg,f,c
  2012  000B4C  D7FE               	bra	u1227
  2013  000B4E  2E13               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2014  000B50  D7FC               	bra	u1227
  2015  000B52  F000               	nop	
  2016                           
  2017                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  2018  000B54  8083               	bsf	3971,0,c	;volatile
  2019                           
  2020                           ;displayLCD.c: 139: Delay();
  2021  000B56  EC67  F007         	call	_Delay	;wreg free
  2022                           
  2023                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  2024  000B5A  9083               	bcf	3971,0,c	;volatile
  2025                           
  2026                           ;displayLCD.c: 141: Delay();
  2027  000B5C  EC67  F007         	call	_Delay	;wreg free
  2028                           
  2029                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  2030  000B60  9E83               	bcf	3971,7,c	;volatile
  2031                           
  2032                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  2033  000B62  9C83               	bcf	3971,6,c	;volatile
  2034                           
  2035                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  2036  000B64  8A83               	bsf	3971,5,c	;volatile
  2037                           
  2038                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  2039  000B66  9883               	bcf	3971,4,c	;volatile
  2040                           
  2041                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  2042  000B68  8083               	bsf	3971,0,c	;volatile
  2043                           
  2044                           ;displayLCD.c: 152: Delay();
  2045  000B6A  EC67  F007         	call	_Delay	;wreg free
  2046                           
  2047                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  2048  000B6E  9083               	bcf	3971,0,c	;volatile
  2049                           
  2050                           ;displayLCD.c: 154: Delay();
  2051  000B70  EC67  F007         	call	_Delay	;wreg free
  2052                           
  2053                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  2054  000B74  0E28               	movlw	40
  2055  000B76  ECC7  F005         	call	_EscreveComandoLCD
  2056                           
  2057                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  2058  000B7A  0E06               	movlw	6
  2059  000B7C  ECC7  F005         	call	_EscreveComandoLCD
  2060                           
  2061                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  2062  000B80  0E0E               	movlw	14
  2063  000B82  ECC7  F005         	call	_EscreveComandoLCD
  2064                           
  2065                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  2066  000B86  0E01               	movlw	1
  2067  000B88  ECC7  F005         	call	_EscreveComandoLCD
  2068  000B8C  0012               	return		;funcret
  2069  000B8E                     __end_of_ConfiguraLCD:
  2070                           	opt stack 0
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           intcon	equ	0xFF2
  2076                           intcon3	equ	0xFF0
  2077                           postinc0	equ	0xFEE
  2078                           wreg	equ	0xFE8
  2079                           postdec1	equ	0xFE5
  2080                           plusw1	equ	0xFE3
  2081                           fsr1l	equ	0xFE1
  2082                           indf2	equ	0xFDF
  2083                           postinc2	equ	0xFDE
  2084                           plusw2	equ	0xFDB
  2085                           fsr2h	equ	0xFDA
  2086                           fsr2l	equ	0xFD9
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function _EscreveComandoLCD *****************
  2090 ;; Defined at:
  2091 ;;		line 172 in file "displayLCD.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  cmd             1    wreg     unsigned char 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  cmd             1   17[COMRAM] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2105 ;;      Params:         0       0       0       0       0       0       0       0       0
  2106 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2108 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2109 ;;Total ram usage:        1 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    2
  2112 ;; This function calls:
  2113 ;;		_Delay
  2114 ;; This function is called by:
  2115 ;;		_ConfiguraLCD
  2116 ;;		_main
  2117 ;;		_CriaCaractereLCD
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text12
  2122  000B8E                     __ptext12:
  2123                           	opt stack 0
  2124  000B8E                     _EscreveComandoLCD:
  2125                           	opt stack 28
  2126                           
  2127                           ;incstack = 0
  2128                           ;EscreveComandoLCD@cmd stored from wreg
  2129  000B8E  6E12               	movwf	EscreveComandoLCD@cmd,c
  2130                           
  2131                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  2132  000B90  9483               	bcf	3971,2,c	;volatile
  2133                           
  2134                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  2135  000B92  9283               	bcf	3971,1,c	;volatile
  2136                           
  2137                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  2138  000B94  9083               	bcf	3971,0,c	;volatile
  2139                           
  2140                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  2141  000B96  A812               	btfss	EscreveComandoLCD@cmd,4,c
  2142  000B98  D002               	goto	l29
  2143  000B9A  8883               	bsf	3971,4,c	;volatile
  2144  000B9C  D001               	goto	l1455
  2145  000B9E                     l29:
  2146                           
  2147                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  2148  000B9E  9883               	bcf	3971,4,c	;volatile
  2149  000BA0                     l1455:
  2150                           
  2151                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  2152  000BA0  AA12               	btfss	EscreveComandoLCD@cmd,5,c
  2153  000BA2  D002               	goto	l31
  2154  000BA4  8A83               	bsf	3971,5,c	;volatile
  2155  000BA6  D001               	goto	l1459
  2156  000BA8                     l31:
  2157                           
  2158                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  2159  000BA8  9A83               	bcf	3971,5,c	;volatile
  2160  000BAA                     l1459:
  2161                           
  2162                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  2163  000BAA  AC12               	btfss	EscreveComandoLCD@cmd,6,c
  2164  000BAC  D002               	goto	l33
  2165  000BAE  8C83               	bsf	3971,6,c	;volatile
  2166  000BB0  D001               	goto	l1463
  2167  000BB2                     l33:
  2168                           
  2169                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  2170  000BB2  9C83               	bcf	3971,6,c	;volatile
  2171  000BB4                     l1463:
  2172                           
  2173                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  2174  000BB4  AE12               	btfss	EscreveComandoLCD@cmd,7,c
  2175  000BB6  D002               	goto	l35
  2176  000BB8  8E83               	bsf	3971,7,c	;volatile
  2177  000BBA  D001               	goto	l36
  2178  000BBC                     l35:
  2179                           
  2180                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  2181  000BBC  9E83               	bcf	3971,7,c	;volatile
  2182  000BBE                     l36:
  2183                           
  2184                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  2185  000BBE  8083               	bsf	3971,0,c	;volatile
  2186                           
  2187                           ;displayLCD.c: 191: Delay();
  2188  000BC0  EC67  F007         	call	_Delay	;wreg free
  2189                           
  2190                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  2191  000BC4  9083               	bcf	3971,0,c	;volatile
  2192                           
  2193                           ;displayLCD.c: 193: Delay();
  2194  000BC6  EC67  F007         	call	_Delay	;wreg free
  2195                           
  2196                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  2197  000BCA  A012               	btfss	EscreveComandoLCD@cmd,0,c
  2198  000BCC  D002               	goto	l37
  2199  000BCE  8883               	bsf	3971,4,c	;volatile
  2200  000BD0  D001               	goto	l38
  2201  000BD2                     l37:
  2202                           
  2203                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  2204  000BD2  9883               	bcf	3971,4,c	;volatile
  2205  000BD4                     l38:
  2206                           
  2207                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  2208  000BD4  A212               	btfss	EscreveComandoLCD@cmd,1,c
  2209  000BD6  D002               	goto	l39
  2210  000BD8  8A83               	bsf	3971,5,c	;volatile
  2211  000BDA  D001               	goto	l40
  2212  000BDC                     l39:
  2213                           
  2214                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  2215  000BDC  9A83               	bcf	3971,5,c	;volatile
  2216  000BDE                     l40:
  2217                           
  2218                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  2219  000BDE  A412               	btfss	EscreveComandoLCD@cmd,2,c
  2220  000BE0  D002               	goto	l41
  2221  000BE2  8C83               	bsf	3971,6,c	;volatile
  2222  000BE4  D001               	goto	l42
  2223  000BE6                     l41:
  2224                           
  2225                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  2226  000BE6  9C83               	bcf	3971,6,c	;volatile
  2227  000BE8                     l42:
  2228                           
  2229                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  2230  000BE8  A612               	btfss	EscreveComandoLCD@cmd,3,c
  2231  000BEA  D002               	goto	l43
  2232  000BEC  8E83               	bsf	3971,7,c	;volatile
  2233  000BEE  D001               	goto	l44
  2234  000BF0                     l43:
  2235                           
  2236                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  2237  000BF0  9E83               	bcf	3971,7,c	;volatile
  2238  000BF2                     l44:
  2239                           
  2240                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  2241  000BF2  8083               	bsf	3971,0,c	;volatile
  2242                           
  2243                           ;displayLCD.c: 207: Delay();
  2244  000BF4  EC67  F007         	call	_Delay	;wreg free
  2245                           
  2246                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  2247  000BF8  9083               	bcf	3971,0,c	;volatile
  2248                           
  2249                           ;displayLCD.c: 209: Delay();
  2250  000BFA  EC67  F007         	call	_Delay	;wreg free
  2251                           
  2252                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  2253  000BFE  0412               	decf	EscreveComandoLCD@cmd,w,c
  2254  000C00  B4D8               	btfsc	status,2,c
  2255  000C02  D008               	goto	l1491
  2256  000C04  0E02               	movlw	2
  2257  000C06  1812               	xorwf	EscreveComandoLCD@cmd,w,c
  2258  000C08  B4D8               	btfsc	status,2,c
  2259  000C0A  D004               	goto	l1491
  2260  000C0C  0E03               	movlw	3
  2261  000C0E  1812               	xorwf	EscreveComandoLCD@cmd,w,c
  2262  000C10  A4D8               	btfss	status,2,c
  2263  000C12  0012               	return	
  2264  000C14                     l1491:
  2265                           
  2266                           ;displayLCD.c: 215: { Delay(); }
  2267  000C14  EC67  F007         	call	_Delay	;wreg free
  2268  000C18  0012               	return	
  2269  000C1A                     __end_of_EscreveComandoLCD:
  2270                           	opt stack 0
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           intcon	equ	0xFF2
  2276                           intcon3	equ	0xFF0
  2277                           postinc0	equ	0xFEE
  2278                           wreg	equ	0xFE8
  2279                           postdec1	equ	0xFE5
  2280                           plusw1	equ	0xFE3
  2281                           fsr1l	equ	0xFE1
  2282                           indf2	equ	0xFDF
  2283                           postinc2	equ	0xFDE
  2284                           plusw2	equ	0xFDB
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _Delay *****************
  2290 ;; Defined at:
  2291 ;;		line 54 in file "displayLCD.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  Cnt2            1   16[COMRAM] unsigned char 
  2296 ;;  Cnt1            1   15[COMRAM] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0
  2307 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2309 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2310 ;;Total ram usage:        2 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    1
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_ConfiguraLCD
  2317 ;;		_EscreveComandoLCD
  2318 ;;		_EnderecoCursor
  2319 ;;		_EscreveCaractereLCD
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text13
  2324  000ECE                     __ptext13:
  2325                           	opt stack 0
  2326  000ECE                     _Delay:
  2327                           	opt stack 27
  2328                           
  2329                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  2330                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  2331                           
  2332                           ;incstack = 0
  2333  000ECE  0E00               	movlw	0
  2334  000ED0  6E10               	movwf	Delay@Cnt1,c
  2335  000ED2                     l1327:
  2336  000ED2  0E1D               	movlw	29
  2337  000ED4  6410               	cpfsgt	Delay@Cnt1,c
  2338  000ED6  D001               	goto	l19
  2339  000ED8  0012               	return	
  2340  000EDA                     l19:
  2341                           
  2342                           ;displayLCD.c: 59: {
  2343                           ;displayLCD.c: 60: __nop();
  2344  000EDA  F000               	nop	
  2345                           
  2346                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  2347  000EDC  0E00               	movlw	0
  2348  000EDE  6E11               	movwf	Delay@Cnt2,c
  2349  000EE0                     l1333:
  2350  000EE0  0E1D               	movlw	29
  2351  000EE2  6411               	cpfsgt	Delay@Cnt2,c
  2352  000EE4  D001               	goto	l21
  2353  000EE6  D003               	goto	l1341
  2354  000EE8                     l21:
  2355                           
  2356                           ;displayLCD.c: 62: {
  2357                           ;displayLCD.c: 63: __nop();
  2358  000EE8  F000               	nop	
  2359  000EEA  2A11               	incf	Delay@Cnt2,f,c
  2360  000EEC  D7F9               	goto	l1333
  2361  000EEE                     l1341:
  2362  000EEE  2A10               	incf	Delay@Cnt1,f,c
  2363  000EF0  D7F0               	goto	l1327
  2364  000EF2                     __end_of_Delay:
  2365                           	opt stack 0
  2366                           tblptru	equ	0xFF8
  2367                           tblptrh	equ	0xFF7
  2368                           tblptrl	equ	0xFF6
  2369                           tablat	equ	0xFF5
  2370                           intcon	equ	0xFF2
  2371                           intcon3	equ	0xFF0
  2372                           postinc0	equ	0xFEE
  2373                           wreg	equ	0xFE8
  2374                           postdec1	equ	0xFE5
  2375                           plusw1	equ	0xFE3
  2376                           fsr1l	equ	0xFE1
  2377                           indf2	equ	0xFDF
  2378                           postinc2	equ	0xFDE
  2379                           plusw2	equ	0xFDB
  2380                           fsr2h	equ	0xFDA
  2381                           fsr2l	equ	0xFD9
  2382                           status	equ	0xFD8
  2383                           
  2384 ;; *************** function _InterrupcoesAlta *****************
  2385 ;; Defined at:
  2386 ;;		line 102 in file "intext.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2402 ;;      Temps:         15       0       0       0       0       0       0       0       0
  2403 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2404 ;;Total ram usage:       15 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		Interrupt level 2
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	intcode
  2414  000008                     __pintcode:
  2415                           	opt stack 0
  2416  000008                     _InterrupcoesAlta:
  2417                           	opt stack 26
  2418                           
  2419                           ;incstack = 0
  2420  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2421  00000A  EDC4  F004         	call	int_func,f	;refresh shadow registers
  2422                           tblptru	equ	0xFF8
  2423                           tblptrh	equ	0xFF7
  2424                           tblptrl	equ	0xFF6
  2425                           tablat	equ	0xFF5
  2426                           intcon	equ	0xFF2
  2427                           intcon3	equ	0xFF0
  2428                           postinc0	equ	0xFEE
  2429                           wreg	equ	0xFE8
  2430                           postdec1	equ	0xFE5
  2431                           plusw1	equ	0xFE3
  2432                           fsr1l	equ	0xFE1
  2433                           indf2	equ	0xFDF
  2434                           postinc2	equ	0xFDE
  2435                           plusw2	equ	0xFDB
  2436                           fsr2h	equ	0xFDA
  2437                           fsr2l	equ	0xFD9
  2438                           status	equ	0xFD8
  2439                           
  2440                           	psect	intcode_body
  2441  000988                     __pintcode_body:
  2442                           	opt stack 26
  2443  000988                     int_func:
  2444                           	opt stack 26
  2445  000988  0006               	pop		; remove dummy address from shadow register refresh
  2446  00098A  CFFA F002          	movff	pclath,??_InterrupcoesAlta+1
  2447  00098E  CFFB F003          	movff	pclatu,??_InterrupcoesAlta+2
  2448  000992  CFE9 F004          	movff	fsr0l,??_InterrupcoesAlta+3
  2449  000996  CFEA F005          	movff	fsr0h,??_InterrupcoesAlta+4
  2450  00099A  CFE1 F006          	movff	fsr1l,??_InterrupcoesAlta+5
  2451  00099E  CFE2 F007          	movff	fsr1h,??_InterrupcoesAlta+6
  2452  0009A2  CFD9 F008          	movff	fsr2l,??_InterrupcoesAlta+7
  2453  0009A6  CFDA F009          	movff	fsr2h,??_InterrupcoesAlta+8
  2454  0009AA  CFF3 F00A          	movff	prodl,??_InterrupcoesAlta+9
  2455  0009AE  CFF4 F00B          	movff	prodh,??_InterrupcoesAlta+10
  2456  0009B2  CFF6 F00C          	movff	tblptrl,??_InterrupcoesAlta+11
  2457  0009B6  CFF7 F00D          	movff	tblptrh,??_InterrupcoesAlta+12
  2458  0009BA  CFF8 F00E          	movff	tblptru,??_InterrupcoesAlta+13
  2459  0009BE  CFF5 F00F          	movff	tablat,??_InterrupcoesAlta+14
  2460                           
  2461                           ;intext.c: 104: if(INT0IE && INT0IF){
  2462  0009C2  B8F2               	btfsc	intcon,4,c	;volatile
  2463  0009C4  A2F2               	btfss	intcon,1,c	;volatile
  2464  0009C6  D010               	goto	i2l1753
  2465                           
  2466                           ;intext.c: 105: PORTBbits.RB7 = !PORTBbits.RB7;
  2467  0009C8  BE81               	btfsc	3969,7,c	;volatile
  2468  0009CA  D003               	goto	i2u113_40
  2469  0009CC  6A01               	clrf	??_InterrupcoesAlta& (0+255),c
  2470  0009CE  2A01               	incf	??_InterrupcoesAlta& (0+255),f,c
  2471  0009D0  D001               	goto	i2u114_48
  2472  0009D2                     i2u113_40:
  2473  0009D2  6A01               	clrf	??_InterrupcoesAlta& (0+255),c
  2474  0009D4                     i2u114_48:
  2475  0009D4  3201               	rrcf	??_InterrupcoesAlta,f,c
  2476  0009D6  3201               	rrcf	??_InterrupcoesAlta,f,c
  2477  0009D8  5081               	movf	3969,w,c	;volatile
  2478  0009DA  1801               	xorwf	??_InterrupcoesAlta,w,c
  2479  0009DC  0B7F               	andlw	-129
  2480  0009DE  1801               	xorwf	??_InterrupcoesAlta,w,c
  2481  0009E0  6E81               	movwf	3969,c	;volatile
  2482                           
  2483                           ;intext.c: 106: contador++;
  2484  0009E2  0100               	movlb	0	; () banked
  2485  0009E4  2BA5               	incf	_contador& (0+255),f,b
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;intext.c: 107: INT0IF = 0;
  2489  0009E6  92F2               	bcf	intcon,1,c	;volatile
  2490  0009E8                     i2l1753:
  2491                           
  2492                           ;intext.c: 108: }
  2493                           ;intext.c: 109: if(INT1IE && INT1IF){
  2494  0009E8  B6F0               	btfsc	intcon3,3,c	;volatile
  2495  0009EA  A0F0               	btfss	intcon3,0,c	;volatile
  2496  0009EC  D011               	goto	i2l198
  2497                           
  2498                           ;intext.c: 110: PORTBbits.RB6 = !PORTBbits.RB6;
  2499  0009EE  BC81               	btfsc	3969,6,c	;volatile
  2500  0009F0  D003               	goto	i2u117_40
  2501  0009F2  6A01               	clrf	??_InterrupcoesAlta& (0+255),c
  2502  0009F4  2A01               	incf	??_InterrupcoesAlta& (0+255),f,c
  2503  0009F6  D001               	goto	i2u118_48
  2504  0009F8                     i2u117_40:
  2505  0009F8  6A01               	clrf	??_InterrupcoesAlta& (0+255),c
  2506  0009FA                     i2u118_48:
  2507  0009FA  3A01               	swapf	??_InterrupcoesAlta,f,c
  2508  0009FC  4601               	rlncf	??_InterrupcoesAlta,f,c
  2509  0009FE  4601               	rlncf	??_InterrupcoesAlta,f,c
  2510  000A00  5081               	movf	3969,w,c	;volatile
  2511  000A02  1801               	xorwf	??_InterrupcoesAlta,w,c
  2512  000A04  0BBF               	andlw	-65
  2513  000A06  1801               	xorwf	??_InterrupcoesAlta,w,c
  2514  000A08  6E81               	movwf	3969,c	;volatile
  2515                           
  2516                           ;intext.c: 111: contadorB++;
  2517  000A0A  0100               	movlb	0	; () banked
  2518  000A0C  2BA4               	incf	_contadorB& (0+255),f,b
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;intext.c: 112: INT1IF = 0;
  2522  000A0E  90F0               	bcf	intcon3,0,c	;volatile
  2523  000A10                     i2l198:
  2524  000A10  C00F  FFF5         	movff	??_InterrupcoesAlta+14,tablat
  2525  000A14  C00E  FFF8         	movff	??_InterrupcoesAlta+13,tblptru
  2526  000A18  C00D  FFF7         	movff	??_InterrupcoesAlta+12,tblptrh
  2527  000A1C  C00C  FFF6         	movff	??_InterrupcoesAlta+11,tblptrl
  2528  000A20  C00B  FFF4         	movff	??_InterrupcoesAlta+10,prodh
  2529  000A24  C00A  FFF3         	movff	??_InterrupcoesAlta+9,prodl
  2530  000A28  C009  FFDA         	movff	??_InterrupcoesAlta+8,fsr2h
  2531  000A2C  C008  FFD9         	movff	??_InterrupcoesAlta+7,fsr2l
  2532  000A30  C007  FFE2         	movff	??_InterrupcoesAlta+6,fsr1h
  2533  000A34  C006  FFE1         	movff	??_InterrupcoesAlta+5,fsr1l
  2534  000A38  C005  FFEA         	movff	??_InterrupcoesAlta+4,fsr0h
  2535  000A3C  C004  FFE9         	movff	??_InterrupcoesAlta+3,fsr0l
  2536  000A40  C003  FFFB         	movff	??_InterrupcoesAlta+2,pclatu
  2537  000A44  C002  FFFA         	movff	??_InterrupcoesAlta+1,pclath
  2538  000A48  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2539  000A4A  0011               	retfie		f
  2540  000A4C                     __end_of_InterrupcoesAlta:
  2541                           	opt stack 0
  2542                           pclatu	equ	0xFFB
  2543                           pclath	equ	0xFFA
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           intcon	equ	0xFF2
  2551                           intcon3	equ	0xFF0
  2552                           postinc0	equ	0xFEE
  2553                           fsr0h	equ	0xFEA
  2554                           fsr0l	equ	0xFE9
  2555                           wreg	equ	0xFE8
  2556                           postdec1	equ	0xFE5
  2557                           plusw1	equ	0xFE3
  2558                           fsr1h	equ	0xFE2
  2559                           fsr1l	equ	0xFE1
  2560                           indf2	equ	0xFDF
  2561                           postinc2	equ	0xFDE
  2562                           plusw2	equ	0xFDB
  2563                           fsr2h	equ	0xFDA
  2564                           fsr2l	equ	0xFD9
  2565                           status	equ	0xFD8
  2566                           pclatu	equ	0xFFB
  2567                           pclath	equ	0xFFA
  2568                           tblptru	equ	0xFF8
  2569                           tblptrh	equ	0xFF7
  2570                           tblptrl	equ	0xFF6
  2571                           tablat	equ	0xFF5
  2572                           prodh	equ	0xFF4
  2573                           prodl	equ	0xFF3
  2574                           intcon	equ	0xFF2
  2575                           intcon3	equ	0xFF0
  2576                           postinc0	equ	0xFEE
  2577                           fsr0h	equ	0xFEA
  2578                           fsr0l	equ	0xFE9
  2579                           wreg	equ	0xFE8
  2580                           postdec1	equ	0xFE5
  2581                           plusw1	equ	0xFE3
  2582                           fsr1h	equ	0xFE2
  2583                           fsr1l	equ	0xFE1
  2584                           indf2	equ	0xFDF
  2585                           postinc2	equ	0xFDE
  2586                           plusw2	equ	0xFDB
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591                           	psect	rparam
  2592  0000                     pclatu	equ	0xFFB
  2593                           pclath	equ	0xFFA
  2594                           tblptru	equ	0xFF8
  2595                           tblptrh	equ	0xFF7
  2596                           tblptrl	equ	0xFF6
  2597                           tablat	equ	0xFF5
  2598                           prodh	equ	0xFF4
  2599                           prodl	equ	0xFF3
  2600                           intcon	equ	0xFF2
  2601                           intcon3	equ	0xFF0
  2602                           postinc0	equ	0xFEE
  2603                           fsr0h	equ	0xFEA
  2604                           fsr0l	equ	0xFE9
  2605                           wreg	equ	0xFE8
  2606                           postdec1	equ	0xFE5
  2607                           plusw1	equ	0xFE3
  2608                           fsr1h	equ	0xFE2
  2609                           fsr1l	equ	0xFE1
  2610                           indf2	equ	0xFDF
  2611                           postinc2	equ	0xFDE
  2612                           plusw2	equ	0xFDB
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617                           	psect	temp
  2618  000049                     btemp:
  2619                           	opt stack 0
  2620  000049                     	ds	1
  2621  0000                     int$flags	set	btemp
  2622                           pclatu	equ	0xFFB
  2623                           pclath	equ	0xFFA
  2624                           tblptru	equ	0xFF8
  2625                           tblptrh	equ	0xFF7
  2626                           tblptrl	equ	0xFF6
  2627                           tablat	equ	0xFF5
  2628                           prodh	equ	0xFF4
  2629                           prodl	equ	0xFF3
  2630                           intcon	equ	0xFF2
  2631                           intcon3	equ	0xFF0
  2632                           postinc0	equ	0xFEE
  2633                           fsr0h	equ	0xFEA
  2634                           fsr0l	equ	0xFE9
  2635                           wreg	equ	0xFE8
  2636                           postdec1	equ	0xFE5
  2637                           plusw1	equ	0xFE3
  2638                           fsr1h	equ	0xFE2
  2639                           fsr1l	equ	0xFE1
  2640                           indf2	equ	0xFDF
  2641                           postinc2	equ	0xFDE
  2642                           plusw2	equ	0xFDB
  2643                           fsr2h	equ	0xFDA
  2644                           fsr2l	equ	0xFD9
  2645                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    108
    Data        7
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      72
    BANK0           160     68      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@Texto_2(BANK0[17]), main@Texto_1(BANK0[17]), main@Texto_0(BANK0[17]), EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_EscreveInteiroLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveInteiroLCD->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _InterrupcoesAlta in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterrupcoesAlta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterrupcoesAlta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterrupcoesAlta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterrupcoesAlta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterrupcoesAlta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterrupcoesAlta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterrupcoesAlta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterrupcoesAlta in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0    4803
                                              0 BANK0     68    68      0
                       _ConfiguraLCD
                  _EscreveComandoLCD
                 _EscreveFraseRamLCD
                  _EscreveInteiroLCD
                   _PosicaoCursorLCD
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2     150
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _PosicaoCursorLCD                                     3     2      1     772
                                             18 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (2) _EnderecoCursor                                       1     1      0     246
                                             17 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _EscreveInteiroLCD                                    9     7      2    2390
                                             39 COMRAM     9     7      2
                 _EscreveFraseRamLCD
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1554
                                             31 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1199
                                             22 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EscreveFraseRamLCD                                   2     0      2     633
                                             18 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (3) _EscreveCaractereLCD                                  1     1      0     268
                                             17 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     426
                                             18 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (1) _EscreveComandoLCD                                    1     1      0     334
                                             17 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     2      0      92
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterrupcoesAlta                                    15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveComandoLCD
     _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _EscreveInteiroLCD
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   _delay_ms

 _InterrupcoesAlta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      46       5       43.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      48       1       76.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8E      20        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Nov 09 09:36:32 2020

                          l21 0EE8                            l31 0BA8                            l40 0BDE  
                          l41 0BE6                            l33 0BB2                            l42 0BE8  
                          l19 0EDA                            l43 0BF0                            l35 0BBC  
                          l51 0C9E                            l44 0BF2                            l36 0BBE  
                          l60 0CD4                            l37 0BD2                            l29 0B9E  
                          l61 0CDC                            l53 0CA8                            l38 0BD4  
                          l62 0CDE                            l70 0D00                            l39 0BDC  
                          l63 0CE6                            l55 0CB2                            l80 0C2A  
                          l64 0CE8                            l56 0CB4                            l57 0CC8  
                          l90 0C68                            l82 0C34                            l58 0CCA  
                          l91 0C6A                            l59 0CD2                            l92 0C72  
                          l84 0C3E                            l93 0C74                            l94 0C7C  
                          l86 0C48                            l95 0C7E                            l87 0C4A  
                          l88 0C5E                            l89 0C60                           l676 0DA0  
                         l597 0ACC                           l686 0E24                   main@Texto_0 0071  
                 main@Texto_1 0082                   main@Texto_2 0093                   main@Texto_3 0060  
                         wreg 000FE8                          l1341 0EEE                          l1333 0EE0  
                        l1421 0A54                          l1327 0ED2                          l1351 0D6E  
                        l1431 0A8E                          l1503 0CAA                          l1353 0D76  
                        l1363 0D96                          l1355 0D7A                          l1371 0DFA  
                        l1611 0D28                          l1603 0D0C                          l1373 0E02  
                        l1533 0DCE                          l1463 0BB4                          l1455 0BA0  
                        l1543 0EBE                          l1375 0E06                          l1615 0D36  
                        l1607 0D1A                          l1631 0EF4                          l1393 0C36  
                        l1633 0F04                          l1491 0C14                          l1459 0BAA  
                        l1539 0EAC                          l1379 0E1A                          l1619 0D3C  
                        l1397 0C40                          l1389 0C2C                          l1733 0952  
                        l1499 0CA0                          STR_1 086D                          u1011 0E78  
                        u1100 08D0                          u1070 0888                          u1207 0B12  
                        u1080 08A0                          u1217 0B2E                          u1090 08B8  
                        u1227 0B4A                          u1197 0EFA                          _main 087A  
                        _itoa 0DAA                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0049  
                        _utoa 0A4C                          prodh 000FF4                          prodl 000FF3  
                        start 000E                  ___param_bank 000000    __end_of_EscreveFraseRamLCD 0ECE  
                       ?_main 0001                         ?_itoa 0020                         ?_utoa 0017  
             __end_of___lwdiv 0DAA               __end_of___lwmod 0E2E                         i2l198 0A10  
                       _PORTB 000F81                         _TRISB 000F93                         _Delay 0ECE  
             __end_of_dpowers 0829          EscreveComandoLCD@cmd 0012                         pclath 000FFA  
                       tablat 000FF5                         plusw1 000FE3                         plusw2 000FDB  
                       utoa@c 001F                         utoa@v 001D                         status 000FD8  
             __initialization 0E2E                  __end_of_main 0988                  __end_of_itoa 0DEC  
                __end_of_utoa 0AF0                        ??_main 0031          __end_of_ConfiguraLCD 0B8E  
                      ??_itoa 0026                        ??_utoa 001D                 __activetblptr 000002  
           _EscreveComandoLCD 0B8E                        ?_Delay 0001            ?_EscreveComandoLCD 0001  
                      _ADCON1 000FC1                        _INT0IE 007F94                        _INT0IF 007F91  
                      _INT1IE 007F83                        _INT1IF 007F80                        i2l1753 09E8  
         ??_EscreveComandoLCD 0012              __end_of_delay_ms 0F14             ?_PosicaoCursorLCD 0013  
                   ??___lwdiv 0014  __size_of_EscreveCaractereLCD 0072                     ??___lwmod 0014  
          ??_PosicaoCursorLCD 0014                        clear_0 0E5A     __end_of_EscreveComandoLCD 0C1A  
                      itoa@cp 0026             _EscreveInteiroLCD 0E6E                  __pdataCOMRAM 0042  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8            ?_EscreveInteiroLCD 0028       __size_of_EnderecoCursor 006A  
         ??_EscreveInteiroLCD 002A                    __accesstop 0060       __end_of__initialization 0E60  
               ___rparam_used 000001                 __end_of_Delay 0EF2                __pcstackCOMRAM 0001  
   __end_of_EscreveInteiroLCD 0EAA     __size_of_InterrupcoesAlta 0A44                       ??_Delay 0010  
                  __pbssBANK0 00A4         __size_of_ConfiguraLCD 009E    __size_of_EscreveComandoLCD 008C  
          _EscreveFraseRamLCD 0EAA                     ?_delay_ms 0010           ?_EscreveFraseRamLCD 0013  
                _ConfiguraLCD 0AF0                       __Hparam 0000                       __Lparam 0000  
                     ___lwdiv 0D58                       ___lwmod 0DEC          ??_EscreveFraseRamLCD 0015  
                __psmallconst 0800                       __pcinit 0E2E                       __ramtop 0800  
  __size_of_EscreveInteiroLCD 003C                       __ptext0 087A                       __ptext1 0EF2  
                     __ptext2 0CF6                       __ptext3 0C8C                       __ptext4 0E6E  
                     __ptext5 0DAA                       __ptext6 0A4C                       __ptext7 0DEC  
                     __ptext8 0D58                       __ptext9 0EAA                       _dpowers 0801  
                  ??_delay_ms 0012                _EnderecoCursor 0C8C                     Delay@Cnt1 0010  
                   Delay@Cnt2 0011                __pintcode_body 0988           _EscreveCaractereLCD 0C1A  
        end_of_initialization 0E60                       ftoa@buf 0031                       itoa@buf 0020  
                     itoa@val 0022                 __Lmediumconst 0000                       int_func 0988  
           __end_ofmain@F3941 085C             __end_ofmain@F3943 084B             __end_ofmain@F3945 083A  
           __end_ofmain@F3939 086D                       postdec1 000FE5                       postinc0 000FEE  
                     postinc2 000FDE          ?_EscreveCaractereLCD 0001                       utoa@buf 0017  
                     utoa@val 0019   PosicaoCursorLCD@EnderecoLCD 0015                     _PORTBbits 000F81  
                   _PORTDbits 000F83              _InterrupcoesAlta 0008        __end_of_EnderecoCursor 0CF6  
                   _TRISDbits 000F95     __size_of_PosicaoCursorLCD 0062         ??_EscreveCaractereLCD 0012  
               __pidataCOMRAM 0F14               ?_EnderecoCursor 0001           start_initialization 0E2E  
    EscreveFraseRamLCD@buffer 0013                   __pbssCOMRAM 0031                 __pcstackBANK0 0060  
           __size_of_delay_ms 0022              ___lwdiv@dividend 0010                     __pintcode 0008  
                    ?___lwdiv 0010                      ?___lwmod 0010        EscreveInteiroLCD@F4004 0042  
                   _contadorB 00A4                   __smallconst 0800                __size_of_Delay 0024  
            _PosicaoCursorLCD 0CF6              ___lwdiv@quotient 0014        EscreveInteiroLCD@valor 0028  
      EscreveInteiroLCD@texto 002A        EnderecoCursor@endereco 0012      __end_of_InterrupcoesAlta 0A4C  
                    i2u113_40 09D2                      i2u114_48 09D4                      i2u117_40 09F8  
                    i2u118_48 09FA       EscreveCaractereLCD@data 0012                     main@F3941 084B  
                   main@F3943 083A                     main@F3945 0829                     main@F3939 085C  
 __size_of_EscreveFraseRamLCD 0024                   _INTCON3bits 000FF0                     copy_data0 0E42  
       delay_ms@tempodeatraso 0010                      __Hrparam 0000                      __Lrparam 0000  
            ??_EnderecoCursor 0012              __size_of___lwdiv 0052              __size_of___lwmod 0042  
                    _delay_ms 0EF2               ___lwdiv@divisor 0012               ___lwdiv@counter 0016  
                    __ptext10 0C1A                      __ptext11 0AF0                      __ptext12 0B8E  
                    __ptext13 0ECE                      _contador 00A5                 __size_of_main 010E  
               __size_of_itoa 0042                 __size_of_utoa 00A4   __end_of_EscreveCaractereLCD 0C8C  
                    int$flags 0049                    _INTCONbits 000FF2                      itoa@base 0024  
                    intlevel2 0000              ___lwmod@dividend 0010                 ?_ConfiguraLCD 0001  
    __end_of_PosicaoCursorLCD 0D58        PosicaoCursorLCD@coluna 0013                      utoa@base 001B  
             ___lwmod@divisor 0012               ___lwmod@counter 0014         PosicaoCursorLCD@linha 0014  
              ??_ConfiguraLCD 0013             ?_InterrupcoesAlta 0001            ??_InterrupcoesAlta 0001  
