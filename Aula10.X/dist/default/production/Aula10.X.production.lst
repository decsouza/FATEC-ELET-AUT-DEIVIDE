

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Oct 02 15:41:44 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28  0000                     
    29                           ; Version 1.41
    30                           ; Generated 25/01/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  000EC6                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for EscreveInteiroLCD@F4004
    69  000EC6  30                 	db	48
    70  000EC7  30                 	db	48
    71  000EC8  30                 	db	48
    72  000EC9  30                 	db	48
    73  000ECA  30                 	db	48
    74  000ECB  30                 	db	48
    75  000ECC  00                 	db	0
    76                           
    77                           	psect	smallconst
    78  000800                     __psmallconst:
    79                           	opt stack 0
    80  000800  00                 	db	0
    81  000801  0001               	dw	1
    82  000803  0000               	dw	0
    83  000805  000A               	dw	10
    84  000807  0000               	dw	0
    85  000809  0064               	dw	100
    86  00080B  0000               	dw	0
    87  00080D  03E8               	dw	1000
    88  00080F  0000               	dw	0
    89  000811  2710               	dw	10000
    90  000813  0000               	dw	0
    91  000815  86A0               	dw	34464
    92  000817  0001               	dw	1
    93  000819  4240               	dw	16960
    94  00081B  000F               	dw	15
    95  00081D  9680               	dw	38528
    96  00081F  0098               	dw	152
    97  000821  E100               	dw	57600
    98  000823  05F5               	dw	1525
    99  000825  CA00               	dw	51712
   100  000827  3B9A               	dw	15258
   101  000829                     __end_of_dpowers:
   102                           	opt stack 0
   103  000829                     main@F4005:
   104                           	opt stack 0
   105  000829  41                 	db	65
   106  00082A  4E                 	db	78
   107  00082B  30                 	db	48
   108  00082C  20                 	db	32
   109  00082D  3D                 	db	61
   110  00082E  20                 	db	32
   111  00082F  20                 	db	32
   112  000830  20                 	db	32
   113  000831  20                 	db	32
   114  000832  20                 	db	32
   115  000833  20                 	db	32
   116  000834  20                 	db	32
   117  000835  20                 	db	32
   118  000836  20                 	db	32
   119  000837  20                 	db	32
   120  000838  20                 	db	32
   121  000839  00                 	db	0
   122  00083A                     __end_ofmain@F4005:
   123                           	opt stack 0
   124  00083A                     main@F4003:
   125                           	opt stack 0
   126  00083A  20                 	db	32
   127  00083B  20                 	db	32
   128  00083C  20                 	db	32
   129  00083D  20                 	db	32
   130  00083E  20                 	db	32
   131  00083F  20                 	db	32
   132  000840  20                 	db	32
   133  000841  20                 	db	32
   134  000842  20                 	db	32
   135  000843  20                 	db	32
   136  000844  20                 	db	32
   137  000845  20                 	db	32
   138  000846  20                 	db	32
   139  000847  20                 	db	32
   140  000848  20                 	db	32
   141  000849  20                 	db	32
   142  00084A  00                 	db	0
   143  00084B                     __end_ofmain@F4003:
   144                           	opt stack 0
   145  00084B                     main@F4001:
   146                           	opt stack 0
   147  00084B  41                 	db	65
   148  00084C  44                 	db	68
   149  00084D  52                 	db	82
   150  00084E  45                 	db	69
   151  00084F  53                 	db	83
   152  000850  4C                 	db	76
   153  000851  20                 	db	32
   154  000852  3D                 	db	61
   155  000853  20                 	db	32
   156  000854  20                 	db	32
   157  000855  20                 	db	32
   158  000856  20                 	db	32
   159  000857  20                 	db	32
   160  000858  20                 	db	32
   161  000859  20                 	db	32
   162  00085A  20                 	db	32
   163  00085B  00                 	db	0
   164  00085C                     __end_ofmain@F4001:
   165                           	opt stack 0
   166  00085C                     main@F3999:
   167                           	opt stack 0
   168  00085C  41                 	db	65
   169  00085D  44                 	db	68
   170  00085E  52                 	db	82
   171  00085F  45                 	db	69
   172  000860  53                 	db	83
   173  000861  48                 	db	72
   174  000862  20                 	db	32
   175  000863  3D                 	db	61
   176  000864  20                 	db	32
   177  000865  20                 	db	32
   178  000866  20                 	db	32
   179  000867  20                 	db	32
   180  000868  20                 	db	32
   181  000869  20                 	db	32
   182  00086A  20                 	db	32
   183  00086B  20                 	db	32
   184  00086C  00                 	db	0
   185  00086D                     __end_ofmain@F3999:
   186                           	opt stack 0
   187  00086D                     main@F3997:
   188                           	opt stack 0
   189  00086D  45                 	db	69
   190  00086E  4E                 	db	78
   191  00086F  54                 	db	84
   192  000870  2E                 	db	46
   193  000871  20                 	db	32
   194  000872  41                 	db	65
   195  000873  4E                 	db	78
   196  000874  41                 	db	65
   197  000875  4C                 	db	76
   198  000876  4F                 	db	79
   199  000877  47                 	db	71
   200  000878  49                 	db	73
   201  000879  43                 	db	67
   202  00087A  41                 	db	65
   203  00087B  20                 	db	32
   204  00087C  20                 	db	32
   205  00087D  00                 	db	0
   206  00087E                     __end_ofmain@F3997:
   207                           	opt stack 0
   208  00087E                     main@F3995:
   209                           	opt stack 0
   210  00087E  46                 	db	70
   211  00087F  41                 	db	65
   212  000880  54                 	db	84
   213  000881  45                 	db	69
   214  000882  43                 	db	67
   215  000883  20                 	db	32
   216  000884  53                 	db	83
   217  000885  54                 	db	84
   218  000886  4F                 	db	79
   219  000887  2E                 	db	46
   220  000888  20                 	db	32
   221  000889  41                 	db	65
   222  00088A  4E                 	db	78
   223  00088B  44                 	db	68
   224  00088C  52                 	db	82
   225  00088D  45                 	db	69
   226  00088E  00                 	db	0
   227  00088F                     __end_ofmain@F3995:
   228                           	opt stack 0
   229  0000                     _ADRESL	set	4035
   230  0000                     _ADRESH	set	4036
   231  0000                     _ADCON0bits	set	4034
   232  0000                     _ADCON2	set	4032
   233  0000                     _ADCON0	set	4034
   234  0000                     _ADCON1	set	4033
   235  0000                     _PORTDbits	set	3971
   236  0000                     _TRISDbits	set	3989
   237  00088F  25                 	db	37
   238  000890  6C                 	db	108	;'l'
   239  000891  75                 	db	117	;'u'
   240  000892  2E                 	db	46
   241  000893  25                 	db	37
   242  000894  36                 	db	54	;'6'
   243  000895  2E                 	db	46
   244  000896  36                 	db	54	;'6'
   245  000897  6C                 	db	108	;'l'
   246  000898  75                 	db	117	;'u'
   247  000899  00                 	db	0
   248  00089A  00                 	db	0	; dummy byte at the end
   249  0000                     
   250                           ; #config settings
   251                           
   252                           	psect	cinit
   253  000E26                     __pcinit:
   254                           	opt stack 0
   255  000E26                     start_initialization:
   256                           	opt stack 0
   257  000E26                     __initialization:
   258                           	opt stack 0
   259                           
   260                           ; Initialize objects allocated to COMRAM (7 bytes)
   261                           ; load TBLPTR registers with __pidataCOMRAM
   262  000E26  0EC6               	movlw	low __pidataCOMRAM
   263  000E28  6EF6               	movwf	tblptrl,c
   264  000E2A  0E0E               	movlw	high __pidataCOMRAM
   265  000E2C  6EF7               	movwf	tblptrh,c
   266  000E2E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   267  000E30  6EF8               	movwf	tblptru,c
   268  000E32  EE00  F035         	lfsr	0,__pdataCOMRAM
   269  000E36  EE10 F007          	lfsr	1,7
   270  000E3A                     copy_data0:
   271  000E3A  0009               	tblrd		*+
   272  000E3C  CFF5 FFEE          	movff	tablat,postinc0
   273  000E40  50E5               	movf	postdec1,w,c
   274  000E42  50E1               	movf	fsr1l,w,c
   275  000E44  E1FA               	bnz	copy_data0
   276                           
   277                           ; Clear objects allocated to COMRAM (17 bytes)
   278  000E46  EE00  F024         	lfsr	0,__pbssCOMRAM
   279  000E4A  0E11               	movlw	17
   280  000E4C                     clear_0:
   281  000E4C  6AEE               	clrf	postinc0,c
   282  000E4E  06E8               	decf	wreg,f,c
   283  000E50  E1FD               	bnz	clear_0
   284  000E52                     end_of_initialization:
   285                           	opt stack 0
   286  000E52                     __end_of__initialization:
   287                           	opt stack 0
   288  000E52  0E00               	movlw	low (__Lmediumconst shr (0+16))
   289  000E54  6EF8               	movwf	tblptru,c
   290  000E56  0100               	movlb	0
   291  000E58  EF4E  F004         	goto	_main	;jump to C main() function
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           postdec1	equ	0xFE5
   299                           fsr1l	equ	0xFE1
   300                           
   301                           	psect	bssCOMRAM
   302  000024                     __pbssCOMRAM:
   303                           	opt stack 0
   304  000024                     ftoa@buf:
   305                           	opt stack 0
   306  000024                     	ds	17
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	dataCOMRAM
   317  000035                     __pdataCOMRAM:
   318                           	opt stack 0
   319  000035                     EscreveInteiroLCD@F4004:
   320                           	opt stack 0
   321  000035                     	ds	7
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	cstackBANK0
   332  000060                     __pcstackBANK0:
   333                           	opt stack 0
   334  000060                     main@Texto_0:
   335                           	opt stack 0
   336                           
   337                           ; 17 bytes @ 0x0
   338  000060                     	ds	17
   339  000071                     main@Texto_1:
   340                           	opt stack 0
   341                           
   342                           ; 17 bytes @ 0x11
   343  000071                     	ds	17
   344  000082                     main@Texto_2:
   345                           	opt stack 0
   346                           
   347                           ; 17 bytes @ 0x22
   348  000082                     	ds	17
   349  000093                     main@Texto_3:
   350                           	opt stack 0
   351                           
   352                           ; 17 bytes @ 0x33
   353  000093                     	ds	17
   354  0000A4                     main@Texto_4:
   355                           	opt stack 0
   356                           
   357                           ; 17 bytes @ 0x44
   358  0000A4                     	ds	17
   359  0000B5                     main@Texto_5:
   360                           	opt stack 0
   361                           
   362                           ; 17 bytes @ 0x55
   363  0000B5                     	ds	17
   364  0000C6                     main@valorAN0:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x66
   368  0000C6                     	ds	2
   369                           tblptru	equ	0xFF8
   370                           tblptrh	equ	0xFF7
   371                           tblptrl	equ	0xFF6
   372                           tablat	equ	0xFF5
   373                           postinc0	equ	0xFEE
   374                           wreg	equ	0xFE8
   375                           postdec1	equ	0xFE5
   376                           fsr1l	equ	0xFE1
   377                           
   378                           	psect	cstackCOMRAM
   379  000001                     __pcstackCOMRAM:
   380                           	opt stack 0
   381  000001                     ?___lwdiv:
   382                           	opt stack 0
   383  000001                     ?___lwmod:
   384                           	opt stack 0
   385  000001                     Delay@Cnt1:
   386                           	opt stack 0
   387  000001                     delay_ms@tempodeatraso:
   388                           	opt stack 0
   389  000001                     ___lwdiv@dividend:
   390                           	opt stack 0
   391  000001                     ___lwmod@dividend:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x0
   395  000001                     	ds	1
   396  000002                     Delay@Cnt2:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x1
   400  000002                     	ds	1
   401  000003                     ??_delay_ms:
   402  000003                     EscreveComandoLCD@cmd:
   403                           	opt stack 0
   404  000003                     EnderecoCursor@endereco:
   405                           	opt stack 0
   406  000003                     EscreveCaractereLCD@data:
   407                           	opt stack 0
   408  000003                     ___lwdiv@divisor:
   409                           	opt stack 0
   410  000003                     ___lwmod@divisor:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x2
   414  000003                     	ds	1
   415  000004                     ??_ConfiguraLCD:
   416  000004                     PosicaoCursorLCD@coluna:
   417                           	opt stack 0
   418  000004                     EscreveFraseRamLCD@buffer:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x3
   422  000004                     	ds	1
   423  000005                     PosicaoCursorLCD@linha:
   424                           	opt stack 0
   425  000005                     ___lwmod@counter:
   426                           	opt stack 0
   427  000005                     ___lwdiv@quotient:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x4
   431  000005                     	ds	1
   432  000006                     PosicaoCursorLCD@EnderecoLCD:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x5
   436  000006                     	ds	1
   437  000007                     ___lwdiv@counter:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x6
   441  000007                     	ds	1
   442  000008                     utoa@buf:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x7
   446  000008                     	ds	2
   447  00000A                     utoa@val:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x9
   451  00000A                     	ds	2
   452  00000C                     utoa@base:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0xB
   456  00000C                     	ds	2
   457  00000E                     utoa@v:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0xD
   461  00000E                     	ds	2
   462  000010                     utoa@c:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0xF
   466  000010                     	ds	1
   467  000011                     itoa@buf:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x10
   471  000011                     	ds	2
   472  000013                     itoa@val:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x12
   476  000013                     	ds	2
   477  000015                     itoa@base:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x14
   481  000015                     	ds	2
   482  000017                     itoa@cp:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x16
   486  000017                     	ds	2
   487  000019                     EscreveInteiroLCD@valor:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x18
   491  000019                     	ds	2
   492  00001B                     EscreveInteiroLCD@texto:
   493                           	opt stack 0
   494                           
   495                           ; 7 bytes @ 0x1A
   496  00001B                     	ds	7
   497  000022                     ??_main:
   498                           
   499                           ; 1 bytes @ 0x21
   500  000022                     	ds	2
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           postdec1	equ	0xFE5
   508                           fsr1l	equ	0xFE1
   509                           
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 48 in file "Entrada_Analogica.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  Texto_5        17   85[BANK0 ] const unsigned char [17]
   520 ;;  Texto_4        17   68[BANK0 ] const unsigned char [17]
   521 ;;  Texto_3        17   51[BANK0 ] const unsigned char [17]
   522 ;;  Texto_2        17   34[BANK0 ] const unsigned char [17]
   523 ;;  Texto_1        17   17[BANK0 ] const unsigned char [17]
   524 ;;  Texto_0        17    0[BANK0 ] const unsigned char [17]
   525 ;;  valorAN0        2  102[BANK0 ] unsigned int 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   535 ;;      Params:         0       0       0       0       0       0       0       0       0
   536 ;;      Locals:         0     104       0       0       0       0       0       0       0
   537 ;;      Temps:          2       0       0       0       0       0       0       0       0
   538 ;;      Totals:         2     104       0       0       0       0       0       0       0
   539 ;;Total ram usage:      106 bytes
   540 ;; Hardware stack levels required when called:    4
   541 ;; This function calls:
   542 ;;		_ConfiguraLCD
   543 ;;		_EscreveComandoLCD
   544 ;;		_EscreveFraseRamLCD
   545 ;;		_EscreveInteiroLCD
   546 ;;		_PosicaoCursorLCD
   547 ;;		_delay_ms
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text0
   554  00089C                     __ptext0:
   555                           	opt stack 0
   556  00089C                     _main:
   557                           	opt stack 27
   558                           
   559                           ;Entrada_Analogica.c: 50: const unsigned char Texto_0[]="FATEC STO. ANDRE";
   560                           
   561                           ;incstack = 0
   562  00089C  0E7E               	movlw	low main@F3995
   563  00089E  6EF6               	movwf	tblptrl,c
   564  0008A0                     	if	1	;There is more than 1 active tblptr byte
   565  0008A0  0E08               	movlw	high main@F3995
   566  0008A2  6EF7               	movwf	tblptrh,c
   567  0008A4                     	endif
   568  0008A4                     	if	0	;There are less than 3 active tblptr bytes
   569  0008A4                     	endif
   570  0008A4  EE20  F060         	lfsr	2,main@Texto_0
   571  0008A8  0E10               	movlw	16
   572  0008AA                     u1020:
   573  0008AA  0009               	tblrd		*+
   574  0008AC  CFF5 FFDE          	movff	tablat,postinc2
   575  0008B0  06E8               	decf	wreg,f,c
   576  0008B2  E2FB               	bc	u1020
   577                           
   578                           ;Entrada_Analogica.c: 51: const unsigned char Texto_1[]="ENT. ANALOGICA  ";
   579  0008B4  0E6D               	movlw	low main@F3997
   580  0008B6  6EF6               	movwf	tblptrl,c
   581  0008B8                     	if	1	;There is more than 1 active tblptr byte
   582  0008B8  0E08               	movlw	high main@F3997
   583  0008BA  6EF7               	movwf	tblptrh,c
   584  0008BC                     	endif
   585  0008BC                     	if	0	;There are less than 3 active tblptr bytes
   586  0008BC                     	endif
   587  0008BC  EE20  F071         	lfsr	2,main@Texto_1
   588  0008C0  0E10               	movlw	16
   589  0008C2                     u1030:
   590  0008C2  0009               	tblrd		*+
   591  0008C4  CFF5 FFDE          	movff	tablat,postinc2
   592  0008C8  06E8               	decf	wreg,f,c
   593  0008CA  E2FB               	bc	u1030
   594                           
   595                           ;Entrada_Analogica.c: 52: const unsigned char Texto_2[]="ADRESH =        ";
   596  0008CC  0E5C               	movlw	low main@F3999
   597  0008CE  6EF6               	movwf	tblptrl,c
   598  0008D0                     	if	1	;There is more than 1 active tblptr byte
   599  0008D0  0E08               	movlw	high main@F3999
   600  0008D2  6EF7               	movwf	tblptrh,c
   601  0008D4                     	endif
   602  0008D4                     	if	0	;There are less than 3 active tblptr bytes
   603  0008D4                     	endif
   604  0008D4  EE20  F082         	lfsr	2,main@Texto_2
   605  0008D8  0E10               	movlw	16
   606  0008DA                     u1040:
   607  0008DA  0009               	tblrd		*+
   608  0008DC  CFF5 FFDE          	movff	tablat,postinc2
   609  0008E0  06E8               	decf	wreg,f,c
   610  0008E2  E2FB               	bc	u1040
   611                           
   612                           ;Entrada_Analogica.c: 53: const unsigned char Texto_3[]="ADRESL =        ";
   613  0008E4  0E4B               	movlw	low main@F4001
   614  0008E6  6EF6               	movwf	tblptrl,c
   615  0008E8                     	if	1	;There is more than 1 active tblptr byte
   616  0008E8  0E08               	movlw	high main@F4001
   617  0008EA  6EF7               	movwf	tblptrh,c
   618  0008EC                     	endif
   619  0008EC                     	if	0	;There are less than 3 active tblptr bytes
   620  0008EC                     	endif
   621  0008EC  EE20  F093         	lfsr	2,main@Texto_3
   622  0008F0  0E10               	movlw	16
   623  0008F2                     u1050:
   624  0008F2  0009               	tblrd		*+
   625  0008F4  CFF5 FFDE          	movff	tablat,postinc2
   626  0008F8  06E8               	decf	wreg,f,c
   627  0008FA  E2FB               	bc	u1050
   628                           
   629                           ;Entrada_Analogica.c: 54: const unsigned char Texto_4[]="                ";
   630  0008FC  0E3A               	movlw	low main@F4003
   631  0008FE  6EF6               	movwf	tblptrl,c
   632  000900                     	if	1	;There is more than 1 active tblptr byte
   633  000900  0E08               	movlw	high main@F4003
   634  000902  6EF7               	movwf	tblptrh,c
   635  000904                     	endif
   636  000904                     	if	0	;There are less than 3 active tblptr bytes
   637  000904                     	endif
   638  000904  EE20  F0A4         	lfsr	2,main@Texto_4
   639  000908  0E10               	movlw	16
   640  00090A                     u1060:
   641  00090A  0009               	tblrd		*+
   642  00090C  CFF5 FFDE          	movff	tablat,postinc2
   643  000910  06E8               	decf	wreg,f,c
   644  000912  E2FB               	bc	u1060
   645                           
   646                           ;Entrada_Analogica.c: 55: const unsigned char Texto_5[]="AN0 =           ";
   647  000914  0E29               	movlw	low main@F4005
   648  000916  6EF6               	movwf	tblptrl,c
   649  000918                     	if	1	;There is more than 1 active tblptr byte
   650  000918  0E08               	movlw	high main@F4005
   651  00091A  6EF7               	movwf	tblptrh,c
   652  00091C                     	endif
   653  00091C                     	if	0	;There are less than 3 active tblptr bytes
   654  00091C                     	endif
   655  00091C  EE20  F0B5         	lfsr	2,main@Texto_5
   656  000920  0E10               	movlw	16
   657  000922                     u1070:
   658  000922  0009               	tblrd		*+
   659  000924  CFF5 FFDE          	movff	tablat,postinc2
   660  000928  06E8               	decf	wreg,f,c
   661  00092A  E2FB               	bc	u1070
   662                           
   663                           ;Entrada_Analogica.c: 57: unsigned int valorAN0 = 0;
   664  00092C  0E00               	movlw	0
   665  00092E  0100               	movlb	0	; () banked
   666  000930  6FC7               	movwf	(main@valorAN0+1)& (0+255),b
   667  000932  0E00               	movlw	0
   668  000934  6FC6               	movwf	main@valorAN0& (0+255),b
   669                           
   670                           ; BSR set to: 0
   671                           ;Entrada_Analogica.c: 59: ADCON1 = 0b00001110;
   672  000936  0E0E               	movlw	14
   673  000938  6EC1               	movwf	4033,c	;volatile
   674                           
   675                           ; BSR set to: 0
   676                           ;Entrada_Analogica.c: 60: ADCON0 = 0b00000001;
   677  00093A  0E01               	movlw	1
   678  00093C  6EC2               	movwf	4034,c	;volatile
   679                           
   680                           ; BSR set to: 0
   681                           ;Entrada_Analogica.c: 61: ADCON2 = 0b10001110;
   682  00093E  0E8E               	movlw	142
   683  000940  6EC0               	movwf	4032,c	;volatile
   684                           
   685                           ; BSR set to: 0
   686                           ;Entrada_Analogica.c: 66: ConfiguraLCD();
   687  000942  EC56  F005         	call	_ConfiguraLCD	;wreg free
   688                           
   689                           ;Entrada_Analogica.c: 67: EscreveComandoLCD(0b00001100);
   690  000946  0E0C               	movlw	12
   691  000948  ECA5  F005         	call	_EscreveComandoLCD
   692                           
   693                           ;Entrada_Analogica.c: 68: EscreveFraseRamLCD(Texto_0);
   694  00094C  0E60               	movlw	low main@Texto_0
   695  00094E  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   696  000950  0E00               	movlw	high main@Texto_0
   697  000952  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   698  000954  EC2E  F007         	call	_EscreveFraseRamLCD	;wreg free
   699                           
   700                           ;Entrada_Analogica.c: 69: PosicaoCursorLCD(2,1);
   701  000958  0E01               	movlw	1
   702  00095A  6E04               	movwf	PosicaoCursorLCD@coluna,c
   703  00095C  0E02               	movlw	2
   704  00095E  EC59  F006         	call	_PosicaoCursorLCD
   705                           
   706                           ;Entrada_Analogica.c: 70: EscreveFraseRamLCD(Texto_1);
   707  000962  0E71               	movlw	low main@Texto_1
   708  000964  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   709  000966  0E00               	movlw	high main@Texto_1
   710  000968  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   711  00096A  EC2E  F007         	call	_EscreveFraseRamLCD	;wreg free
   712                           
   713                           ;Entrada_Analogica.c: 72: delay_ms(5000);
   714  00096E  0E13               	movlw	19
   715  000970  6E02               	movwf	delay_ms@tempodeatraso+1,c
   716  000972  0E88               	movlw	136
   717  000974  6E01               	movwf	delay_ms@tempodeatraso,c
   718  000976  EC52  F007         	call	_delay_ms	;wreg free
   719                           
   720                           ;Entrada_Analogica.c: 74: PosicaoCursorLCD(1,1);
   721  00097A  0E01               	movlw	1
   722  00097C  6E04               	movwf	PosicaoCursorLCD@coluna,c
   723  00097E  0E01               	movlw	1
   724  000980  EC59  F006         	call	_PosicaoCursorLCD
   725                           
   726                           ;Entrada_Analogica.c: 75: EscreveFraseRamLCD(Texto_2);
   727  000984  0E82               	movlw	low main@Texto_2
   728  000986  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   729  000988  0E00               	movlw	high main@Texto_2
   730  00098A  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   731  00098C  EC2E  F007         	call	_EscreveFraseRamLCD	;wreg free
   732                           
   733                           ;Entrada_Analogica.c: 76: PosicaoCursorLCD(2,1);
   734  000990  0E01               	movlw	1
   735  000992  6E04               	movwf	PosicaoCursorLCD@coluna,c
   736  000994  0E02               	movlw	2
   737  000996  EC59  F006         	call	_PosicaoCursorLCD
   738                           
   739                           ;Entrada_Analogica.c: 77: EscreveFraseRamLCD(Texto_3);
   740  00099A  0E93               	movlw	low main@Texto_3
   741  00099C  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   742  00099E  0E00               	movlw	high main@Texto_3
   743  0009A0  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   744  0009A2  EC2E  F007         	call	_EscreveFraseRamLCD	;wreg free
   745  0009A6                     l1697:
   746                           
   747                           ;Entrada_Analogica.c: 82: {
   748                           ;Entrada_Analogica.c: 83: ADCON0 = 0b00000011;
   749  0009A6  0E03               	movlw	3
   750  0009A8  6EC2               	movwf	4034,c	;volatile
   751  0009AA                     l177:
   752  0009AA  B2C2               	btfsc	4034,1,c	;volatile
   753  0009AC  D7FE               	goto	l177
   754                           
   755                           ;Entrada_Analogica.c: 86: }
   756                           ;Entrada_Analogica.c: 94: valorAN0 = (ADRESH << 8) + ADRESL;
   757  0009AE  50C4               	movf	4036,w,c	;volatile
   758  0009B0  6E23               	movwf	(??_main+1)& (0+255),c
   759  0009B2  6A22               	clrf	??_main& (0+255),c
   760  0009B4  50C3               	movf	4035,w,c	;volatile
   761  0009B6  2422               	addwf	??_main,w,c
   762  0009B8  0100               	movlb	0	; () banked
   763  0009BA  6FC6               	movwf	main@valorAN0& (0+255),b
   764  0009BC  0E00               	movlw	0
   765  0009BE  2023               	addwfc	??_main+1,w,c
   766  0009C0  0100               	movlb	0	; () banked
   767  0009C2  6FC7               	movwf	(main@valorAN0+1)& (0+255),b
   768                           
   769                           ; BSR set to: 0
   770                           ;Entrada_Analogica.c: 95: PosicaoCursorLCD(1,1);
   771  0009C4  0E01               	movlw	1
   772  0009C6  6E04               	movwf	PosicaoCursorLCD@coluna,c
   773  0009C8  0E01               	movlw	1
   774  0009CA  EC59  F006         	call	_PosicaoCursorLCD
   775                           
   776                           ;Entrada_Analogica.c: 96: EscreveFraseRamLCD(Texto_4);
   777  0009CE  0EA4               	movlw	low main@Texto_4
   778  0009D0  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   779  0009D2  0E00               	movlw	high main@Texto_4
   780  0009D4  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   781  0009D6  EC2E  F007         	call	_EscreveFraseRamLCD	;wreg free
   782                           
   783                           ;Entrada_Analogica.c: 97: PosicaoCursorLCD(2,1);
   784  0009DA  0E01               	movlw	1
   785  0009DC  6E04               	movwf	PosicaoCursorLCD@coluna,c
   786  0009DE  0E02               	movlw	2
   787  0009E0  EC59  F006         	call	_PosicaoCursorLCD
   788                           
   789                           ;Entrada_Analogica.c: 98: EscreveFraseRamLCD(Texto_5);
   790  0009E4  0EB5               	movlw	low main@Texto_5
   791  0009E6  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   792  0009E8  0E00               	movlw	high main@Texto_5
   793  0009EA  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   794  0009EC  EC2E  F007         	call	_EscreveFraseRamLCD	;wreg free
   795                           
   796                           ;Entrada_Analogica.c: 99: PosicaoCursorLCD(2,7);
   797  0009F0  0E07               	movlw	7
   798  0009F2  6E04               	movwf	PosicaoCursorLCD@coluna,c
   799  0009F4  0E02               	movlw	2
   800  0009F6  EC59  F006         	call	_PosicaoCursorLCD
   801                           
   802                           ;Entrada_Analogica.c: 100: EscreveInteiroLCD(valorAN0);
   803  0009FA  C0C6  F019         	movff	main@valorAN0,EscreveInteiroLCD@valor
   804  0009FE  C0C7  F01A         	movff	main@valorAN0+1,EscreveInteiroLCD@valor+1
   805  000A02  ECF5  F006         	call	_EscreveInteiroLCD	;wreg free
   806  000A06  D7CF               	goto	l1697
   807  000A08                     __end_of_main:
   808                           	opt stack 0
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           postinc0	equ	0xFEE
   814                           wreg	equ	0xFE8
   815                           postdec1	equ	0xFE5
   816                           fsr1l	equ	0xFE1
   817                           postinc2	equ	0xFDE
   818                           
   819 ;; *************** function _delay_ms *****************
   820 ;; Defined at:
   821 ;;		line 114 in file "Entrada_Analogica.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  tempodeatras    2    0[COMRAM] unsigned int 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   835 ;;      Params:         2       0       0       0       0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0       0       0       0       0
   837 ;;      Temps:          1       0       0       0       0       0       0       0       0
   838 ;;      Totals:         3       0       0       0       0       0       0       0       0
   839 ;;Total ram usage:        3 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text1
   849  000EA4                     __ptext1:
   850                           	opt stack 0
   851  000EA4                     _delay_ms:
   852                           	opt stack 30
   853                           
   854                           ;Entrada_Analogica.c: 116: while(--tempodeatraso){
   855                           
   856                           ;incstack = 0
   857  000EA4  D008               	goto	l1603
   858  000EA6                     l1601:
   859                           
   860                           ;Entrada_Analogica.c: 117: _delay((unsigned long)((1)*(48000000/4000.0)));
   861  000EA6  0E10               	movlw	16
   862  000EA8  6E03               	movwf	??_delay_ms& (0+255),c
   863  000EAA  0E94               	movlw	148
   864  000EAC                     u1097:
   865  000EAC  2EE8               	decfsz	wreg,f,c
   866  000EAE  D7FE               	bra	u1097
   867  000EB0  2E03               	decfsz	??_delay_ms& (0+255),f,c
   868  000EB2  D7FC               	bra	u1097
   869  000EB4  D000               	nop2	
   870  000EB6                     l1603:
   871  000EB6  0601               	decf	delay_ms@tempodeatraso,f,c
   872  000EB8  A0D8               	btfss	status,0,c
   873  000EBA  0602               	decf	delay_ms@tempodeatraso+1,f,c
   874  000EBC  5001               	movf	delay_ms@tempodeatraso,w,c
   875  000EBE  1002               	iorwf	delay_ms@tempodeatraso+1,w,c
   876  000EC0  B4D8               	btfsc	status,2,c
   877  000EC2  0012               	return	
   878  000EC4  D7F0               	goto	l1601
   879  000EC6                     __end_of_delay_ms:
   880                           	opt stack 0
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           postinc0	equ	0xFEE
   886                           wreg	equ	0xFE8
   887                           postdec1	equ	0xFE5
   888                           fsr1l	equ	0xFE1
   889                           postinc2	equ	0xFDE
   890                           status	equ	0xFD8
   891                           
   892 ;; *************** function _PosicaoCursorLCD *****************
   893 ;; Defined at:
   894 ;;		line 280 in file "displayLCD.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;  linha           1    wreg     unsigned char 
   897 ;;  coluna          1    3[COMRAM] unsigned char 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  linha           1    4[COMRAM] unsigned char 
   900 ;;  EnderecoLCD     1    5[COMRAM] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   910 ;;      Params:         1       0       0       0       0       0       0       0       0
   911 ;;      Locals:         2       0       0       0       0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0
   913 ;;      Totals:         3       0       0       0       0       0       0       0       0
   914 ;;Total ram usage:        3 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    2
   917 ;; This function calls:
   918 ;;		_EnderecoCursor
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text2
   925  000CB2                     __ptext2:
   926                           	opt stack 0
   927  000CB2                     _PosicaoCursorLCD:
   928                           	opt stack 28
   929                           
   930                           ;incstack = 0
   931                           ;PosicaoCursorLCD@linha stored from wreg
   932  000CB2  6E05               	movwf	PosicaoCursorLCD@linha,c
   933                           
   934                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
   935  000CB4  0E00               	movlw	0
   936  000CB6  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   937                           
   938                           ;displayLCD.c: 292: if (coluna >= 0)
   939  000CB8  0604               	decf	PosicaoCursorLCD@coluna,f,c
   940                           
   941                           ;displayLCD.c: 293: {
   942                           ;displayLCD.c: 296: switch (linha)
   943  000CBA  D01E               	goto	l1589
   944  000CBC                     l70:
   945                           
   946                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
   947  000CBC  C004  F006         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
   948                           
   949                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
   950  000CC0  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   951  000CC2  EC24  F006         	call	_EnderecoCursor
   952                           
   953                           ;displayLCD.c: 301: break;
   954  000CC6  0012               	return	
   955  000CC8                     l1573:
   956                           
   957                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
   958  000CC8  5004               	movf	PosicaoCursorLCD@coluna,w,c
   959  000CCA  0F40               	addlw	64
   960  000CCC  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   961                           
   962                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
   963  000CCE  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   964  000CD0  EC24  F006         	call	_EnderecoCursor
   965                           
   966                           ;displayLCD.c: 306: break;
   967  000CD4  0012               	return	
   968  000CD6                     l1577:
   969                           
   970                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
   971  000CD6  5004               	movf	PosicaoCursorLCD@coluna,w,c
   972  000CD8  0F14               	addlw	20
   973  000CDA  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   974                           
   975                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
   976  000CDC  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   977  000CDE  EC24  F006         	call	_EnderecoCursor
   978                           
   979                           ;displayLCD.c: 311: break;
   980  000CE2  0012               	return	
   981  000CE4                     l1581:
   982                           
   983                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
   984  000CE4  5004               	movf	PosicaoCursorLCD@coluna,w,c
   985  000CE6  0F54               	addlw	84
   986  000CE8  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   987                           
   988                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
   989  000CEA  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   990  000CEC  EC24  F006         	call	_EnderecoCursor
   991                           
   992                           ;displayLCD.c: 316: break;
   993  000CF0  0012               	return	
   994  000CF2                     l1585:
   995                           
   996                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
   997  000CF2  0E00               	movlw	0
   998  000CF4  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   999                           
  1000                           ;displayLCD.c: 321: }
  1001                           
  1002                           ;displayLCD.c: 320: break;
  1003  000CF6  0012               	return	
  1004  000CF8                     l1589:
  1005  000CF8  5005               	movf	PosicaoCursorLCD@linha,w,c
  1006                           
  1007                           ; Switch size 1, requested type "space"
  1008                           ; Number of cases is 4, Range of values is 1 to 4
  1009                           ; switch strategies available:
  1010                           ; Name         Instructions Cycles
  1011                           ; simple_byte           13     7 (average)
  1012                           ;	Chosen strategy is simple_byte
  1013  000CFA  0A01               	xorlw	1	; case 1
  1014  000CFC  B4D8               	btfsc	status,2,c
  1015  000CFE  D7DE               	goto	l70
  1016  000D00  0A03               	xorlw	3	; case 2
  1017  000D02  B4D8               	btfsc	status,2,c
  1018  000D04  D7E1               	goto	l1573
  1019  000D06  0A01               	xorlw	1	; case 3
  1020  000D08  B4D8               	btfsc	status,2,c
  1021  000D0A  D7E5               	goto	l1577
  1022  000D0C  0A07               	xorlw	7	; case 4
  1023  000D0E  B4D8               	btfsc	status,2,c
  1024  000D10  D7E9               	goto	l1581
  1025  000D12  D7EF               	goto	l1585
  1026  000D14                     __end_of_PosicaoCursorLCD:
  1027                           	opt stack 0
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           postdec1	equ	0xFE5
  1035                           fsr1l	equ	0xFE1
  1036                           postinc2	equ	0xFDE
  1037                           status	equ	0xFD8
  1038                           
  1039 ;; *************** function _EnderecoCursor *****************
  1040 ;; Defined at:
  1041 ;;		line 229 in file "displayLCD.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  endereco        1    wreg     unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  endereco        1    2[COMRAM] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1055 ;;      Params:         0       0       0       0       0       0       0       0       0
  1056 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1058 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1059 ;;Total ram usage:        1 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    1
  1062 ;; This function calls:
  1063 ;;		_Delay
  1064 ;; This function is called by:
  1065 ;;		_PosicaoCursorLCD
  1066 ;;		_CriaCaractereLCD
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text3
  1071  000C48                     __ptext3:
  1072                           	opt stack 0
  1073  000C48                     _EnderecoCursor:
  1074                           	opt stack 28
  1075                           
  1076                           ;incstack = 0
  1077                           ;EnderecoCursor@endereco stored from wreg
  1078  000C48  6E03               	movwf	EnderecoCursor@endereco,c
  1079                           
  1080                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
  1081  000C4A  9483               	bcf	3971,2,c	;volatile
  1082                           
  1083                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
  1084  000C4C  9283               	bcf	3971,1,c	;volatile
  1085                           
  1086                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
  1087  000C4E  9083               	bcf	3971,0,c	;volatile
  1088                           
  1089                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
  1090  000C50  8E83               	bsf	3971,7,c	;volatile
  1091                           
  1092                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1093  000C52  A803               	btfss	EnderecoCursor@endereco,4,c
  1094  000C54  D002               	goto	l51
  1095  000C56  8883               	bsf	3971,4,c	;volatile
  1096  000C58  D001               	goto	l1469
  1097  000C5A                     l51:
  1098                           
  1099                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
  1100  000C5A  9883               	bcf	3971,4,c	;volatile
  1101  000C5C                     l1469:
  1102                           
  1103                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1104  000C5C  AA03               	btfss	EnderecoCursor@endereco,5,c
  1105  000C5E  D002               	goto	l53
  1106  000C60  8A83               	bsf	3971,5,c	;volatile
  1107  000C62  D001               	goto	l1473
  1108  000C64                     l53:
  1109                           
  1110                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
  1111  000C64  9A83               	bcf	3971,5,c	;volatile
  1112  000C66                     l1473:
  1113                           
  1114                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1115  000C66  AC03               	btfss	EnderecoCursor@endereco,6,c
  1116  000C68  D002               	goto	l55
  1117  000C6A  8C83               	bsf	3971,6,c	;volatile
  1118  000C6C  D001               	goto	l56
  1119  000C6E                     l55:
  1120                           
  1121                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
  1122  000C6E  9C83               	bcf	3971,6,c	;volatile
  1123  000C70                     l56:
  1124                           
  1125                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
  1126  000C70  8083               	bsf	3971,0,c	;volatile
  1127                           
  1128                           ;displayLCD.c: 247: Delay();
  1129  000C72  EC40  F007         	call	_Delay	;wreg free
  1130                           
  1131                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
  1132  000C76  9083               	bcf	3971,0,c	;volatile
  1133                           
  1134                           ;displayLCD.c: 249: Delay();
  1135  000C78  EC40  F007         	call	_Delay	;wreg free
  1136                           
  1137                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1138  000C7C  A003               	btfss	EnderecoCursor@endereco,0,c
  1139  000C7E  D002               	goto	l57
  1140  000C80  8883               	bsf	3971,4,c	;volatile
  1141  000C82  D001               	goto	l58
  1142  000C84                     l57:
  1143                           
  1144                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
  1145  000C84  9883               	bcf	3971,4,c	;volatile
  1146  000C86                     l58:
  1147                           
  1148                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1149  000C86  A203               	btfss	EnderecoCursor@endereco,1,c
  1150  000C88  D002               	goto	l59
  1151  000C8A  8A83               	bsf	3971,5,c	;volatile
  1152  000C8C  D001               	goto	l60
  1153  000C8E                     l59:
  1154                           
  1155                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
  1156  000C8E  9A83               	bcf	3971,5,c	;volatile
  1157  000C90                     l60:
  1158                           
  1159                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1160  000C90  A403               	btfss	EnderecoCursor@endereco,2,c
  1161  000C92  D002               	goto	l61
  1162  000C94  8C83               	bsf	3971,6,c	;volatile
  1163  000C96  D001               	goto	l62
  1164  000C98                     l61:
  1165                           
  1166                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
  1167  000C98  9C83               	bcf	3971,6,c	;volatile
  1168  000C9A                     l62:
  1169                           
  1170                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1171  000C9A  A603               	btfss	EnderecoCursor@endereco,3,c
  1172  000C9C  D002               	goto	l63
  1173  000C9E  8E83               	bsf	3971,7,c	;volatile
  1174  000CA0  D001               	goto	l64
  1175  000CA2                     l63:
  1176                           
  1177                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
  1178  000CA2  9E83               	bcf	3971,7,c	;volatile
  1179  000CA4                     l64:
  1180                           
  1181                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
  1182  000CA4  8083               	bsf	3971,0,c	;volatile
  1183                           
  1184                           ;displayLCD.c: 263: Delay();
  1185  000CA6  EC40  F007         	call	_Delay	;wreg free
  1186                           
  1187                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
  1188  000CAA  9083               	bcf	3971,0,c	;volatile
  1189                           
  1190                           ;displayLCD.c: 265: Delay();
  1191  000CAC  EC40  F007         	call	_Delay	;wreg free
  1192  000CB0  0012               	return		;funcret
  1193  000CB2                     __end_of_EnderecoCursor:
  1194                           	opt stack 0
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           postinc0	equ	0xFEE
  1200                           wreg	equ	0xFE8
  1201                           postdec1	equ	0xFE5
  1202                           fsr1l	equ	0xFE1
  1203                           postinc2	equ	0xFDE
  1204                           status	equ	0xFD8
  1205                           
  1206 ;; *************** function _EscreveInteiroLCD *****************
  1207 ;; Defined at:
  1208 ;;		line 391 in file "displayLCD.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  valor           2   24[COMRAM] int 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  texto           7   26[COMRAM] unsigned char [7]
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1222 ;;      Params:         2       0       0       0       0       0       0       0       0
  1223 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1225 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1226 ;;Total ram usage:        9 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    3
  1229 ;; This function calls:
  1230 ;;		_EscreveFraseRamLCD
  1231 ;;		_itoa
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text4
  1238  000DEA                     __ptext4:
  1239                           	opt stack 0
  1240  000DEA                     _EscreveInteiroLCD:
  1241                           	opt stack 27
  1242                           
  1243                           ;displayLCD.c: 393: char texto[7] = "000000";
  1244                           
  1245                           ;incstack = 0
  1246  000DEA  EE20  F035         	lfsr	2,EscreveInteiroLCD@F4004
  1247  000DEE  EE10  F01B         	lfsr	1,EscreveInteiroLCD@texto
  1248  000DF2  0E06               	movlw	6
  1249  000DF4                     u961:
  1250  000DF4  CFDB FFE3          	movff	plusw2,plusw1
  1251  000DF8  06E8               	decf	wreg,f,c
  1252  000DFA  E2FC               	bc	u961
  1253                           
  1254                           ;displayLCD.c: 394: itoa(texto,valor, 10);
  1255  000DFC  0E1B               	movlw	low EscreveInteiroLCD@texto
  1256  000DFE  6E11               	movwf	itoa@buf,c
  1257  000E00  0E00               	movlw	high EscreveInteiroLCD@texto
  1258  000E02  6E12               	movwf	itoa@buf+1,c
  1259  000E04  C019  F013         	movff	EscreveInteiroLCD@valor,itoa@val
  1260  000E08  C01A  F014         	movff	EscreveInteiroLCD@valor+1,itoa@val+1
  1261  000E0C  0E00               	movlw	0
  1262  000E0E  6E16               	movwf	itoa@base+1,c
  1263  000E10  0E0A               	movlw	10
  1264  000E12  6E15               	movwf	itoa@base,c
  1265  000E14  ECB3  F006         	call	_itoa	;wreg free
  1266                           
  1267                           ;displayLCD.c: 395: EscreveFraseRamLCD(texto);
  1268  000E18  0E1B               	movlw	low EscreveInteiroLCD@texto
  1269  000E1A  6E04               	movwf	EscreveFraseRamLCD@buffer,c
  1270  000E1C  0E00               	movlw	high EscreveInteiroLCD@texto
  1271  000E1E  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
  1272  000E20  EC2E  F007         	call	_EscreveFraseRamLCD	;wreg free
  1273  000E24  0012               	return		;funcret
  1274  000E26                     __end_of_EscreveInteiroLCD:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           tblptrh	equ	0xFF7
  1278                           tblptrl	equ	0xFF6
  1279                           tablat	equ	0xFF5
  1280                           postinc0	equ	0xFEE
  1281                           wreg	equ	0xFE8
  1282                           postdec1	equ	0xFE5
  1283                           plusw1	equ	0xFE3
  1284                           fsr1l	equ	0xFE1
  1285                           postinc2	equ	0xFDE
  1286                           plusw2	equ	0xFDB
  1287                           status	equ	0xFD8
  1288                           
  1289 ;; *************** function _itoa *****************
  1290 ;; Defined at:
  1291 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  buf             2   16[COMRAM] PTR unsigned char 
  1294 ;;		 -> EscreveInteiroLCD@texto(7), 
  1295 ;;  val             2   18[COMRAM] int 
  1296 ;;  base            2   20[COMRAM] int 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  cp              2   22[COMRAM] PTR unsigned char 
  1299 ;;		 -> EscreveInteiroLCD@texto(7), 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  2   16[COMRAM] PTR unsigned char 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1309 ;;      Params:         6       0       0       0       0       0       0       0       0
  1310 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1312 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1313 ;;Total ram usage:        8 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    2
  1316 ;; This function calls:
  1317 ;;		_utoa
  1318 ;; This function is called by:
  1319 ;;		_EscreveInteiroLCD
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text5
  1324  000D66                     __ptext5:
  1325                           	opt stack 0
  1326  000D66                     _itoa:
  1327                           	opt stack 27
  1328                           
  1329                           ;incstack = 0
  1330  000D66  C011  F017         	movff	itoa@buf,itoa@cp
  1331  000D6A  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  1332  000D6E  AE14               	btfss	itoa@val+1,7,c
  1333  000D70  D00C               	goto	l1503
  1334  000D72  C011  FFD9         	movff	itoa@buf,fsr2l
  1335  000D76  C012  FFDA         	movff	itoa@buf+1,fsr2h
  1336  000D7A  0E2D               	movlw	45
  1337  000D7C  6EDF               	movwf	indf2,c
  1338  000D7E  4A11               	infsnz	itoa@buf,f,c
  1339  000D80  2A12               	incf	itoa@buf+1,f,c
  1340  000D82  6C13               	negf	itoa@val,c
  1341  000D84  1E14               	comf	itoa@val+1,f,c
  1342  000D86  B0D8               	btfsc	status,0,c
  1343  000D88  2A14               	incf	itoa@val+1,f,c
  1344  000D8A                     l1503:
  1345  000D8A  C011  F008         	movff	itoa@buf,utoa@buf
  1346  000D8E  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  1347  000D92  C013  F00A         	movff	itoa@val,utoa@val
  1348  000D96  C014  F00B         	movff	itoa@val+1,utoa@val+1
  1349  000D9A  C015  F00C         	movff	itoa@base,utoa@base
  1350  000D9E  C016  F00D         	movff	itoa@base+1,utoa@base+1
  1351  000DA2  EC04  F005         	call	_utoa	;wreg free
  1352  000DA6  0012               	return	
  1353  000DA8                     __end_of_itoa:
  1354                           	opt stack 0
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           postdec1	equ	0xFE5
  1362                           plusw1	equ	0xFE3
  1363                           fsr1l	equ	0xFE1
  1364                           indf2	equ	0xFDF
  1365                           postinc2	equ	0xFDE
  1366                           plusw2	equ	0xFDB
  1367                           fsr2h	equ	0xFDA
  1368                           fsr2l	equ	0xFD9
  1369                           status	equ	0xFD8
  1370                           
  1371 ;; *************** function _utoa *****************
  1372 ;; Defined at:
  1373 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  buf             2    7[COMRAM] PTR unsigned char 
  1376 ;;		 -> EscreveInteiroLCD@texto(7), 
  1377 ;;  val             2    9[COMRAM] unsigned int 
  1378 ;;  base            2   11[COMRAM] int 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  v               2   13[COMRAM] unsigned int 
  1381 ;;  c               1   15[COMRAM] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  2    7[COMRAM] PTR unsigned char 
  1384 ;; Registers used:
  1385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1391 ;;      Params:         6       0       0       0       0       0       0       0       0
  1392 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1394 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1395 ;;Total ram usage:        9 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    1
  1398 ;; This function calls:
  1399 ;;		___lwdiv
  1400 ;;		___lwmod
  1401 ;; This function is called by:
  1402 ;;		_itoa
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text6
  1407  000A08                     __ptext6:
  1408                           	opt stack 0
  1409  000A08                     _utoa:
  1410                           	opt stack 27
  1411                           
  1412                           ;incstack = 0
  1413  000A08  C00A  F00E         	movff	utoa@val,utoa@v
  1414  000A0C  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  1415  000A10                     l1391:
  1416  000A10  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  1417  000A14  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  1418  000A18  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1419  000A1C  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1420  000A20  EC8A  F006         	call	___lwdiv	;wreg free
  1421  000A24  C001  F00E         	movff	?___lwdiv,utoa@v
  1422  000A28  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  1423  000A2C  4A08               	infsnz	utoa@buf,f,c
  1424  000A2E  2A09               	incf	utoa@buf+1,f,c
  1425  000A30  500E               	movf	utoa@v,w,c
  1426  000A32  100F               	iorwf	utoa@v+1,w,c
  1427  000A34  A4D8               	btfss	status,2,c
  1428  000A36  D7EC               	goto	l1391
  1429  000A38  C008  FFD9         	movff	utoa@buf,fsr2l
  1430  000A3C  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1431  000A40  0E00               	movlw	0
  1432  000A42  6EDF               	movwf	indf2,c
  1433  000A44  0608               	decf	utoa@buf,f,c
  1434  000A46  A0D8               	btfss	status,0,c
  1435  000A48  0609               	decf	utoa@buf+1,f,c
  1436  000A4A                     l1401:
  1437  000A4A  C00A  F001         	movff	utoa@val,___lwmod@dividend
  1438  000A4E  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  1439  000A52  C00C  F003         	movff	utoa@base,___lwmod@divisor
  1440  000A56  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  1441  000A5A  ECD4  F006         	call	___lwmod	;wreg free
  1442  000A5E  5001               	movf	?___lwmod,w,c
  1443  000A60  6E10               	movwf	utoa@c,c
  1444  000A62  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  1445  000A66  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  1446  000A6A  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1447  000A6E  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1448  000A72  EC8A  F006         	call	___lwdiv	;wreg free
  1449  000A76  C001  F00A         	movff	?___lwdiv,utoa@val
  1450  000A7A  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  1451  000A7E  0E09               	movlw	9
  1452  000A80  6410               	cpfsgt	utoa@c,c
  1453  000A82  D002               	goto	l587
  1454  000A84  0E07               	movlw	7
  1455  000A86  2610               	addwf	utoa@c,f,c
  1456  000A88                     l587:
  1457  000A88  0E30               	movlw	48
  1458  000A8A  2610               	addwf	utoa@c,f,c
  1459  000A8C  C008  FFD9         	movff	utoa@buf,fsr2l
  1460  000A90  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1461  000A94  C010  FFDF         	movff	utoa@c,indf2
  1462  000A98  0608               	decf	utoa@buf,f,c
  1463  000A9A  A0D8               	btfss	status,0,c
  1464  000A9C  0609               	decf	utoa@buf+1,f,c
  1465  000A9E  500A               	movf	utoa@val,w,c
  1466  000AA0  100B               	iorwf	utoa@val+1,w,c
  1467  000AA2  A4D8               	btfss	status,2,c
  1468  000AA4  D7D2               	goto	l1401
  1469                           
  1470                           ;	Return value of _utoa is never used
  1471  000AA6  4A08               	infsnz	utoa@buf,f,c
  1472  000AA8  2A09               	incf	utoa@buf+1,f,c
  1473  000AAA  0012               	return	
  1474  000AAC                     __end_of_utoa:
  1475                           	opt stack 0
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           postinc0	equ	0xFEE
  1481                           wreg	equ	0xFE8
  1482                           postdec1	equ	0xFE5
  1483                           plusw1	equ	0xFE3
  1484                           fsr1l	equ	0xFE1
  1485                           indf2	equ	0xFDF
  1486                           postinc2	equ	0xFDE
  1487                           plusw2	equ	0xFDB
  1488                           fsr2h	equ	0xFDA
  1489                           fsr2l	equ	0xFD9
  1490                           status	equ	0xFD8
  1491                           
  1492 ;; *************** function ___lwmod *****************
  1493 ;; Defined at:
  1494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  dividend        2    0[COMRAM] unsigned int 
  1497 ;;  divisor         2    2[COMRAM] unsigned int 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  counter         1    4[COMRAM] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  2    0[COMRAM] unsigned int 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1509 ;;      Params:         4       0       0       0       0       0       0       0       0
  1510 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1512 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1513 ;;Total ram usage:        5 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_utoa
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text7
  1523  000DA8                     __ptext7:
  1524                           	opt stack 0
  1525  000DA8                     ___lwmod:
  1526                           	opt stack 27
  1527                           
  1528                           ;incstack = 0
  1529  000DA8  5003               	movf	___lwmod@divisor,w,c
  1530  000DAA  1004               	iorwf	___lwmod@divisor+1,w,c
  1531  000DAC  B4D8               	btfsc	status,2,c
  1532  000DAE  D018               	goto	l676
  1533  000DB0  0E01               	movlw	1
  1534  000DB2  6E05               	movwf	___lwmod@counter,c
  1535  000DB4  D004               	goto	l1343
  1536  000DB6                     l1341:
  1537  000DB6  90D8               	bcf	status,0,c
  1538  000DB8  3603               	rlcf	___lwmod@divisor,f,c
  1539  000DBA  3604               	rlcf	___lwmod@divisor+1,f,c
  1540  000DBC  2A05               	incf	___lwmod@counter,f,c
  1541  000DBE                     l1343:
  1542  000DBE  AE04               	btfss	___lwmod@divisor+1,7,c
  1543  000DC0  D7FA               	goto	l1341
  1544  000DC2                     l1345:
  1545  000DC2  5003               	movf	___lwmod@divisor,w,c
  1546  000DC4  5C01               	subwf	___lwmod@dividend,w,c
  1547  000DC6  5004               	movf	___lwmod@divisor+1,w,c
  1548  000DC8  5802               	subwfb	___lwmod@dividend+1,w,c
  1549  000DCA  A0D8               	btfss	status,0,c
  1550  000DCC  D004               	goto	l1349
  1551  000DCE  5003               	movf	___lwmod@divisor,w,c
  1552  000DD0  5E01               	subwf	___lwmod@dividend,f,c
  1553  000DD2  5004               	movf	___lwmod@divisor+1,w,c
  1554  000DD4  5A02               	subwfb	___lwmod@dividend+1,f,c
  1555  000DD6                     l1349:
  1556  000DD6  90D8               	bcf	status,0,c
  1557  000DD8  3204               	rrcf	___lwmod@divisor+1,f,c
  1558  000DDA  3203               	rrcf	___lwmod@divisor,f,c
  1559  000DDC  2E05               	decfsz	___lwmod@counter,f,c
  1560  000DDE  D7F1               	goto	l1345
  1561  000DE0                     l676:
  1562  000DE0  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1563  000DE4  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1564  000DE8  0012               	return		;funcret
  1565  000DEA                     __end_of___lwmod:
  1566                           	opt stack 0
  1567                           tblptru	equ	0xFF8
  1568                           tblptrh	equ	0xFF7
  1569                           tblptrl	equ	0xFF6
  1570                           tablat	equ	0xFF5
  1571                           postinc0	equ	0xFEE
  1572                           wreg	equ	0xFE8
  1573                           postdec1	equ	0xFE5
  1574                           plusw1	equ	0xFE3
  1575                           fsr1l	equ	0xFE1
  1576                           indf2	equ	0xFDF
  1577                           postinc2	equ	0xFDE
  1578                           plusw2	equ	0xFDB
  1579                           fsr2h	equ	0xFDA
  1580                           fsr2l	equ	0xFD9
  1581                           status	equ	0xFD8
  1582                           
  1583 ;; *************** function ___lwdiv *****************
  1584 ;; Defined at:
  1585 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  dividend        2    0[COMRAM] unsigned int 
  1588 ;;  divisor         2    2[COMRAM] unsigned int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  quotient        2    4[COMRAM] unsigned int 
  1591 ;;  counter         1    6[COMRAM] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  2    0[COMRAM] unsigned int 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1601 ;;      Params:         4       0       0       0       0       0       0       0       0
  1602 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1604 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1605 ;;Total ram usage:        7 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_utoa
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text8
  1615  000D14                     __ptext8:
  1616                           	opt stack 0
  1617  000D14                     ___lwdiv:
  1618                           	opt stack 27
  1619                           
  1620                           ;incstack = 0
  1621  000D14  0E00               	movlw	0
  1622  000D16  6E06               	movwf	___lwdiv@quotient+1,c
  1623  000D18  0E00               	movlw	0
  1624  000D1A  6E05               	movwf	___lwdiv@quotient,c
  1625  000D1C  5003               	movf	___lwdiv@divisor,w,c
  1626  000D1E  1004               	iorwf	___lwdiv@divisor+1,w,c
  1627  000D20  B4D8               	btfsc	status,2,c
  1628  000D22  D01C               	goto	l666
  1629  000D24  0E01               	movlw	1
  1630  000D26  6E07               	movwf	___lwdiv@counter,c
  1631  000D28  D004               	goto	l1323
  1632  000D2A                     l1321:
  1633  000D2A  90D8               	bcf	status,0,c
  1634  000D2C  3603               	rlcf	___lwdiv@divisor,f,c
  1635  000D2E  3604               	rlcf	___lwdiv@divisor+1,f,c
  1636  000D30  2A07               	incf	___lwdiv@counter,f,c
  1637  000D32                     l1323:
  1638  000D32  AE04               	btfss	___lwdiv@divisor+1,7,c
  1639  000D34  D7FA               	goto	l1321
  1640  000D36                     l1325:
  1641  000D36  90D8               	bcf	status,0,c
  1642  000D38  3605               	rlcf	___lwdiv@quotient,f,c
  1643  000D3A  3606               	rlcf	___lwdiv@quotient+1,f,c
  1644  000D3C  5003               	movf	___lwdiv@divisor,w,c
  1645  000D3E  5C01               	subwf	___lwdiv@dividend,w,c
  1646  000D40  5004               	movf	___lwdiv@divisor+1,w,c
  1647  000D42  5802               	subwfb	___lwdiv@dividend+1,w,c
  1648  000D44  A0D8               	btfss	status,0,c
  1649  000D46  D005               	goto	l1333
  1650  000D48  5003               	movf	___lwdiv@divisor,w,c
  1651  000D4A  5E01               	subwf	___lwdiv@dividend,f,c
  1652  000D4C  5004               	movf	___lwdiv@divisor+1,w,c
  1653  000D4E  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1654  000D50  8005               	bsf	___lwdiv@quotient,0,c
  1655  000D52                     l1333:
  1656  000D52  90D8               	bcf	status,0,c
  1657  000D54  3204               	rrcf	___lwdiv@divisor+1,f,c
  1658  000D56  3203               	rrcf	___lwdiv@divisor,f,c
  1659  000D58  2E07               	decfsz	___lwdiv@counter,f,c
  1660  000D5A  D7ED               	goto	l1325
  1661  000D5C                     l666:
  1662  000D5C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1663  000D60  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1664  000D64  0012               	return		;funcret
  1665  000D66                     __end_of___lwdiv:
  1666                           	opt stack 0
  1667                           tblptru	equ	0xFF8
  1668                           tblptrh	equ	0xFF7
  1669                           tblptrl	equ	0xFF6
  1670                           tablat	equ	0xFF5
  1671                           postinc0	equ	0xFEE
  1672                           wreg	equ	0xFE8
  1673                           postdec1	equ	0xFE5
  1674                           plusw1	equ	0xFE3
  1675                           fsr1l	equ	0xFE1
  1676                           indf2	equ	0xFDF
  1677                           postinc2	equ	0xFDE
  1678                           plusw2	equ	0xFDB
  1679                           fsr2h	equ	0xFDA
  1680                           fsr2l	equ	0xFD9
  1681                           status	equ	0xFD8
  1682                           
  1683 ;; *************** function _EscreveFraseRamLCD *****************
  1684 ;; Defined at:
  1685 ;;		line 438 in file "displayLCD.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  buffer          2    3[COMRAM] PTR unsigned char 
  1688 ;;		 -> main@Texto_5(17), main@Texto_4(17), main@Texto_3(17), main@Texto_2(17), 
  1689 ;;		 -> main@Texto_1(17), main@Texto_0(17), EscreveInteiroLCD@texto(7), 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1701 ;;      Params:         2       0       0       0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1704 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1705 ;;Total ram usage:        2 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    2
  1708 ;; This function calls:
  1709 ;;		_EscreveCaractereLCD
  1710 ;; This function is called by:
  1711 ;;		_EscreveInteiroLCD
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text9
  1717  000E5C                     __ptext9:
  1718                           	opt stack 0
  1719  000E5C                     _EscreveFraseRamLCD:
  1720                           	opt stack 27
  1721                           
  1722                           ;displayLCD.c: 440: while(*buffer)
  1723                           
  1724                           ;incstack = 0
  1725  000E5C  D009               	goto	l1513
  1726  000E5E                     l1509:
  1727                           
  1728                           ;displayLCD.c: 441: {
  1729                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
  1730  000E5E  C004  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1731  000E62  C005  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1732  000E66  50DF               	movf	indf2,w,c
  1733  000E68  ECEB  F005         	call	_EscreveCaractereLCD
  1734                           
  1735                           ;displayLCD.c: 443: buffer++;
  1736  000E6C  4A04               	infsnz	EscreveFraseRamLCD@buffer,f,c
  1737  000E6E  2A05               	incf	EscreveFraseRamLCD@buffer+1,f,c
  1738  000E70                     l1513:
  1739  000E70  C004  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1740  000E74  C005  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1741  000E78  50DF               	movf	indf2,w,c
  1742  000E7A  B4D8               	btfsc	status,2,c
  1743  000E7C  0012               	return	
  1744  000E7E  D7EF               	goto	l1509
  1745  000E80                     __end_of_EscreveFraseRamLCD:
  1746                           	opt stack 0
  1747                           tblptru	equ	0xFF8
  1748                           tblptrh	equ	0xFF7
  1749                           tblptrl	equ	0xFF6
  1750                           tablat	equ	0xFF5
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           postdec1	equ	0xFE5
  1754                           plusw1	equ	0xFE3
  1755                           fsr1l	equ	0xFE1
  1756                           indf2	equ	0xFDF
  1757                           postinc2	equ	0xFDE
  1758                           plusw2	equ	0xFDB
  1759                           fsr2h	equ	0xFDA
  1760                           fsr2l	equ	0xFD9
  1761                           status	equ	0xFD8
  1762                           
  1763 ;; *************** function _EscreveCaractereLCD *****************
  1764 ;; Defined at:
  1765 ;;		line 339 in file "displayLCD.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  data            1    wreg     unsigned char 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  data            1    2[COMRAM] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1779 ;;      Params:         0       0       0       0       0       0       0       0       0
  1780 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1782 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1783 ;;Total ram usage:        1 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    1
  1786 ;; This function calls:
  1787 ;;		_Delay
  1788 ;; This function is called by:
  1789 ;;		_EscreveFraseRamLCD
  1790 ;;		_EscreveFloatLCD
  1791 ;;		_EscreveFraseLCD
  1792 ;;		_CriaCaractereLCD
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text10
  1797  000BD6                     __ptext10:
  1798                           	opt stack 0
  1799  000BD6                     _EscreveCaractereLCD:
  1800                           	opt stack 27
  1801                           
  1802                           ;incstack = 0
  1803                           ;EscreveCaractereLCD@data stored from wreg
  1804  000BD6  6E03               	movwf	EscreveCaractereLCD@data,c
  1805                           
  1806                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
  1807  000BD8  9483               	bcf	3971,2,c	;volatile
  1808                           
  1809                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
  1810  000BDA  8283               	bsf	3971,1,c	;volatile
  1811                           
  1812                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
  1813  000BDC  9083               	bcf	3971,0,c	;volatile
  1814                           
  1815                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
  1816  000BDE  A803               	btfss	EscreveCaractereLCD@data,4,c
  1817  000BE0  D002               	goto	l80
  1818  000BE2  8883               	bsf	3971,4,c	;volatile
  1819  000BE4  D001               	goto	l1359
  1820  000BE6                     l80:
  1821                           
  1822                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
  1823  000BE6  9883               	bcf	3971,4,c	;volatile
  1824  000BE8                     l1359:
  1825                           
  1826                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
  1827  000BE8  AA03               	btfss	EscreveCaractereLCD@data,5,c
  1828  000BEA  D002               	goto	l82
  1829  000BEC  8A83               	bsf	3971,5,c	;volatile
  1830  000BEE  D001               	goto	l1363
  1831  000BF0                     l82:
  1832                           
  1833                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
  1834  000BF0  9A83               	bcf	3971,5,c	;volatile
  1835  000BF2                     l1363:
  1836                           
  1837                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
  1838  000BF2  AC03               	btfss	EscreveCaractereLCD@data,6,c
  1839  000BF4  D002               	goto	l84
  1840  000BF6  8C83               	bsf	3971,6,c	;volatile
  1841  000BF8  D001               	goto	l1367
  1842  000BFA                     l84:
  1843                           
  1844                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
  1845  000BFA  9C83               	bcf	3971,6,c	;volatile
  1846  000BFC                     l1367:
  1847                           
  1848                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
  1849  000BFC  AE03               	btfss	EscreveCaractereLCD@data,7,c
  1850  000BFE  D002               	goto	l86
  1851  000C00  8E83               	bsf	3971,7,c	;volatile
  1852  000C02  D001               	goto	l87
  1853  000C04                     l86:
  1854                           
  1855                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
  1856  000C04  9E83               	bcf	3971,7,c	;volatile
  1857  000C06                     l87:
  1858                           
  1859                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
  1860  000C06  8083               	bsf	3971,0,c	;volatile
  1861                           
  1862                           ;displayLCD.c: 358: Delay();
  1863  000C08  EC40  F007         	call	_Delay	;wreg free
  1864                           
  1865                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  1866  000C0C  9083               	bcf	3971,0,c	;volatile
  1867                           
  1868                           ;displayLCD.c: 360: Delay();
  1869  000C0E  EC40  F007         	call	_Delay	;wreg free
  1870                           
  1871                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  1872  000C12  A003               	btfss	EscreveCaractereLCD@data,0,c
  1873  000C14  D002               	goto	l88
  1874  000C16  8883               	bsf	3971,4,c	;volatile
  1875  000C18  D001               	goto	l89
  1876  000C1A                     l88:
  1877                           
  1878                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  1879  000C1A  9883               	bcf	3971,4,c	;volatile
  1880  000C1C                     l89:
  1881                           
  1882                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  1883  000C1C  A203               	btfss	EscreveCaractereLCD@data,1,c
  1884  000C1E  D002               	goto	l90
  1885  000C20  8A83               	bsf	3971,5,c	;volatile
  1886  000C22  D001               	goto	l91
  1887  000C24                     l90:
  1888                           
  1889                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  1890  000C24  9A83               	bcf	3971,5,c	;volatile
  1891  000C26                     l91:
  1892                           
  1893                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  1894  000C26  A403               	btfss	EscreveCaractereLCD@data,2,c
  1895  000C28  D002               	goto	l92
  1896  000C2A  8C83               	bsf	3971,6,c	;volatile
  1897  000C2C  D001               	goto	l93
  1898  000C2E                     l92:
  1899                           
  1900                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  1901  000C2E  9C83               	bcf	3971,6,c	;volatile
  1902  000C30                     l93:
  1903                           
  1904                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  1905  000C30  A603               	btfss	EscreveCaractereLCD@data,3,c
  1906  000C32  D002               	goto	l94
  1907  000C34  8E83               	bsf	3971,7,c	;volatile
  1908  000C36  D001               	goto	l95
  1909  000C38                     l94:
  1910                           
  1911                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  1912  000C38  9E83               	bcf	3971,7,c	;volatile
  1913  000C3A                     l95:
  1914                           
  1915                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  1916  000C3A  8083               	bsf	3971,0,c	;volatile
  1917                           
  1918                           ;displayLCD.c: 375: Delay();
  1919  000C3C  EC40  F007         	call	_Delay	;wreg free
  1920                           
  1921                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  1922  000C40  9083               	bcf	3971,0,c	;volatile
  1923                           
  1924                           ;displayLCD.c: 377: Delay();
  1925  000C42  EC40  F007         	call	_Delay	;wreg free
  1926  000C46  0012               	return		;funcret
  1927  000C48                     __end_of_EscreveCaractereLCD:
  1928                           	opt stack 0
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           postdec1	equ	0xFE5
  1936                           plusw1	equ	0xFE3
  1937                           fsr1l	equ	0xFE1
  1938                           indf2	equ	0xFDF
  1939                           postinc2	equ	0xFDE
  1940                           plusw2	equ	0xFDB
  1941                           fsr2h	equ	0xFDA
  1942                           fsr2l	equ	0xFD9
  1943                           status	equ	0xFD8
  1944                           
  1945 ;; *************** function _ConfiguraLCD *****************
  1946 ;; Defined at:
  1947 ;;		line 80 in file "displayLCD.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1961 ;;      Params:         0       0       0       0       0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1963 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1964 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1965 ;;Total ram usage:        1 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    2
  1968 ;; This function calls:
  1969 ;;		_Delay
  1970 ;;		_EscreveComandoLCD
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text11
  1977  000AAC                     __ptext11:
  1978                           	opt stack 0
  1979  000AAC                     _ConfiguraLCD:
  1980                           	opt stack 28
  1981                           
  1982                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  1983                           
  1984                           ;incstack = 0
  1985  000AAC  9495               	bcf	3989,2,c	;volatile
  1986                           
  1987                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  1988  000AAE  9295               	bcf	3989,1,c	;volatile
  1989                           
  1990                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  1991  000AB0  9095               	bcf	3989,0,c	;volatile
  1992                           
  1993                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  1994  000AB2  9895               	bcf	3989,4,c	;volatile
  1995                           
  1996                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  1997  000AB4  9A95               	bcf	3989,5,c	;volatile
  1998                           
  1999                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  2000  000AB6  9C95               	bcf	3989,6,c	;volatile
  2001                           
  2002                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  2003  000AB8  9E95               	bcf	3989,7,c	;volatile
  2004                           
  2005                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  2006  000ABA  9483               	bcf	3971,2,c	;volatile
  2007                           
  2008                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  2009  000ABC  9283               	bcf	3971,1,c	;volatile
  2010                           
  2011                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  2012  000ABE  9083               	bcf	3971,0,c	;volatile
  2013                           
  2014                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  2015  000AC0  9E83               	bcf	3971,7,c	;volatile
  2016                           
  2017                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  2018  000AC2  9C83               	bcf	3971,6,c	;volatile
  2019                           
  2020                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  2021  000AC4  8A83               	bsf	3971,5,c	;volatile
  2022                           
  2023                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  2024  000AC6  8883               	bsf	3971,4,c	;volatile
  2025                           
  2026                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  2027  000AC8  0EEA               	movlw	234
  2028  000ACA  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2029  000ACC  0EC3               	movlw	195
  2030  000ACE                     u1107:
  2031  000ACE  2EE8               	decfsz	wreg,f,c
  2032  000AD0  D7FE               	bra	u1107
  2033  000AD2  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2034  000AD4  D7FC               	bra	u1107
  2035  000AD6  F000               	nop	
  2036                           
  2037                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  2038  000AD8  8083               	bsf	3971,0,c	;volatile
  2039                           
  2040                           ;displayLCD.c: 117: Delay();
  2041  000ADA  EC40  F007         	call	_Delay	;wreg free
  2042                           
  2043                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  2044  000ADE  9083               	bcf	3971,0,c	;volatile
  2045                           
  2046                           ;displayLCD.c: 119: Delay();
  2047  000AE0  EC40  F007         	call	_Delay	;wreg free
  2048                           
  2049                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  2050  000AE4  0E4E               	movlw	78
  2051  000AE6  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2052  000AE8  0EEB               	movlw	235
  2053  000AEA                     u1117:
  2054  000AEA  2EE8               	decfsz	wreg,f,c
  2055  000AEC  D7FE               	bra	u1117
  2056  000AEE  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2057  000AF0  D7FC               	bra	u1117
  2058  000AF2  F000               	nop	
  2059                           
  2060                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  2061  000AF4  8083               	bsf	3971,0,c	;volatile
  2062                           
  2063                           ;displayLCD.c: 128: Delay();
  2064  000AF6  EC40  F007         	call	_Delay	;wreg free
  2065                           
  2066                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  2067  000AFA  9083               	bcf	3971,0,c	;volatile
  2068                           
  2069                           ;displayLCD.c: 130: Delay();
  2070  000AFC  EC40  F007         	call	_Delay	;wreg free
  2071                           
  2072                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  2073  000B00  0E4E               	movlw	78
  2074  000B02  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  2075  000B04  0EEB               	movlw	235
  2076  000B06                     u1127:
  2077  000B06  2EE8               	decfsz	wreg,f,c
  2078  000B08  D7FE               	bra	u1127
  2079  000B0A  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2080  000B0C  D7FC               	bra	u1127
  2081  000B0E  F000               	nop	
  2082                           
  2083                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  2084  000B10  8083               	bsf	3971,0,c	;volatile
  2085                           
  2086                           ;displayLCD.c: 139: Delay();
  2087  000B12  EC40  F007         	call	_Delay	;wreg free
  2088                           
  2089                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  2090  000B16  9083               	bcf	3971,0,c	;volatile
  2091                           
  2092                           ;displayLCD.c: 141: Delay();
  2093  000B18  EC40  F007         	call	_Delay	;wreg free
  2094                           
  2095                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  2096  000B1C  9E83               	bcf	3971,7,c	;volatile
  2097                           
  2098                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  2099  000B1E  9C83               	bcf	3971,6,c	;volatile
  2100                           
  2101                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  2102  000B20  8A83               	bsf	3971,5,c	;volatile
  2103                           
  2104                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  2105  000B22  9883               	bcf	3971,4,c	;volatile
  2106                           
  2107                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  2108  000B24  8083               	bsf	3971,0,c	;volatile
  2109                           
  2110                           ;displayLCD.c: 152: Delay();
  2111  000B26  EC40  F007         	call	_Delay	;wreg free
  2112                           
  2113                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  2114  000B2A  9083               	bcf	3971,0,c	;volatile
  2115                           
  2116                           ;displayLCD.c: 154: Delay();
  2117  000B2C  EC40  F007         	call	_Delay	;wreg free
  2118                           
  2119                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  2120  000B30  0E28               	movlw	40
  2121  000B32  ECA5  F005         	call	_EscreveComandoLCD
  2122                           
  2123                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  2124  000B36  0E06               	movlw	6
  2125  000B38  ECA5  F005         	call	_EscreveComandoLCD
  2126                           
  2127                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  2128  000B3C  0E0E               	movlw	14
  2129  000B3E  ECA5  F005         	call	_EscreveComandoLCD
  2130                           
  2131                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  2132  000B42  0E01               	movlw	1
  2133  000B44  ECA5  F005         	call	_EscreveComandoLCD
  2134  000B48  0012               	return		;funcret
  2135  000B4A                     __end_of_ConfiguraLCD:
  2136                           	opt stack 0
  2137                           tblptru	equ	0xFF8
  2138                           tblptrh	equ	0xFF7
  2139                           tblptrl	equ	0xFF6
  2140                           tablat	equ	0xFF5
  2141                           postinc0	equ	0xFEE
  2142                           wreg	equ	0xFE8
  2143                           postdec1	equ	0xFE5
  2144                           plusw1	equ	0xFE3
  2145                           fsr1l	equ	0xFE1
  2146                           indf2	equ	0xFDF
  2147                           postinc2	equ	0xFDE
  2148                           plusw2	equ	0xFDB
  2149                           fsr2h	equ	0xFDA
  2150                           fsr2l	equ	0xFD9
  2151                           status	equ	0xFD8
  2152                           
  2153 ;; *************** function _EscreveComandoLCD *****************
  2154 ;; Defined at:
  2155 ;;		line 172 in file "displayLCD.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  cmd             1    wreg     unsigned char 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  cmd             1    2[COMRAM] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2169 ;;      Params:         0       0       0       0       0       0       0       0       0
  2170 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2172 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2173 ;;Total ram usage:        1 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    1
  2176 ;; This function calls:
  2177 ;;		_Delay
  2178 ;; This function is called by:
  2179 ;;		_ConfiguraLCD
  2180 ;;		_main
  2181 ;;		_CriaCaractereLCD
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text12
  2186  000B4A                     __ptext12:
  2187                           	opt stack 0
  2188  000B4A                     _EscreveComandoLCD:
  2189                           	opt stack 29
  2190                           
  2191                           ;incstack = 0
  2192                           ;EscreveComandoLCD@cmd stored from wreg
  2193  000B4A  6E03               	movwf	EscreveComandoLCD@cmd,c
  2194                           
  2195                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  2196  000B4C  9483               	bcf	3971,2,c	;volatile
  2197                           
  2198                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  2199  000B4E  9283               	bcf	3971,1,c	;volatile
  2200                           
  2201                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  2202  000B50  9083               	bcf	3971,0,c	;volatile
  2203                           
  2204                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  2205  000B52  A803               	btfss	EscreveComandoLCD@cmd,4,c
  2206  000B54  D002               	goto	l29
  2207  000B56  8883               	bsf	3971,4,c	;volatile
  2208  000B58  D001               	goto	l1425
  2209  000B5A                     l29:
  2210                           
  2211                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  2212  000B5A  9883               	bcf	3971,4,c	;volatile
  2213  000B5C                     l1425:
  2214                           
  2215                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  2216  000B5C  AA03               	btfss	EscreveComandoLCD@cmd,5,c
  2217  000B5E  D002               	goto	l31
  2218  000B60  8A83               	bsf	3971,5,c	;volatile
  2219  000B62  D001               	goto	l1429
  2220  000B64                     l31:
  2221                           
  2222                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  2223  000B64  9A83               	bcf	3971,5,c	;volatile
  2224  000B66                     l1429:
  2225                           
  2226                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  2227  000B66  AC03               	btfss	EscreveComandoLCD@cmd,6,c
  2228  000B68  D002               	goto	l33
  2229  000B6A  8C83               	bsf	3971,6,c	;volatile
  2230  000B6C  D001               	goto	l1433
  2231  000B6E                     l33:
  2232                           
  2233                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  2234  000B6E  9C83               	bcf	3971,6,c	;volatile
  2235  000B70                     l1433:
  2236                           
  2237                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  2238  000B70  AE03               	btfss	EscreveComandoLCD@cmd,7,c
  2239  000B72  D002               	goto	l35
  2240  000B74  8E83               	bsf	3971,7,c	;volatile
  2241  000B76  D001               	goto	l36
  2242  000B78                     l35:
  2243                           
  2244                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  2245  000B78  9E83               	bcf	3971,7,c	;volatile
  2246  000B7A                     l36:
  2247                           
  2248                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  2249  000B7A  8083               	bsf	3971,0,c	;volatile
  2250                           
  2251                           ;displayLCD.c: 191: Delay();
  2252  000B7C  EC40  F007         	call	_Delay	;wreg free
  2253                           
  2254                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  2255  000B80  9083               	bcf	3971,0,c	;volatile
  2256                           
  2257                           ;displayLCD.c: 193: Delay();
  2258  000B82  EC40  F007         	call	_Delay	;wreg free
  2259                           
  2260                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  2261  000B86  A003               	btfss	EscreveComandoLCD@cmd,0,c
  2262  000B88  D002               	goto	l37
  2263  000B8A  8883               	bsf	3971,4,c	;volatile
  2264  000B8C  D001               	goto	l38
  2265  000B8E                     l37:
  2266                           
  2267                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  2268  000B8E  9883               	bcf	3971,4,c	;volatile
  2269  000B90                     l38:
  2270                           
  2271                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  2272  000B90  A203               	btfss	EscreveComandoLCD@cmd,1,c
  2273  000B92  D002               	goto	l39
  2274  000B94  8A83               	bsf	3971,5,c	;volatile
  2275  000B96  D001               	goto	l40
  2276  000B98                     l39:
  2277                           
  2278                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  2279  000B98  9A83               	bcf	3971,5,c	;volatile
  2280  000B9A                     l40:
  2281                           
  2282                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  2283  000B9A  A403               	btfss	EscreveComandoLCD@cmd,2,c
  2284  000B9C  D002               	goto	l41
  2285  000B9E  8C83               	bsf	3971,6,c	;volatile
  2286  000BA0  D001               	goto	l42
  2287  000BA2                     l41:
  2288                           
  2289                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  2290  000BA2  9C83               	bcf	3971,6,c	;volatile
  2291  000BA4                     l42:
  2292                           
  2293                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  2294  000BA4  A603               	btfss	EscreveComandoLCD@cmd,3,c
  2295  000BA6  D002               	goto	l43
  2296  000BA8  8E83               	bsf	3971,7,c	;volatile
  2297  000BAA  D001               	goto	l44
  2298  000BAC                     l43:
  2299                           
  2300                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  2301  000BAC  9E83               	bcf	3971,7,c	;volatile
  2302  000BAE                     l44:
  2303                           
  2304                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  2305  000BAE  8083               	bsf	3971,0,c	;volatile
  2306                           
  2307                           ;displayLCD.c: 207: Delay();
  2308  000BB0  EC40  F007         	call	_Delay	;wreg free
  2309                           
  2310                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  2311  000BB4  9083               	bcf	3971,0,c	;volatile
  2312                           
  2313                           ;displayLCD.c: 209: Delay();
  2314  000BB6  EC40  F007         	call	_Delay	;wreg free
  2315                           
  2316                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  2317  000BBA  0403               	decf	EscreveComandoLCD@cmd,w,c
  2318  000BBC  B4D8               	btfsc	status,2,c
  2319  000BBE  D008               	goto	l1461
  2320  000BC0  0E02               	movlw	2
  2321  000BC2  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  2322  000BC4  B4D8               	btfsc	status,2,c
  2323  000BC6  D004               	goto	l1461
  2324  000BC8  0E03               	movlw	3
  2325  000BCA  1803               	xorwf	EscreveComandoLCD@cmd,w,c
  2326  000BCC  A4D8               	btfss	status,2,c
  2327  000BCE  0012               	return	
  2328  000BD0                     l1461:
  2329                           
  2330                           ;displayLCD.c: 215: { Delay(); }
  2331  000BD0  EC40  F007         	call	_Delay	;wreg free
  2332  000BD4  0012               	return	
  2333  000BD6                     __end_of_EscreveComandoLCD:
  2334                           	opt stack 0
  2335                           tblptru	equ	0xFF8
  2336                           tblptrh	equ	0xFF7
  2337                           tblptrl	equ	0xFF6
  2338                           tablat	equ	0xFF5
  2339                           postinc0	equ	0xFEE
  2340                           wreg	equ	0xFE8
  2341                           postdec1	equ	0xFE5
  2342                           plusw1	equ	0xFE3
  2343                           fsr1l	equ	0xFE1
  2344                           indf2	equ	0xFDF
  2345                           postinc2	equ	0xFDE
  2346                           plusw2	equ	0xFDB
  2347                           fsr2h	equ	0xFDA
  2348                           fsr2l	equ	0xFD9
  2349                           status	equ	0xFD8
  2350                           
  2351 ;; *************** function _Delay *****************
  2352 ;; Defined at:
  2353 ;;		line 54 in file "displayLCD.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  Cnt2            1    1[COMRAM] unsigned char 
  2358 ;;  Cnt1            1    0[COMRAM] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2368 ;;      Params:         0       0       0       0       0       0       0       0       0
  2369 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2371 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2372 ;;Total ram usage:        2 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_ConfiguraLCD
  2378 ;;		_EscreveComandoLCD
  2379 ;;		_EnderecoCursor
  2380 ;;		_EscreveCaractereLCD
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text13
  2385  000E80                     __ptext13:
  2386                           	opt stack 0
  2387  000E80                     _Delay:
  2388                           	opt stack 28
  2389                           
  2390                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  2391                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  2392                           
  2393                           ;incstack = 0
  2394  000E80  0E00               	movlw	0
  2395  000E82  6E01               	movwf	Delay@Cnt1,c
  2396  000E84                     l1297:
  2397  000E84  0E1D               	movlw	29
  2398  000E86  6401               	cpfsgt	Delay@Cnt1,c
  2399  000E88  D001               	goto	l19
  2400  000E8A  0012               	return	
  2401  000E8C                     l19:
  2402                           
  2403                           ;displayLCD.c: 59: {
  2404                           ;displayLCD.c: 60: __nop();
  2405  000E8C  F000               	nop	
  2406                           
  2407                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  2408  000E8E  0E00               	movlw	0
  2409  000E90  6E02               	movwf	Delay@Cnt2,c
  2410  000E92                     l1303:
  2411  000E92  0E1D               	movlw	29
  2412  000E94  6402               	cpfsgt	Delay@Cnt2,c
  2413  000E96  D001               	goto	l21
  2414  000E98  D003               	goto	l1311
  2415  000E9A                     l21:
  2416                           
  2417                           ;displayLCD.c: 62: {
  2418                           ;displayLCD.c: 63: __nop();
  2419  000E9A  F000               	nop	
  2420  000E9C  2A02               	incf	Delay@Cnt2,f,c
  2421  000E9E  D7F9               	goto	l1303
  2422  000EA0                     l1311:
  2423  000EA0  2A01               	incf	Delay@Cnt1,f,c
  2424  000EA2  D7F0               	goto	l1297
  2425  000EA4                     __end_of_Delay:
  2426                           	opt stack 0
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           postdec1	equ	0xFE5
  2434                           plusw1	equ	0xFE3
  2435                           fsr1l	equ	0xFE1
  2436                           indf2	equ	0xFDF
  2437                           postinc2	equ	0xFDE
  2438                           plusw2	equ	0xFDB
  2439                           fsr2h	equ	0xFDA
  2440                           fsr2l	equ	0xFD9
  2441                           status	equ	0xFD8
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           postinc0	equ	0xFEE
  2447                           wreg	equ	0xFE8
  2448                           postdec1	equ	0xFE5
  2449                           plusw1	equ	0xFE3
  2450                           fsr1l	equ	0xFE1
  2451                           indf2	equ	0xFDF
  2452                           postinc2	equ	0xFDE
  2453                           plusw2	equ	0xFDB
  2454                           fsr2h	equ	0xFDA
  2455                           fsr2l	equ	0xFD9
  2456                           status	equ	0xFD8
  2457                           
  2458                           	psect	rparam
  2459  0000                     tblptru	equ	0xFF8
  2460                           tblptrh	equ	0xFF7
  2461                           tblptrl	equ	0xFF6
  2462                           tablat	equ	0xFF5
  2463                           postinc0	equ	0xFEE
  2464                           wreg	equ	0xFE8
  2465                           postdec1	equ	0xFE5
  2466                           plusw1	equ	0xFE3
  2467                           fsr1l	equ	0xFE1
  2468                           indf2	equ	0xFDF
  2469                           postinc2	equ	0xFDE
  2470                           plusw2	equ	0xFDB
  2471                           fsr2h	equ	0xFDA
  2472                           fsr2l	equ	0xFD9
  2473                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    142
    Data        7
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      59
    BANK0           160    104     104
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@Texto_5(BANK0[17]), main@Texto_4(BANK0[17]), main@Texto_3(BANK0[17]), main@Texto_2(BANK0[17]), 
		 -> main@Texto_1(BANK0[17]), main@Texto_0(BANK0[17]), EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_EscreveInteiroLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveInteiroLCD->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               106   106      0    5071
                                             33 COMRAM     2     2      0
                                              0 BANK0    104   104      0
                       _ConfiguraLCD
                  _EscreveComandoLCD
                 _EscreveFraseRamLCD
                  _EscreveInteiroLCD
                   _PosicaoCursorLCD
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2      86
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _PosicaoCursorLCD                                     3     2      1     836
                                              3 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (2) _EnderecoCursor                                       1     1      0     246
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _EscreveInteiroLCD                                    9     7      2    2454
                                             24 COMRAM     9     7      2
                 _EscreveFraseRamLCD
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1554
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1199
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EscreveFraseRamLCD                                   2     0      2     761
                                              3 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (3) _EscreveCaractereLCD                                  1     1      0     268
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     426
                                              3 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (1) _EscreveComandoLCD                                    1     1      0     334
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     2      0      92
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveComandoLCD
     _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _EscreveInteiroLCD
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      68       5       65.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      3B       1       62.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      20        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Oct 02 15:41:44 2020

                          l21 0E9A                            l31 0B64                            l40 0B9A  
                          l41 0BA2                            l33 0B6E                            l42 0BA4  
                          l19 0E8C                            l43 0BAC                            l35 0B78  
                          l51 0C5A                            l44 0BAE                            l36 0B7A  
                          l60 0C90                            l37 0B8E                            l29 0B5A  
                          l61 0C98                            l53 0C64                            l38 0B90  
                          l62 0C9A                            l70 0CBC                            l39 0B98  
                          l63 0CA2                            l55 0C6E                            l80 0BE6  
                          l64 0CA4                            l56 0C70                            l57 0C84  
                          l90 0C24                            l82 0BF0                            l58 0C86  
                          l91 0C26                            l59 0C8E                            l92 0C2E  
                          l84 0BFA                            l93 0C30                            l94 0C38  
                          l86 0C04                            l95 0C3A                            l87 0C06  
                          l88 0C1A                            l89 0C1C                           l177 09AA  
                         l666 0D5C                           l587 0A88                           l676 0DE0  
                         u961 0DF4                   main@Texto_0 0060                   main@Texto_1 0071  
                 main@Texto_2 0082                   main@Texto_3 0093                   main@Texto_4 00A4  
                 main@Texto_5 00B5                           wreg 000FE8                          l1311 0EA0  
                        l1303 0E92                          l1321 0D2A                          l1401 0A4A  
                        l1323 0D32                          l1333 0D52                          l1325 0D36  
                        l1341 0DB6                          l1343 0DBE                          l1503 0D8A  
                        l1433 0B70                          l1425 0B5C                          l1513 0E70  
                        l1345 0DC2                          l1601 0EA6                          l1363 0BF2  
                        l1603 0EB6                          l1461 0BD0                          l1429 0B66  
                        l1509 0E5E                          l1349 0DD6                          l1367 0BFC  
                        l1359 0BE8                          l1391 0A10                          l1297 0E84  
                        l1473 0C66                          l1469 0C5C                          l1581 0CE4  
                        l1573 0CC8                          l1585 0CF2                          l1577 0CD6  
                        l1589 0CF8                          l1697 09A6                          STR_1 088F  
                        u1020 08AA                          u1030 08C2                          u1040 08DA  
                        u1050 08F2                          u1107 0ACE                          u1060 090A  
                        u1117 0AEA                          u1070 0922                          u1127 0B06  
                        u1097 0EAC                          _main 089C                          _itoa 0D66  
                        fsr2h 000FDA                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          _utoa 0A08                          start 0000  
                ___param_bank 000000    __end_of_EscreveFraseRamLCD 0E80                         ?_main 0001  
                       ?_itoa 0011                         ?_utoa 0008               __end_of___lwdiv 0D66  
             __end_of___lwmod 0DEA                         _Delay 0E80               __end_of_dpowers 0829  
                main@valorAN0 00C6          EscreveComandoLCD@cmd 0003                         tablat 000FF5  
                       plusw1 000FE3                         plusw2 000FDB                         utoa@c 0010  
                       utoa@v 000E                         status 000FD8               __initialization 0E26  
                __end_of_main 0A08                  __end_of_itoa 0DA8                  __end_of_utoa 0AAC  
                      ??_main 0022          __end_of_ConfiguraLCD 0B4A                        ??_itoa 0017  
                      ??_utoa 000E                 __activetblptr 000002             _EscreveComandoLCD 0B4A  
                      ?_Delay 0001            ?_EscreveComandoLCD 0001                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _ADRESH 000FC4  
                      _ADRESL 000FC3           ??_EscreveComandoLCD 0003              __end_of_delay_ms 0EC6  
           ?_PosicaoCursorLCD 0004                     ??___lwdiv 0005  __size_of_EscreveCaractereLCD 0072  
                   ??___lwmod 0005            ??_PosicaoCursorLCD 0005                        clear_0 0E4C  
   __end_of_EscreveComandoLCD 0BD6                        itoa@cp 0017             _EscreveInteiroLCD 0DEA  
                __pdataCOMRAM 0035                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8            ?_EscreveInteiroLCD 0019  
     __size_of_EnderecoCursor 006A           ??_EscreveInteiroLCD 001B                    __accesstop 0060  
     __end_of__initialization 0E52                 ___rparam_used 000001                 __end_of_Delay 0EA4  
              __pcstackCOMRAM 0001     __end_of_EscreveInteiroLCD 0E26                       ??_Delay 0001  
       __size_of_ConfiguraLCD 009E    __size_of_EscreveComandoLCD 008C            _EscreveFraseRamLCD 0E5C  
                   ?_delay_ms 0001           ?_EscreveFraseRamLCD 0004                  _ConfiguraLCD 0AAC  
                     __Hparam 0000                       __Lparam 0000                       ___lwdiv 0D14  
                     ___lwmod 0DA8          ??_EscreveFraseRamLCD 0006                  __psmallconst 0800  
                     __pcinit 0E26                       __ramtop 0800    __size_of_EscreveInteiroLCD 003C  
                     __ptext0 089C                       __ptext1 0EA4                       __ptext2 0CB2  
                     __ptext3 0C48                       __ptext4 0DEA                       __ptext5 0D66  
                     __ptext6 0A08                       __ptext7 0DA8                       __ptext8 0D14  
                     __ptext9 0E5C                       _dpowers 0801                    ??_delay_ms 0003  
              _EnderecoCursor 0C48                     Delay@Cnt1 0001                     Delay@Cnt2 0002  
         _EscreveCaractereLCD 0BD6          end_of_initialization 0E52                       ftoa@buf 0024  
                     itoa@buf 0011                       itoa@val 0013                 __Lmediumconst 0000  
           __end_ofmain@F4001 085C             __end_ofmain@F4003 084B             __end_ofmain@F4005 083A  
           __end_ofmain@F3995 088F             __end_ofmain@F3997 087E             __end_ofmain@F3999 086D  
                     postdec1 000FE5                       postinc0 000FEE                       postinc2 000FDE  
        ?_EscreveCaractereLCD 0001                       utoa@buf 0008                       utoa@val 000A  
 PosicaoCursorLCD@EnderecoLCD 0006                     _PORTDbits 000F83        __end_of_EnderecoCursor 0CB2  
                   _TRISDbits 000F95     __size_of_PosicaoCursorLCD 0062         ??_EscreveCaractereLCD 0003  
               __pidataCOMRAM 0EC6               ?_EnderecoCursor 0001           start_initialization 0E26  
    EscreveFraseRamLCD@buffer 0004                   __pbssCOMRAM 0024                 __pcstackBANK0 0060  
           __size_of_delay_ms 0022              ___lwdiv@dividend 0001                      ?___lwdiv 0001  
                    ?___lwmod 0001        EscreveInteiroLCD@F4004 0035                   __smallconst 0800  
              __size_of_Delay 0024              _PosicaoCursorLCD 0CB2              ___lwdiv@quotient 0005  
      EscreveInteiroLCD@valor 0019        EscreveInteiroLCD@texto 001B        EnderecoCursor@endereco 0003  
     EscreveCaractereLCD@data 0003                     main@F4001 084B                     main@F4003 083A  
                   main@F4005 0829                     main@F3995 087E                     main@F3997 086D  
                   main@F3999 085C   __size_of_EscreveFraseRamLCD 0024                    _ADCON0bits 000FC2  
                   copy_data0 0E3A         delay_ms@tempodeatraso 0001                      __Hrparam 0000  
                    __Lrparam 0000              ??_EnderecoCursor 0003              __size_of___lwdiv 0052  
            __size_of___lwmod 0042                      _delay_ms 0EA4               ___lwdiv@divisor 0003  
             ___lwdiv@counter 0007                      __ptext10 0BD6                      __ptext11 0AAC  
                    __ptext12 0B4A                      __ptext13 0E80                 __size_of_main 016C  
               __size_of_itoa 0042                 __size_of_utoa 00A4   __end_of_EscreveCaractereLCD 0C48  
                    itoa@base 0015              ___lwmod@dividend 0001                 ?_ConfiguraLCD 0001  
    __end_of_PosicaoCursorLCD 0D14        PosicaoCursorLCD@coluna 0004                      utoa@base 000C  
             ___lwmod@divisor 0003               ___lwmod@counter 0005         PosicaoCursorLCD@linha 0005  
              ??_ConfiguraLCD 0004  
